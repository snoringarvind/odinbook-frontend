{"version":3,"sources":["Components/Navigation/Navigation.js","Components/UserDetail/UserFriendCard.js","Components/UserDetail/UserFriend.js","Components/Context.js","Components/Login/Login.js","Components/Logout.js","Components/Signup/Signup.js","Components/Search/SearchBar.js","Components/Search/SearchResultCard.js","Components/Search/SearchResult.js","Components/UserDetail/UserNav.js","Components/UserDetail/UserAboutCard.js","Components/UserDetail/UserAbout.js","Components/MyPosts/MyPostForm.js","Components/MyPosts/MyPostCreate.js","Components/MyPosts/MyPostUpdate.js","Components/Comment/CommentDelete.js","Components/CommentCard/CommentCard.js","Components/UserDetail/UserLikesCard.js","Components/UserDetail/UserLikes.js","Components/Comment/CommentForm.js","Components/Comment/CommentCreate.js","Components/UserDetail/UserPostCard.js","Components/MyPosts/MyPostDelete.js","Components/WelcomeMsg/WelcomeMsg.js","Components/UserDetail/UserPost.js","Components/UserDetail/UserDetailFriendBtn.js","Components/UserDetail/UserDetail.js","Components/Hamburger/Hamburger.js","Components/Chat/ChatMap.js","Components/Chat/ChatCard.js","Components/Chat/Chat.js","Components/ChatList/ChatListCard.js","Components/ChatList/ChatList.js","Components/Home/Menu.js","Components/PageNotFound/PageNotFound.js","resume.png","Components/Resume/Resume.js","Components/Explore/ExploreCard.js","Components/Explore/Explore.js","Components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","to","label","match","useRouteMatch","path","isExact","arr","useLocation","pathname","split","element","document","querySelector","value","className","UserFriendCard","index","friendBtn","setFriendBtn","userid","isChanged","setIsChanged","useState","error","setError","useContext","OdinBookContext","jwtData","myFriendsValue","axios_request","myFriends","setMyFriends","pp","setpp","useEffect","findIndex","x","username","fname","toLowerCase","state","_id","lname","sub","style","color","onClick","route","data","method","axios_error","err","message","axios_response","response","splice","get_index","push","clickHandler","UserFriend","getLoading","setGetLoading","result","setResult","didMyFriendsMountValue","didMyFriendsMount","setDidMyFriendsMount","location","local_history","JSON","parse","localStorage","getItem","make_server_request","friend_list_route","h","Array","length","fill","zIndex","role","map","uniqid","createContext","OdinBookProvider","children","searchValueChange","setSearchValueChange","search","searchBarState","setSearchBarState","myAbout","setMyAbout","didMyAboutMount","setdidMyAboutMount","myPosts","setMyposts","didMyPostsMount","setDidMyPostsMount","myNewsfeed","setMyNewsFeed","didMyNewsFeedMount","setDidMyNewsFeedMount","myChatList","setMyChatList","isRead","setIsRead","didMyChatListMount","setDidMyChatListMount","loading","setLoading","isAuth","setIsAuth","errors","setErrors","setJwtData","serverUrl","a","token","headers","authorization","axios","url","response_data","setItem","stringify","console","log","status","socket","setSocket","isLogin","socket12","socketIOClient","withCredentials","emit","user","Provider","searchValue","searchBarStateValue","myAboutValue","myPostsValue","didMyPostsMountValue","myNewsFeedValue","didMyNewsFeedMountValue","didMyAboutMountValue","isAuthValue","myChatListValue","isReadValue","didMyChatListMountValue","isArray","i","msg","display_errors","Login","isloginClick","setIsLoginClick","refUsername","useRef","refPassword","postLoading","setPostLoading","axios_login","cb_error","cb_response","current","password","autoComplete","htmlFor","type","name","id","placeholder","ref","e","preventDefault","Logout","clear","window","reload","Signup","signupClick","setSignupClick","ref_fname","ref_lname","ref_username","ref_password","SearchBar","history","useHistory","ref_name","onSubmit","SearchResultCard","arrg","stopPropagation","SearchResult","params","useParams","user_list_route","UserNav","UseraAboutCard","objkey","clickIndex","setClickIndex","ee","setee","tooltip","setTooltip","empty_name","setEmpty_name","setState","str","bio","nickName","school","college","working","relationshipStatus","book","food","gender","dob","email","phone","changeHandler","getElementById","target","tagName","element_id","focus","border","boxShadow","outline","onChange","maxLength","selected","start","defaultValue","submitHandler","UserAbout","g","profile_route","__v","Object","keys","addEventListener","key","MyPostForm","update_value","formTitle","user_post_response","setCreateClick","createClick","updateClick","setUpdateClick","refTitle","refContenText","title","content_text","MypostCreate","MyPostUpdate","postid","updateData","mypost_update_route","CommentDelete","setComments","commentid","comments","setCommentOptionIndex","mypost_delete_route","comment_list","CommentCard","comment","postIndex","commentOptionIndex","commentDeleteClick","setCommentDeleteClick","backgroundColor","UserLikesCard","setUsersLikedIndex","toString","UserLikes","likeList","setLikeList","getLikeLoading","setGetLikeLoading","like","get_users_liked","CommentForm","updateValue","valueRef","remove_empty","display","post_comment","CommentCreate","UserPostCard","setPostid","setUpdateData","setUpdateIndex","indexOfCardClicked","setindexOfCardClicked","isOwner","setDeleteClick","likeClick","deleteClick","setPostIndex","setLikeClick","UserLikedIndex","postsLength","likeLength","setLikeLength","cardError","setCardError","commentError","setCommentError","commentIconClicked","setCommentIconClicked","commentsLoading","setCommentsLoading","onlyOneClick","setonlyOneClick","height","scrollHeight","scrollTo","includes","Number","minute","Date","created_at","getMinutes","hour","getHours","copyState","setCopyState","toLocaleDateString","borderRadius","like_post_route","like_post","check","comments_route","get_comments","undefined","createElement","href","body","appendChild","select","execCommand","removeChild","setTimeout","MyPostDelete","user_delete_response","deleteHandler","WelcomeMsg","UserPost","from","setMyPosts","isWelcomeMsgClick","setIsWelcomeMsgClick","setIsOwner","updateIndex","get_posts","post_list_route","get_myfriends","elemnt_welcome_msg","unshift","UserDetailFriendBtn","UserDetail","Hamburger","ChatMap","d","yearstr","splityear","createdAt","getFullYear","getDate","getMonth","ChatCard","msgArr","setMsgArr","save_isread_false","last_msg","toISOString","save_received","save_sent","save_messages_on_database","sort_arr","sort","b","Chat","tempResponse","setTempResponse","setResponse","mymsgloading","setmsgloading","responseloading","setresponseloading","myMsg","setMyMsg","on","Promise","all","get_responses","get_my_messages","save_isreadtrue","newArr","message_container","v","sorted","is_read_index","isread","ChatListCard","no_unread_msgs","date","month","year","ChatList","chatListLoading","setChatListLoading","isreadLoading","setIsreadLoading","tempIsread","settempIsread","ischange","setischange","received","sent","forEach","dupl_index","users","Menu","isClick","setIsclick","classList","p","PageNotFound","Resume","src","resume","alt","ExploreCard","Explore","get_friends_loading","setGet_friends_loading","get_my_friends","options","find","Home","background","exact","exect","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4e15ff85.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  useRouteMatch,\n  Link,\n  useLocation,\n  useParams,\n  useHistory,\n} from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ to, label }) => {\n  let match = useRouteMatch({ path: to });\n\n  if (match != null) {\n    match = match.isExact ? true : false;\n  } else {\n    match = false;\n  }\n\n  const location = useLocation();\n\n  const arr = location.pathname.split(\"/\");\n\n  const element = document.querySelector(\"#search\");\n\n  if (element) {\n    if (arr[1] !== \"search\") {\n      element.value = \"\";\n    }\n  }\n  return (\n    <div className={match ? \"active nav-links\" : \"nav-links\"}>\n      <Link to={to}>\n        <i className={label}></i>\n      </Link>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\n\nconst UserFriendCard = ({\n  value,\n  index,\n  friendBtn,\n  setFriendBtn,\n  userid,\n  isChanged,\n  setIsChanged,\n  path,\n}) => {\n  const [error, setError] = useState(\"\");\n\n  const { jwtData, myFriendsValue, axios_request } = useContext(\n    OdinBookContext\n  );\n\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  //removes friend\n  const clickHandler = () => {\n    // if i don't do this it show 'cannot update state after the component is unmounted'\n    //becoz you are not waiting for the response and directly deleting the user from the sreen\n    // if (personid.toString() !== userid.toString()) {\n    //   setBtnLoading(true);\n    //   setIsClicked(!isClicked);\n    // }\n\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {\n      // console.log(response);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    // only do this for the owner,,, bcoz it deletes the user from the screen\n    if (jwtData.sub == userid || path == \"myfriends\") {\n      myFriends.splice(index, 1);\n      setMyFriends(myFriends);\n      setIsChanged(!isChanged);\n    }\n\n    if (jwtData.sub !== userid) {\n      if (friendBtn[index] == false) {\n        const get_index = myFriends.findIndex(\n          (x) => x.username == value.username\n        );\n        if (get_index !== -1) {\n          myFriends.splice(get_index, 1);\n          setMyFriends(myFriends);\n        }\n      } else {\n        myFriends.push(value);\n      }\n    }\n  };\n\n  const [pp, setpp] = useState(false);\n\n  useEffect(() => {\n    const check = myFriends.findIndex((x) => x.username === value.username);\n\n    if (check !== -1) {\n      friendBtn[index] = true;\n      setFriendBtn(friendBtn);\n    }\n    setpp(!pp);\n  }, []);\n  return (\n    <div className=\"UserFriendCard\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <div className=\"profile-picture\">\n            {[...value.fname[0].toLowerCase()]}\n          </div>\n          <div className=\"name-container\">\n            <Link\n              to={{\n                pathname: `/user/${value.username}/posts`,\n                state: {\n                  userid: value._id,\n                  fname: value.fname,\n                  lname: value.lname,\n                  username: value.username,\n                },\n              }}\n            >\n              <div className=\"name\">\n                <span>{value.fname} </span>\n                <span>{value.lname}</span>\n              </div>\n            </Link>\n            <div className=\"username\">{value.username}</div>\n          </div>\n          {jwtData.sub !== value._id && (\n            <div\n              className=\"add-btn\"\n              style={{\n                color:\n                  path == \"myfriends\"\n                    ? \"red\"\n                    : jwtData.sub === userid\n                    ? \"red\"\n                    : friendBtn[index]\n                    ? \"red\"\n                    : \"blue\",\n              }}\n              onClick={() => {\n                friendBtn[index] = !friendBtn[index];\n                setFriendBtn(friendBtn);\n                setpp(!pp);\n\n                clickHandler();\n              }}\n            >\n              {(jwtData.sub == userid || path === \"myfriends\") && (\n                <div className=\"add-btn fas fa-user-minus\"></div>\n              )}\n              {jwtData.sub !== userid && path !== \"myfriends\" && (\n                <div\n                  // style={{ color: \"blue\" }}\n                  className={\n                    friendBtn[index]\n                      ? \"add-btn fas fa-user-minus\"\n                      : \"add-btn fas fa-user-plus\"\n                  }\n                ></div>\n              )}\n            </div>\n          )}\n          {/* value._id woh idividual friend ka id hain and userid jiska profile visit kar rahe hain uska id hain */}\n          {jwtData.sub !== value._id && (\n            <div className=\"chat-link-container\">\n              <Link\n                to={{\n                  pathname: \"/chat\",\n                  state: {\n                    userid: value._id,\n                    fname: value.fname,\n                    lname: value.lname,\n                    username: value.username,\n                  },\n                }}\n              >\n                <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n              </Link>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserFriendCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport \"./UserFriend.css\";\nimport UserFriendCard from \"./UserFriendCard\";\n\nconst UserFriend = ({ path }) => {\n  const [error, setError] = useState(\"\");\n  const [getLoading, setGetLoading] = useState(true);\n  const [result, setResult] = useState([]);\n\n  const [friendBtn, setFriendBtn] = useState([]);\n\n  const [isChanged, setIsChanged] = useState(false);\n  const { myFriendsValue, didMyFriendsMountValue, axios_request } = useContext(\n    OdinBookContext\n  );\n\n  const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n\n  const [myFriends, setMyFriends] = myFriendsValue;\n  const location = useLocation();\n  let userid;\n  let username;\n  let fname;\n  let lname;\n  //since there will be no location.state for myfriends route.\n  if (path !== \"myfriends\") {\n    const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n    userid = local_history.userid;\n    fname = local_history.fname;\n    lname = local_history.lname;\n  }\n\n  const make_server_request = () => {\n    let friend_list_route;\n    if (path == \"myfriends\") {\n      friend_list_route = `/friend/${jwtData.sub}`;\n    } else {\n      friend_list_route = `/friend/${userid}`;\n    }\n    const friend_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      if (path == \"myfriends\") {\n        setMyFriends(response.data);\n      } else {\n        if (userid == jwtData.sub) {\n          setMyFriends(response.data);\n        } else {\n          const h = Array(response.data.length).fill(false);\n          setFriendBtn(h);\n        }\n      }\n      setResult(response.data);\n      setGetLoading(false);\n    };\n\n    axios_request({\n      route: friend_list_route,\n      data: \"\",\n      method: friend_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n  const { jwtData } = useContext(OdinBookContext);\n\n  useEffect(() => {\n    if (path == \"myfriends\") {\n      if (didMyFriendsMount) {\n        make_server_request();\n        setDidMyFriendsMount(false);\n      } else {\n        setResult(myFriends);\n        setGetLoading(false);\n      }\n    } else {\n      if (jwtData.sub !== userid) {\n        make_server_request();\n      } else {\n        if (didMyFriendsMount) {\n          make_server_request();\n          setDidMyFriendsMount(false);\n        } else {\n          setResult(myFriends);\n          setGetLoading(false);\n        }\n      }\n    }\n  }, [location.pathname]);\n\n  return (\n    <div\n      className={path === \"myfriends\" ? \"UserFriend\" : \"UserFriend myaccount\"}\n    >\n      {error && <div className=\"error\">{error}</div>}\n      {!error && <h2 className=\"title-msg\">My Friends.</h2>}\n      {!error && (\n        <>\n          {getLoading && (\n            <div className=\"loading-container\" style={{ zIndex: \"1\" }}>\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n          {!getLoading &&\n            (result.length === 0 ? (\n              <div className=\"empty-friends\">\n                {path !== \"myfriends\" && jwtData.sub !== userid && (\n                  <div>\n                    <span>{fname} </span> <span>{lname} </span>\n                    <span>has no friends on OdinBook :(</span>\n                  </div>\n                )}\n                {(path === \"myfriends\" || jwtData.sub === userid) && (\n                  <div>\n                    <div>You don't have any friends to show.</div>\n                    <div>You can add them by searching their name :)</div>\n                    <div>\n                      To search with username, please prefix with '@' :)\n                    </div>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <>\n                {result.map((value, index) => {\n                  return (\n                    <UserFriendCard\n                      value={value}\n                      index={index}\n                      setError={setError}\n                      key={uniqid()}\n                      friendBtn={friendBtn}\n                      setFriendBtn={setFriendBtn}\n                      userid={userid}\n                      isChanged={isChanged}\n                      setIsChanged={setIsChanged}\n                      path={path}\n                    />\n                  );\n                })}\n              </>\n            ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserFriend;\n","import axios from \"axios\";\nimport { set } from \"mongoose\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport uniqid from \"uniqid\";\n\nimport socketIOClient from \"socket.io-client\";\nimport Login from \"./Login/Login\";\nimport UserFriend from \"./UserDetail/UserFriend\";\n\nconst ENDPOINT = \"https://odinbook12.herokuapp.com\";\n\n// require(\"dotenv\").config();\n// console.log(\"mamamamam\");\n\nconst OdinBookContext = createContext();\n\nconst OdinBookProvider = ({ children }) => {\n  // ex. http://localhost:3000/odinbook\n  // const [serverUrl] = useState(\"http://localhost:3000/odinbook\");\n\n  //to render the searchresult page if the user hits enter\n  const [searchValueChange, setSearchValueChange] = useState(false);\n\n  //to prefill the search bar if there is a value in the url\n  const [searchBarState, setSearchBarState] = useState({ search: \"\" });\n\n  //for MyFriends to not re-render\n  const [myFriends, setMyFriends] = useState([]);\n  const [didMyFriendsMount, setDidMyFriendsMount] = useState(true);\n\n  //for myabout to not re-render\n  const [myAbout, setMyAbout] = useState({});\n  const [didMyAboutMount, setdidMyAboutMount] = useState(true);\n\n  //for mypost to not re-render\n  const [myPosts, setMyposts] = useState([]);\n  const [didMyPostsMount, setDidMyPostsMount] = useState(true);\n\n  //for mynewsfeed to not re-render\n  const [myNewsfeed, setMyNewsFeed] = useState([]);\n  const [didMyNewsFeedMount, setDidMyNewsFeedMount] = useState(true);\n\n  //for chatlist\n  const [myChatList, setMyChatList] = useState([]);\n  const [isRead, setIsRead] = useState([]);\n  const [didMyChatListMount, setDidMyChatListMount] = useState(true);\n\n  const [loading, setLoading] = useState(true);\n\n  const [isAuth, setIsAuth] = useState(false);\n\n  const [errors, setErrors] = useState(\"\");\n\n  // let jwt = JSON.parse(localStorage.getItem(\"jwtData\"));\n  const [jwtData, setJwtData] = useState(\n    JSON.parse(localStorage.getItem(\"jwtData\"))\n  );\n\n  let serverUrl = \"https://odinbook12.herokuapp.com/odinbook\";\n\n  const axios_request = async ({\n    route,\n    data,\n    method,\n    axios_error,\n    axios_response,\n  }) => {\n    if (jwtData !== null || route === \"/login\" || route === \"/signup\") {\n      try {\n        let token;\n        let headers;\n        if (route !== \"/login\" && route !== \"/signup\") {\n          token = jwtData.token;\n          headers = { authorization: `Bearer ${token}` };\n        }\n\n        const response_data = await axios({\n          url: `${serverUrl}${route}`,\n          method: method,\n          headers: headers || \"\",\n          data: data,\n        });\n\n        if (route === \"/login\" || route === \"/signup\") {\n          localStorage.setItem(\n            \"jwtData\",\n            JSON.stringify(response_data.data.jwtData)\n          );\n          setJwtData(response_data.data.jwtData);\n        }\n        setIsAuth(true);\n        console.log(\"Utils Response=\", response_data);\n        axios_response(response_data);\n      } catch (err) {\n        if (err.response) {\n          console.log(\"Utils Error\", err.response.data);\n          if (err.response.status === 403) {\n            setIsAuth(false);\n          }\n        } else {\n          console.log(\"Utils Error\", err.message);\n        }\n        axios_error(err);\n      }\n    } else {\n      console.log(\"Utils Error= NO JWT TOKEN\");\n      setIsAuth(false);\n    }\n  };\n\n  const [socket, setSocket] = useState(\"\");\n\n  const isLogin = async () => {\n    const route = \"/isUserAuth\";\n    const method = \"GET\";\n\n    let headers;\n    try {\n      const token = jwtData.token;\n      headers = { authorization: `Bearer ${token}` };\n\n      const response = await axios({\n        url: `${serverUrl}${route}`,\n        method: method,\n        data: token,\n        headers: headers,\n      });\n\n      console.log(\"response from context login\", response);\n      setIsAuth(true);\n      setLoading(false);\n    } catch (err) {\n      console.log(\"error from context login\", err);\n      setLoading(false);\n      if (err.response) {\n        if (err.response.status === 403) {\n          setIsAuth(false);\n        } else {\n          setErrors(err.response.data);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (isAuth) {\n      const socket12 = socketIOClient(ENDPOINT, {\n        withCredentials: true,\n      });\n      setSocket(socket12);\n      if (jwtData) {\n        socket12.emit(\"join\", jwtData.user);\n      }\n    }\n    if (!isAuth) {\n      isLogin();\n    } else {\n      setLoading(false);\n    }\n  }, [isAuth]);\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  return (\n    <OdinBookContext.Provider\n      value={{\n        searchValue: [searchValueChange, setSearchValueChange],\n        searchBarStateValue: [searchBarState, setSearchBarState],\n        jwtData: jwtData,\n\n        myFriendsValue: [myFriends, setMyFriends],\n        didMyFriendsMountValue: [didMyFriendsMount, setDidMyFriendsMount],\n\n        myAboutValue: [myAbout, setMyAbout],\n\n        myPostsValue: [myPosts, setMyposts],\n        didMyPostsMountValue: [didMyPostsMount, setDidMyPostsMount],\n\n        myNewsFeedValue: [myNewsfeed, setMyNewsFeed],\n        didMyNewsFeedMountValue: [didMyNewsFeedMount, setDidMyNewsFeedMount],\n\n        didMyAboutMountValue: [didMyAboutMount, setdidMyAboutMount],\n\n        isAuthValue: [isAuth, setIsAuth],\n\n        socket: socket,\n\n        axios_request: axios_request,\n\n        myChatListValue: [myChatList, setMyChatList],\n        isReadValue: [isRead, setIsRead],\n        didMyChatListMountValue: [didMyChatListMount, setDidMyChatListMount],\n      }}\n    >\n      {!errors && (\n        <>\n          {!loading ? (\n            children\n          ) : (\n            <div className=\"loading-container\">\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n      {errors && display_errors()}\n    </OdinBookContext.Provider>\n  );\n};\n\nexport { OdinBookContext, OdinBookProvider };\n","import React, { useContext, useRef, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const { axios_request } = useContext(OdinBookContext);\n  const [isloginClick, setIsLoginClick] = useState(false);\n\n  const refUsername = useRef();\n  const refPassword = useRef();\n  const [errors, setErrors] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [postLoading, setPostLoading] = useState(false);\n\n  const login_route = \"/login\";\n  const login_method = \"POST\";\n\n  const axios_login = async () => {\n    setPostLoading(true);\n\n    const cb_error = (err) => {\n      if (err.response) {\n        setErrors(err.response.data);\n      } else {\n        setError(err.message);\n      }\n      setPostLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPostLoading(false);\n    };\n\n    axios_request({\n      route: login_route,\n      data: {\n        username: refUsername.current.value,\n        password: refPassword.current.value,\n      },\n      method: login_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  return (\n    <div className=\"Login\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <form autoComplete=\"off\">\n          <div className=\"head\"> Login</div>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"Enter your username\"\n              ref={refUsername}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              ref={refPassword}\n            />\n          </div>\n          {display_errors()}\n          <div className=\"buttons\">\n            <div className=\"login-btn\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (!postLoading) {\n                    return axios_login();\n                  }\n                }}\n              >\n                {postLoading ? \"Logging-in\" : \"Log-in\"}\n              </button>\n            </div>\n            <div\n              className=\"signup-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                setIsLoginClick(true);\n              }}\n            >\n              <button>Sign-up</button>\n            </div>\n          </div>\n\n          {isloginClick && <Redirect to=\"/signup\" />}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useContext, useEffect } from \"react\";\nimport { OdinBookContext } from \"./Context\";\n\nconst Logout = () => {\n  const { isAuthValue } = useContext(OdinBookContext);\n  const [isAuth, setIsAuth] = isAuthValue;\n\n  useEffect(() => {\n    setIsAuth(false);\n  }, [isAuth]);\n\n  return (\n    <div className=\"Logout\">\n      {localStorage.clear()}\n\n      {window.location.reload()}\n    </div>\n  );\n};\n\nexport default Logout;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport \"./Signup.css\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Signup = () => {\n  const { axios_request } = useContext(OdinBookContext);\n  const [signupClick, setSignupClick] = useState(false);\n\n  const [error, setError] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [postLoading, setPostLoading] = useState(false);\n\n  const ref_fname = useRef();\n  const ref_lname = useRef();\n  const ref_username = useRef();\n  const ref_password = useRef();\n\n  const axios_signup = () => {\n    setPostLoading(true);\n    const signup_route = \"/signup\";\n    const signup_method = \"POST\";\n    const cb_error = (err) => {\n      if (err.response) {\n        setErrors(err.response.data);\n      } else {\n        setError(err.message);\n      }\n      setPostLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPostLoading(false);\n      setErrors([]);\n      setError(\"\");\n    };\n\n    axios_request({\n      route: signup_route,\n      data: {\n        fname: ref_fname.current.value,\n        lname: ref_lname.current.value,\n        username: ref_username.current.value,\n        password: ref_password.current.value,\n      },\n      method: signup_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  return (\n    <div className=\"Signup\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <form autoComplete=\"off\">\n          <div className=\"head\">Signup</div>\n          <div className=\"form-group\">\n            <label htmlFor=\"fname\">First Name:</label>\n            <input\n              type=\"text\"\n              name=\"fname\"\n              id=\"fname\"\n              placeholder=\"Enter your First Name\"\n              ref={ref_fname}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lname\">Last Name:</label>\n            <input\n              type=\"text\"\n              name=\"lname\"\n              id=\"lname\"\n              placeholder=\"Enter your Last Name\"\n              ref={ref_lname}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"Enter your username\"\n              ref={ref_username}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              ref={ref_password}\n            />\n          </div>\n          {display_errors()}\n          <div className=\"buttons\">\n            <div className=\"signup-btn\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (!postLoading) {\n                    return axios_signup();\n                  } else {\n                    return;\n                  }\n                }}\n              >\n                {postLoading ? \"signing-in\" : \"Sign-up\"}\n              </button>\n            </div>\n            <div\n              className=\"login-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                setSignupClick(true);\n              }}\n            >\n              <button>Login</button>\n            </div>\n          </div>\n\n          {signupClick && <Redirect to=\"/login\" />}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./SearchBar.css\";\n\nconst SearchBar = () => {\n  const { searchValue } = useContext(OdinBookContext);\n  const [searchValueChange, setSearchValueChange] = searchValue;\n\n  const history = useHistory();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setSearchValueChange(true);\n    if (ref_name.current.value === \"\") {\n      return;\n    } else {\n      return history.push(`/search/${ref_name.current.value}`);\n    }\n  };\n\n  const ref_name = useRef();\n\n  return (\n    <div className=\"SearchBar\">\n      <form onSubmit={submitHandler} autoComplete=\"off\">\n        <input\n          type=\"text\"\n          id=\"search\"\n          name=\"search\"\n          ref={ref_name}\n          placeholder=\"Search Odinbook\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\n\nconst SearchResultCard = ({\n  value,\n  index,\n  result,\n  friendBtn,\n  setFriendBtn,\n  arrg,\n}) => {\n  const { jwtData, myFriendsValue, axios_request } = useContext(\n    OdinBookContext\n  );\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  const [myFriendsIndex, setMyFriendsIndex] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  //removes friend\n  const clickHandler = () => {\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    if (friendBtn[index] === false) {\n      const get_index = myFriends.findIndex(\n        (x) => x.username === value.username\n      );\n      if (get_index !== -1) {\n        myFriends.splice(get_index, 1);\n        setMyFriends(myFriends);\n      }\n    } else {\n      myFriends.push(value);\n    }\n  };\n\n  const [pp, setpp] = useState(false);\n\n  useEffect(() => {\n    const check = myFriends.findIndex((x) => x.username === value.username);\n\n    if (check !== -1) {\n      friendBtn[index] = true;\n      setFriendBtn(friendBtn);\n    }\n    setpp(!pp);\n  }, []);\n\n  const element = document.querySelector(\"#search\");\n\n  return (\n    <div className=\"SearchResultCard\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <div className=\"profile-picture\">\n            {[...value.fname[0].toLowerCase()]}\n          </div>\n          <div\n            className=\"name-container\"\n            onClick={(e) => {\n              e.stopPropagation();\n              e.preventDefault();\n              element.value = \"\";\n            }}\n          >\n            <Link\n              to={{\n                pathname: `/user/${value.username}/posts`,\n                state: {\n                  userid: value._id,\n                  fname: value.fname,\n                  lname: value.lname,\n                  username: value.username,\n                },\n              }}\n            >\n              <div className=\"name\">\n                <span>{value.fname} </span>\n                <span>{value.lname}</span>\n              </div>\n            </Link>\n            <div className=\"username\">{value.username}</div>\n          </div>\n          {value._id !== jwtData.sub && (\n            <div\n              className={\n                friendBtn[index]\n                  ? \"add-btn fas fa-user-minus\"\n                  : \"add-btn fas fa-user-plus\"\n              }\n              style={{ color: friendBtn[index] ? \"red\" : \"blue\" }}\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n\n                friendBtn[index] = !friendBtn[index];\n                setFriendBtn(friendBtn);\n                setpp(!pp);\n                clickHandler();\n              }}\n            ></div>\n          )}\n\n          {value._id !== jwtData.sub && (\n            <div className=\"chat-link-container\">\n              <Link\n                to={{\n                  pathname: \"/chat\",\n                  state: {\n                    userid: value._id,\n                    fname: value.fname,\n                    lname: value.lname,\n                    username: value.username,\n                  },\n                }}\n              >\n                <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n              </Link>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SearchResultCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport \"./SearchResult.css\";\nimport SearchResultCard from \"./SearchResultCard\";\n\nconst SearchResult = () => {\n  const { searchValue, axios_request } = useContext(OdinBookContext);\n\n  const [searchValueChange, setSearchValueChange] = searchValue;\n\n  const [friendBtn, setFriendBtn] = useState([]);\n\n  const params = useParams();\n\n  const [error, setError] = useState(\"\");\n\n  const [getLoading, setGetLoading] = useState(true);\n\n  const [result, setResult] = useState([]);\n\n  const make_server_request = () => {\n    const user_list_route = `/user/search/${params.name}`;\n    const user_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setGetLoading(false);\n      if (!Array.isArray(response.data)) {\n        setResult([response.data]);\n      } else {\n        setResult(response.data);\n      }\n      const h = Array(response.data.length).fill(false);\n      setFriendBtn(h);\n    };\n\n    axios_request({\n      route: user_list_route,\n      data: \"\",\n      method: user_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (searchValueChange === true) {\n      make_server_request();\n\n      setSearchValueChange(false);\n    }\n  }, [searchValueChange]);\n\n  useEffect(() => {\n    if (!searchValueChange) {\n      if (params) {\n        //to prefill the search bar with the value in the url incase the user refrehes the page\n        const element = document.querySelector(\"#search\");\n        element.value = params.name;\n        make_server_request();\n      }\n    }\n  }, []);\n\n  let arrg = [];\n\n  return (\n    <div className=\"SearchResult\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          {getLoading && \"loading...\"}\n          {!getLoading &&\n            (result.length == 0 ? (\n              <div className=\"empty\">No users found with this query :(</div>\n            ) : (\n              result.map((value, index) => {\n                return (\n                  <SearchResultCard\n                    value={value}\n                    index={index}\n                    setResult={setResult}\n                    result={result}\n                    key={uniqid()}\n                    friendBtn={friendBtn}\n                    setFriendBtn={setFriendBtn}\n                    arrg={arrg}\n                  />\n                );\n              })\n            ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SearchResult;\n","import React from \"react\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\nimport \"./UserNav.css\";\n\nconst UserNav = ({ to, fname, lname, userid, username, label }) => {\n  let match = useRouteMatch({ path: to });\n  if (match) {\n    match = match.isExact;\n  }\n\n  return (\n    <div className={match ? \"active nav-links\" : \"nav-links\"}>\n      <Link to={{ pathname: to, state: { fname, lname, userid, username } }}>\n        {label}\n      </Link>\n    </div>\n  );\n};\n\nexport default UserNav;\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { OdinBookContext } from \"../Context\";\n\nconst UseraAboutCard = ({\n  objkey,\n  index,\n  clickIndex,\n  setClickIndex,\n  result,\n  setResult,\n  ee,\n  setee,\n  jwtData,\n  userid,\n}) => {\n  const { myAboutValue, axios_request } = useContext(OdinBookContext);\n  const [myAbout, setMyAbout] = myAboutValue;\n\n  const [error, setError] = useState(\"\");\n\n  const [tooltip, setTooltip] = useState(false);\n  const [empty_name, setEmpty_name] = useState(false);\n\n  const [state, setState] = useState({ [objkey]: ee[objkey] });\n\n  const str = {\n    bio: \"Bio\",\n    nickName: \"Nick-name\",\n    school: \"School\",\n    college: \"College\",\n    working: \"Work Place\",\n    relationshipStatus: \"Relationhsip Status\",\n    book: \"Book\",\n    food: \"Food\",\n    gender: \"Gender\",\n    dob: \"Date of birth\",\n    email: \"Email\",\n    phone: \"Phone\",\n  };\n  const changeHandler = (e) => {\n    e.preventDefault();\n    const element = document.getElementById(objkey);\n\n    const { name, value } = e.target;\n\n    if (element.tagName == \"INPUT\") {\n      const element_id = element.id;\n      const arr = [...value];\n      if (element_id !== \"food\" && element_id !== \"book\") {\n        if (arr.length >= 30) {\n          setTooltip(true);\n          return;\n        } else {\n          setTooltip(false);\n        }\n      } else if (element_id == \"food\" || element_id == \"book\") {\n        if (arr.length >= 50) {\n          setTooltip(true);\n          return;\n        } else {\n          setTooltip(false);\n        }\n      }\n    }\n\n    setState({ ...state, [name]: value });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const route = \"/myprofile\";\n    const method = \"PUT\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    if (state.fname === \"\" || state.lname === \"\") {\n      return;\n    }\n\n    axios_request({\n      route: route,\n      data: state,\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (clickIndex == index) {\n      const element = document.getElementById(objkey);\n      element.focus();\n      element.style.border = \"1px solid blue\";\n      element.style.boxShadow = \"0.3px 0.3px 5px blue\";\n      element.style.outline = \"none\";\n      const savediv = document.getElementById(`save-icon-${index}`);\n      savediv.style.color = \"blue\";\n    }\n  }, []);\n\n  return (\n    <div className=\"UserAboutCard\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <form\n            autoComplete=\"off\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              return;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor={objkey}>{str[objkey]}</label>\n              <div className=\"container\">\n                {clickIndex != index && (\n                  <div className=\"profile-values\">\n                    {ee[objkey] || `No ${str[objkey]} added`}\n                  </div>\n                )}\n                {clickIndex == index &&\n                  objkey !== \"relationshipStatus\" &&\n                  objkey !== \"gender\" &&\n                  objkey !== \"dob\" &&\n                  objkey !== \"bio\" && (\n                    <input\n                      name={objkey}\n                      id={objkey}\n                      value={state[objkey]}\n                      onChange={changeHandler}\n                      maxLength={\n                        objkey == \"food\" || objkey == \"book\" ? \"50\" : \"30\"\n                      }\n                    />\n                  )}\n\n                {tooltip == true && (\n                  <div className=\"input-tooltip\">\n                    <>\n                      <span>No more than </span>\n                      {objkey == \"food\" || objkey == \"book\" ? \"50\" : \"30\"}\n                      <span> characters :)</span>{\" \"}\n                    </>\n                  </div>\n                )}\n                {clickIndex == index && objkey == \"bio\" && (\n                  <div className=\"bio-container\">\n                    <textarea\n                      name=\"bio\"\n                      id=\"bio\"\n                      value={state[objkey]}\n                      onChange={changeHandler}\n                    />\n                  </div>\n                )}\n\n                {clickIndex == index && objkey == \"dob\" && (\n                  <input\n                    type=\"date\"\n                    name=\"dob\"\n                    id=\"dob\"\n                    selected={state[objkey] ? null : \"\"}\n                    // onChange={changeHandler}\n                    start\n                  />\n                )}\n                {clickIndex == index && objkey == \"relationshipStatus\" && (\n                  <select\n                    id=\"relationshipStatus\"\n                    name=\"relationshipStatus\"\n                    onChange={changeHandler}\n                    defaultValue={ee[objkey]}\n                  >\n                    <option value=\"Status\">Status</option>\n                    <option value=\"Married\">Married</option>\n                    <option value=\"Single\">Single</option>\n                    <option value=\"Divorced\">Divorced</option>\n                    <option value=\"It's complicated\">It's complicated</option>\n                    <option value=\"In a relationship\">In relationship</option>\n                    <option value=\"Open Relationship\">Open Relationship</option>\n                    <option value=\"Engaged\">Engaged</option>\n                    <option value=\"Widowed\">Widowed</option>\n                  </select>\n                )}\n                {clickIndex == index && objkey === \"gender\" && (\n                  <select\n                    id=\"gender\"\n                    name=\"gender\"\n                    onChange={changeHandler}\n                    defaultValue={ee[objkey]}\n                  >\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Transgender\">Transgender</option>\n                    <option value=\"Gender Neutral\"> Gender Neutral</option>\n                    <option value=\"Non Binary\">Non Binary</option>\n                  </select>\n                )}\n              </div>\n              {userid === jwtData.sub && clickIndex !== index && (\n                <div\n                  className=\"edit-icon fas fa-edit\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setClickIndex(index);\n                  }}\n                ></div>\n              )}\n              {jwtData.sub === userid && clickIndex == index && (\n                <div\n                  id={`save-icon-${index}`}\n                  className=\"save-icon fas fa-save\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (state.fname == \"\" || state.lname == \"\") {\n                      setEmpty_name(true);\n                    } else {\n                      setClickIndex(null);\n                      ee[objkey] = state[objkey];\n                      setee(ee);\n                      myAbout[objkey] = state[objkey];\n                      setMyAbout(myAbout);\n                      submitHandler(e);\n                      setEmpty_name(false);\n                    }\n                  }}\n                ></div>\n              )}\n\n              {empty_name && (\n                <div className=\"empty_name\">\n                  {state.fname == \"\"\n                    ? \"First name cannot be empty\"\n                    : \"Last name cannot be empty\"}\n                </div>\n              )}\n            </div>\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UseraAboutCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport UseraAboutCard from \"./UserAboutCard\";\nimport uniqid from \"uniqid\";\nimport \"./UserAbout.css\";\n\nconst UserAbout = () => {\n  const {\n    myAboutValue,\n    didMyAboutMountValue,\n    axios_request,\n    jwtData,\n  } = useContext(OdinBookContext);\n  const [myAbout, setMyAbout] = myAboutValue;\n  const [didMyAboutMount, setdidMyAboutMount] = didMyAboutMountValue;\n\n  const [result, setResult] = useState();\n\n  const [getLoading, setGetLoading] = useState(true);\n\n  const [error, setError] = useState(\"\");\n\n  const location = useLocation();\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n  let userid = local_history.userid;\n\n  const [clickIndex, setClickIndex] = useState(null);\n\n  const make_server_request = () => {\n    const profile_route = `/profile/${userid}`;\n    const profile_route_method = \"GET\";\n    const cb_response = (response) => {\n      if (userid === jwtData.sub) {\n        setMyAbout(response.data);\n      }\n      setResult(response.data);\n\n      setGetLoading(false);\n    };\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    axios_request({\n      route: profile_route,\n      data: \"\",\n      method: profile_route_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (jwtData.sub !== userid) {\n      make_server_request();\n    } else {\n      if (didMyAboutMount) {\n        make_server_request();\n        setdidMyAboutMount(false);\n      } else {\n        setResult(myAbout);\n        setGetLoading(false);\n      }\n    }\n  }, [location.pathname]);\n\n  let g;\n  if (result) {\n    delete result.user;\n    delete result._id;\n    delete result.__v;\n\n    g = Object.keys(result);\n  }\n\n  const [tooltip, setTooltip] = useState(null);\n  const [ee, setee] = useState({});\n\n  useEffect(() => {\n    if (result) {\n      let h = {};\n      for (let i = 0; i < g.length; i++) {\n        h[g[i]] = result[g[i]];\n        if (i === g.length - 1) {\n          setee(h);\n        }\n      }\n    }\n  }, [result]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.key == \"Escape\") {\n        setClickIndex(null);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"UserAbout\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          {getLoading && (\n            <div className=\"loading-container\" style={{ zIndex: \"1\" }}>\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n          {!getLoading &&\n            g.map((value, index) => {\n              return (\n                <UseraAboutCard\n                  key={uniqid()}\n                  objkey={value}\n                  index={index}\n                  clickIndex={clickIndex}\n                  setClickIndex={setClickIndex}\n                  result={result}\n                  setResult={setResult}\n                  ee={ee}\n                  setee={setee}\n                  tooltip={tooltip}\n                  setTooltip={setTooltip}\n                  userid={userid}\n                  jwtData={jwtData}\n                />\n              );\n            })}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserAbout;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport \"./MyPostForm.css\";\n\nconst MyPostForm = ({\n  route,\n  update_value,\n  method,\n  formTitle,\n  user_post_response,\n  createClick,\n  setCreateClick,\n  updateClick,\n  setUpdateClick,\n}) => {\n  const { axios_request } = useContext(OdinBookContext);\n\n  const [error, setError] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const [postLoading, setPostLoading] = useState(false);\n\n  const refTitle = useRef();\n  const refContenText = useRef();\n\n  useEffect(() => {\n    refTitle.current.value = update_value ? update_value.title : \"\";\n    refContenText.current.value = update_value ? update_value.content_text : \"\";\n  }, []);\n\n  const submitHandler = () => {\n    setPostLoading(true);\n    const axios_error = (err) => {\n      if (err.response) {\n        setErrors(err.response.data);\n      } else {\n        setError(err.message);\n      }\n      setPostLoading(false);\n    };\n\n    const axios_response = (response) => {\n      setErrors([]);\n      setPostLoading(false);\n      user_post_response(response);\n      setCreateClick(false);\n    };\n\n    axios_request({\n      route: route,\n      data: {\n        title: refTitle.current.value,\n        content_text: refContenText.current.value,\n      },\n      method: method,\n      axios_error: axios_error,\n      axios_response: axios_response,\n    });\n  };\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  return (\n    <div className=\"MyPostForm\">\n      {error && (\n        <div className=\"error\">\n          <div>{error} </div>\n          <div>Please try refreshing the page</div>\n        </div>\n      )}\n      {!error && (\n        <div className=\"form-container\">\n          <div className=\"form-head\">\n            <div className=\"form-title\">{formTitle}</div>\n            <div\n              className=\"form-close-btn fas fa-times-circle\"\n              onClick={(e) => {\n                e.preventDefault();\n                setCreateClick(false);\n              }}\n            ></div>\n          </div>\n\n          <form autoComplete=\"off\">\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                id=\"title\"\n                type=\"text\"\n                placeholder=\"Enter your post title\"\n                name=\"title\"\n                ref={refTitle}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"content_text\">Text</label>\n              <textarea\n                type=\"text\"\n                id=\"content_text\"\n                name=\"content_text\"\n                placeholder=\"Add text\"\n                ref={refContenText}\n                // value={}\n              />\n            </div>\n            {display_errors()}\n            <div className=\"submit-btn\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  //to prevent multiple clicks\n                  if (postLoading) {\n                    return;\n                  } else {\n                    submitHandler();\n                  }\n                }}\n              >\n                {!postLoading ? \"Submit\" : \"Submitting...\"}\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default MyPostForm;\n","import React from \"react\";\nimport MyPostForm from \"./MyPostForm\";\nimport \"./MyPostCreate.css\";\nimport { useLocation } from \"react-router-dom\";\n\nconst MypostCreate = ({ user_post_response, createClick, setCreateClick }) => {\n  // const [formBtnClicked, setFormBtnClicked] = useState(false);\n\n  const mypost_create_route = \"/myposts\";\n  const mypost_create_method = \"POST\";\n\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n\n  let fname = local_history.fname;\n  return (\n    <div className=\"MyPostCreate\">\n      <>\n        <div className=\"show-form-container\">\n          <div className=\"profile-picture\">{[...fname[0].toLowerCase()]}</div>\n          <div\n            className=\"show-form-btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              setCreateClick(true);\n            }}\n          >\n            What's on your mind..?\n          </div>\n        </div>\n        {createClick && (\n          <MyPostForm\n            route={mypost_create_route}\n            method={mypost_create_method}\n            formTitle=\"Create Post\"\n            user_post_response={user_post_response}\n            createClick={createClick}\n            setCreateClick={setCreateClick}\n          />\n        )}\n      </>\n    </div>\n  );\n};\n\nexport default MypostCreate;\n","import React from \"react\";\nimport MyPostForm from \"./MyPostForm\";\n\nconst MyPostUpdate = ({\n  postid,\n  updateClick,\n  setUpdateClick,\n  updateData,\n  user_post_response,\n}) => {\n  const mypost_update_route = `/mypost/${postid}`;\n  const mypost_update_method = \"PUT\";\n\n  return (\n    <div className=\"MyPostUpdate\">\n      {updateClick && (\n        <MyPostForm\n          route={mypost_update_route}\n          update_value={updateData}\n          method={mypost_update_method}\n          createClick={updateClick}\n          setCreateClick={setUpdateClick}\n          formTitle=\"Update Post\"\n          user_post_response={user_post_response}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MyPostUpdate;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./CommentDelete.css\";\n\nconst CommentDelete = ({\n  postid,\n  index,\n  setComments,\n  commentid,\n  comments,\n  setCommentOptionIndex,\n  pp,\n  setpp,\n}) => {\n  const { axios_request } = useContext(OdinBookContext);\n  const mypost_delete_route = `/post/${postid}/comment/${commentid}`;\n  const mypost_delete_method = \"DELETE\";\n\n  const [postLoading, setPostLoading] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  const make_server_request = () => {\n    comments[index] = comments.comment_list.splice(index, 1);\n\n    setComments(comments);\n    setpp(!pp);\n    setCommentOptionIndex(null);\n    const cb_error = (err) => {\n      setError(err.message);\n      setPostLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPostLoading(false);\n    };\n\n    axios_request({\n      route: mypost_delete_route,\n      data: \"\",\n      method: mypost_delete_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    make_server_request();\n  }, []);\n\n  return (\n    <div className=\"CommentDelete\">\n      {error && (\n        <div className=\"error\">\n          <div>{error}</div>\n          <div>Please try refreshing the Page :(</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CommentDelete;\n","import React, { useContext, useState } from \"react\";\nimport \"./CommentCard.css\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\n// import CommentUpdate from \"../Comment/CommentUpdate\";\nimport CommentDelete from \"../Comment/CommentDelete\";\n\nconst CommentCard = ({\n  comment,\n  index,\n  postIndex,\n  path,\n  commentOptionIndex,\n  setCommentOptionIndex,\n  postid,\n  comments,\n  setComments,\n  pp,\n  setpp,\n  setGetLoading,\n}) => {\n  const { jwtData } = useContext(OdinBookContext);\n\n  // const [commentUpdateClick, setCommentUpdateClick] = useState(false);\n  const [commentDeleteClick, setCommentDeleteClick] = useState(false);\n\n  const userid = JSON.parse(localStorage.getItem(\"local_history\")).userid;\n\n  return (\n    <div className=\"CommentCard\">\n      <div className=\"profile-picture\">\n        {[...comment.user.fname[0].toLowerCase()]}\n      </div>\n      <div className=\"comment-container\">\n        <div\n          className=\"name\"\n          onClick={() => {\n            setGetLoading(true);\n          }}\n        >\n          {/* doin this if block because hash-router forbids visiting the same link again and the userid from localstorage is from the url */}\n          {(path == \"newsfeed\" || userid !== comment.user._id) && (\n            <Link\n              to={{\n                pathname: `/user/${comment.user.username}/posts`,\n                state: {\n                  fname: comment.user.fname,\n                  lname: comment.user.lname,\n                  username: comment.user.username,\n                  userid: comment.user._id,\n                },\n              }}\n            >\n              <span>{comment.user.fname} </span>\n              <span>{comment.user.lname}</span>\n            </Link>\n          )}\n          {path != \"newsfeed\" && userid === comment.user._id && (\n            <>\n              <span>{comment.user.fname} </span>\n              <span>{comment.user.lname}</span>\n            </>\n          )}\n        </div>\n        <div className=\"comment\">{comment.comment}</div>\n      </div>\n      <div\n        className=\"option-icon\"\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n\n          if (commentOptionIndex == index) {\n            setCommentOptionIndex(null);\n          } else {\n            setCommentOptionIndex(index);\n          }\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: commentOptionIndex == index ? \"lightgray\" : \"\",\n          }}\n          className=\"btn fas fa-ellipsis-v\"\n        ></div>\n        {commentOptionIndex === index && (\n          <div className=\"comment-menu\">\n            {/* <div\n            onClick={(e) => {\n              e.stopPropagation();\n              e.preventDefault();\n              setCommentUpdateClick(!commentUpdateClick);\n            }}\n          >\n            Edit\n          </div> */}\n            <div\n              className=\"comment-btn delete-comment-btn\"\n              onClick={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                setCommentDeleteClick(!commentDeleteClick);\n              }}\n            >\n              Delete\n            </div>\n          </div>\n        )}\n        {/* {commentUpdateClick && (\n        <CommentUpdate\n          postid={postid}\n          updateValue={comment.comment}\n          setComments={setComments}\n          commentid={comment._id}\n          commentUpdateClick={commentUpdateClick}\n          setCommentUpdateClick={setCommentUpdateClick}\n        />\n      )} */}\n        {commentDeleteClick && (\n          <CommentDelete\n            postid={postid}\n            index={index}\n            setComments={setComments}\n            comments={comments}\n            commentid={comment._id}\n            commentDeleteClick={commentDeleteClick}\n            setCommentDeleteClick={setCommentDeleteClick}\n            pp={pp}\n            setpp={setpp}\n            setCommentOptionIndex={setCommentOptionIndex}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./UserLikes.css\";\nimport { Link } from \"react-router-dom\";\n\nconst UserLikesCard = ({\n  value,\n  index,\n  friendBtn,\n  setFriendBtn,\n  myFriends,\n  setMyFriends,\n  setUsersLikedIndex,\n  setGetLoading,\n  path,\n}) => {\n  const [pp, setpp] = useState(false);\n  const { axios_request, jwtData } = useContext(OdinBookContext);\n  const [error, setError] = useState(\"\");\n\n  const userid = JSON.parse(localStorage.getItem(\"local_history\")).userid;\n  // console.log(userid);\n\n  const clickHandler = () => {\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    // console.log(friendBtn[index]);\n    if (friendBtn[index] == false) {\n      const get_index = myFriends.findIndex(\n        (x) => x.username == value.username\n      );\n      if (get_index !== -1) {\n        myFriends.splice(get_index, 1);\n      }\n    } else {\n      myFriends.push(value);\n    }\n    setMyFriends(myFriends);\n  };\n\n  useEffect(() => {\n    const check = myFriends.findIndex((x) => x.username === value.username);\n\n    if (check !== -1) {\n      friendBtn[index] = true;\n      setFriendBtn(friendBtn);\n    }\n    setpp(!pp);\n  }, []);\n\n  // console.log(value._id, userid);\n  return (\n    <div className=\"UserLikesCard\">\n      {error && <div className=\"error\">{error}</div>}\n\n      {!error && (\n        <>\n          <div className=\"profile-picture\">\n            {[...value.fname[0].toLowerCase()]}\n          </div>\n          <div className=\"name\">\n            {(userid.toString() !== value._id.toString() ||\n              path == \"newsfeed\") && (\n              <div\n                className=\"clickable-link\"\n                onClick={() => {\n                  setUsersLikedIndex(null);\n                  setGetLoading(true);\n                }}\n              >\n                <Link\n                  to={{\n                    pathname: `/user/${value.username}/posts`,\n                    state: {\n                      userid: value._id,\n                      fname: value.fname,\n                      lname: value.lname,\n                      username: value.username,\n                    },\n                  }}\n                >\n                  <span>{value.fname} </span>\n                  <span>{value.lname}</span>\n                </Link>\n              </div>\n            )}\n            {path !== \"newsfeed\" && userid.toString() === value._id.toString() && (\n              <div className=\"unclickable-link\">\n                <span>{value.fname} </span>\n                <span>{value.lname}</span>\n              </div>\n            )}\n          </div>\n          {jwtData.sub !== value._id && (\n            <div\n              className=\"add-btn-container\"\n              onClick={() => {\n                friendBtn[index] = !friendBtn[index];\n                setFriendBtn(friendBtn);\n                setpp(!pp);\n                clickHandler();\n              }}\n              style={{\n                color: friendBtn[index] ? \"red\" : \"blue\",\n              }}\n            >\n              <div\n                className={\n                  friendBtn[index]\n                    ? \"add-btn fas fa-user-minus\"\n                    : \"add-btn fas fa-user-plus\"\n                }\n              ></div>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserLikesCard;\n","import axios from \"axios\";\nimport \"./UserLikes.css\";\nimport UserLikesCard from \"./UserLikesCard\";\nimport uniqid from \"uniqid\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { OdinBookContext } from \"../Context\";\n\nconst UserLikes = ({\n  postid,\n  setUsersLikedIndex,\n  userid,\n  setGetLoading,\n  path,\n}) => {\n  const { axios_request, jwtData, myFriendsValue } = useContext(\n    OdinBookContext\n  );\n\n  //!the userid is of the guy who made the post\n\n  const [error, setError] = useState(\"\");\n  const [likeList, setLikeList] = useState([]);\n  const [myFriends, setMyFriends] = myFriendsValue;\n  // const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n\n  const [friendBtn, setFriendBtn] = useState([]);\n\n  const [getLikeLoading, setGetLikeLoading] = useState(true);\n\n  const get_users_liked = () => {\n    const route = `/post/${postid}/like`;\n    const method = \"GET\";\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLikeLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setLikeList(response.data.like);\n      setGetLikeLoading(false);\n\n      const h = Array(response.data.like.length).fill(false);\n      setFriendBtn(h);\n    };\n\n    axios_request({\n      route: route,\n      method: method,\n      data: \"\",\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    get_users_liked();\n  }, []);\n\n  return (\n    <div className=\"UserLikes\">\n      {error && <div className=\"error\">{error}</div>}\n\n      {!error && (\n        <div className=\"box\">\n          {getLikeLoading && (\n            <>\n              <div className=\"loading-container\">\n                <div className=\"container-2\">\n                  <div className=\"loading-msg\">Fetching Likes :)</div>\n                  <div className=\"loading\">\n                    <div className=\"spinner-border\" role=\"status\">\n                      <div className=\"sr-only\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n          {!getLikeLoading && (\n            <>\n              <div className='form-close-btn fas fa-times-circle\"'>\n                <div className=\"head-msg\">People who liked this post.</div>\n                <div className=\"btn-close\">\n                  <button\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      setUsersLikedIndex(null);\n                    }}\n                    className=\"fas fa-times-circle\"\n                  ></button>\n                </div>\n              </div>\n              {likeList.map((value, index) => {\n                return (\n                  <UserLikesCard\n                    value={value}\n                    index={index}\n                    key={uniqid()}\n                    friendBtn={friendBtn}\n                    setFriendBtn={setFriendBtn}\n                    myFriends={myFriends}\n                    setMyFriends={setMyFriends}\n                    userid={userid}\n                    setUsersLikedIndex={setUsersLikedIndex}\n                    setGetLoading={setGetLoading}\n                    getLikeLoading={getLikeLoading}\n                    path={path}\n                  />\n                );\n              })}\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserLikes;\n","import React, { useContext, useRef, useState, useAsync } from \"react\";\n\nimport uniqid from \"uniqid\";\nimport \"./CommentForm.css\";\nimport { OdinBookContext } from \"../Context\";\n\nconst CommentForm = ({\n  setComments,\n  postIndex,\n  route,\n  method,\n  updateValue,\n  comments,\n  pp,\n  setpp,\n}) => {\n  const { jwtData, axios_request } = useContext(OdinBookContext);\n\n  const valueRef = useRef();\n\n  const [errors, setErrors] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const post_comment = () => {\n    let element;\n    element = document.querySelector(`#post-${postIndex}`);\n\n    comments.comment_list.push({\n      comment: valueRef.current.value,\n      user: {\n        fname: jwtData.fname,\n        lname: jwtData.lname,\n        username: jwtData.user,\n        _id: jwtData.sub,\n      },\n    });\n\n    if (element) {\n      const remove_empty = element.querySelector(`#post-${postIndex} .empty`);\n      if (remove_empty) {\n        remove_empty.style.display = \"none\";\n      }\n    }\n\n    const cb_error = (err) => {\n      if (err.response) {\n        setErrors(err.response.data);\n      } else {\n        setError(err.message);\n      }\n    };\n    const cb_response = (response) => {\n      setErrors([]);\n    };\n\n    axios_request({\n      route: route,\n      data: { comment: valueRef.current.value },\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    valueRef.current.value = \"\";\n\n    setComments(comments);\n    setpp(!pp);\n  };\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  return (\n    <div className=\"CommentForm\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <div className=\"profile-picture\">\n            {[jwtData.fname[0].toLowerCase()]}\n          </div>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n\n              if (valueRef.current.value == \"\") {\n                return;\n              } else {\n                post_comment();\n              }\n            }}\n            autoComplete=\"off\"\n          >\n            <input\n              type=\"text\"\n              name=\"comment\"\n              id=\"comment\"\n              placeholder=\"Write a comment...\"\n              ref={valueRef}\n            />\n          </form>\n          {display_errors()}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React from \"react\";\nimport CommentForm from \"./CommentForm\";\n\nconst CommentCreate = ({\n  postid,\n  setComments,\n  postIndex,\n  comments,\n  pp,\n  setpp,\n}) => {\n  const route = `/post/${postid}/comment`;\n  const method = \"POST\";\n  return (\n    <div className=\"CommentCreate\">\n      <CommentForm\n        setComments={setComments}\n        postIndex={postIndex}\n        route={route}\n        method={method}\n        comments={comments}\n        pp={pp}\n        setpp={setpp}\n      />\n    </div>\n  );\n};\n\nexport default CommentCreate;\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport CommentCard from \"../CommentCard/CommentCard\";\nimport uniqid from \"uniqid\";\nimport UserLikes from \"./UserLikes\";\nimport { OdinBookContext } from \"../Context\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport CommentCreate from \"../Comment/CommentCreate\";\nimport UserNuLikes from \"./UserNuLikes\";\nimport UserCardFooter from \"./UserCardFooter\";\nimport { set } from \"mongoose\";\n\nconst UserPostCard = ({\n  value,\n  index,\n  setPostid,\n  setUpdateClick,\n  setUpdateData,\n  setUpdateIndex,\n  indexOfCardClicked,\n  setindexOfCardClicked,\n  isOwner,\n  setDeleteClick,\n  deleteClick,\n  setPostIndex,\n  likeClick,\n  setLikeClick,\n  postsLength,\n  UserLikedIndex,\n  setUsersLikedIndex,\n  likeLength,\n  setLikeLength,\n  path,\n  result,\n  setResult,\n  setGetLoading,\n  // comments,\n  // setComments,\n}) => {\n  const [cardError, setCardError] = useState(\"\");\n  const [commentError, setCommentError] = useState(\"\");\n\n  const [commentIconClicked, setCommentIconClicked] = useState([]);\n  const [commentsLoading, setCommentsLoading] = useState(true);\n  // const [newCommentLoading, setNewCommentLoading] = useState(false);\n  const [onlyOneClick, setonlyOneClick] = useState(true);\n\n  const [commentOptionIndex, setCommentOptionIndex] = useState(null);\n  const { jwtData, axios_request } = useContext(OdinBookContext);\n\n  const [comments, setComments] = useState([]);\n\n  // const [UserLikedIndex, setUsersLikedIndex] = useState(false);\n\n  const location = useLocation();\n\n  // console.log(result);\n  // console.log(likeLength);\n  let fname;\n  let lname;\n  let username;\n  let userid;\n  let from;\n  if (path == \"userpost\") {\n    const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n\n    fname = local_history.fname;\n    lname = local_history.lname;\n  }\n\n  const like_post = (postid) => {\n    const like_post_route = `/post/${postid}/like`;\n    const like_post_method = \"POST\";\n    const cb_error = (err) => {\n      // console.log(err);\n      setCardError(err);\n    };\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: like_post_route,\n      data: \"\",\n      method: like_post_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const get_comments = (postid) => {\n    const comments_route = `/post/${postid}/comment`;\n    const comments_method = \"GET\";\n\n    const cb_error = (err) => {\n      setCommentError(err);\n      setCommentsLoading(false);\n    };\n    const cb_response = (response) => {\n      setComments(response.data);\n      // console.log(response.data);\n      setCommentsLoading(false);\n    };\n\n    axios_request({\n      route: comments_route,\n      data: \"\",\n      method: comments_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const [pp, setpp] = useState(false);\n\n  //this useffect will render the page if the comment icon is clicked or there is change in comments.\n  useEffect(() => {\n    const element = document.querySelector(`#post-${index}`);\n\n    if (element) {\n      const height = element.scrollHeight;\n      element.scrollTo(0, height);\n    }\n  }, [pp, commentIconClicked, commentsLoading]);\n\n  useEffect(() => {\n    const g = value.like.includes(jwtData.sub);\n\n    // console.log(value, g);\n    likeClick[index] = g;\n    setLikeClick(likeClick);\n    likeLength[index] = Number(value.like.length);\n    setLikeLength(likeLength);\n    setpp(!pp);\n  }, []);\n\n  const minute = new Date(value.created_at).getMinutes();\n  const hour = new Date(value.created_at).getHours();\n\n  const [copyState, setCopyState] = useState(false);\n  return (\n    <div className=\"UserPostCard\">\n      <div className=\"head\">\n        <div className=\"profile-picture\">\n          {fname\n            ? [...fname[0].toLowerCase()]\n            : [...value.user.fname[0].toLowerCase()]}\n        </div>\n        <div className=\"name-container\">\n          <div className=\"name\">\n            {path !== \"userpost\" && (\n              <Link\n                to={{\n                  pathname: `/user/${value.user.username}/posts`,\n                  state: {\n                    userid: value.user._id,\n                    fname: value.user.fname,\n                    lname: value.user.lname,\n                    username: value.user.username,\n                  },\n                }}\n              >\n                <span>{value.user.fname} </span>\n                <span>{value.user.lname}</span>\n              </Link>\n            )}\n            {path == \"userpost\" && (\n              <>\n                <span>{fname} </span>\n                <span>{lname}</span>\n              </>\n            )}\n          </div>\n\n          <div className=\"username\">\n            {username ? username : value.user.username}\n          </div>\n        </div>\n        <div className=\"post-date\">\n          <div>{new Date(value.created_at).toLocaleDateString()}</div>\n          <div>\n            <span>{hour > 12 ? hour - 12 : hour === 0 ? 12 : hour}:</span>\n\n            <span>{minute < 10 ? \"0\" + minute : minute}</span>\n            <span>{hour > 12 ? \"pm\" : \"am\"}</span>\n          </div>\n        </div>\n        {isOwner && (\n          <div\n            className=\"option-btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              if (indexOfCardClicked == index) {\n                setindexOfCardClicked(null);\n              } else {\n                setindexOfCardClicked(index);\n              }\n            }}\n          >\n            <div\n              className=\"btn\"\n              style={{\n                backgroundColor: indexOfCardClicked == index ? \"darkgray\" : \"\",\n                borderRadius: \"4px\",\n              }}\n            >\n              &#8942;\n            </div>\n            {indexOfCardClicked == index && (\n              <div className=\"hamburger-menu\">\n                <div\n                  className=\"menu-btn edit-button-container\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setindexOfCardClicked(null);\n                    setUpdateClick(true);\n                    setUpdateData(value);\n                    setPostid(value._id);\n                    setUpdateIndex(index);\n                  }}\n                >\n                  <div className=\"far fa-edit icon\"></div>\n                  <div className=\"label\">Edit post</div>\n                </div>\n                <div\n                  className=\"menu-btn delete-btn-container\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setindexOfCardClicked(null);\n                    setDeleteClick(true);\n                    setPostid(value._id);\n                    setUpdateIndex(index);\n                  }}\n                >\n                  <div className=\"far fa-trash-alt icon\"></div>\n                  <div className=\"label\">Delete post</div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div className=\"post-content-container\">\n        <div className=\"post-title\">{value.title}</div>\n        <div className=\"post-content\">{value.content_text}</div>\n      </div>\n      {cardError && <div className=\"card-error error\"> {cardError}</div>}\n      {!cardError && (\n        <div\n          className=\"no-like\"\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            setUsersLikedIndex(index);\n\n            setpp(!pp);\n          }}\n        >\n          {/* <span>{likeLength[index]} </span> */}\n          <span>{likeLength[index]} </span>\n\n          <span> </span>\n          <span> {likeLength[index] == 1 ? \"like\" : \"likes\"}</span>\n        </div>\n      )}\n\n      {UserLikedIndex == index && (\n        <UserLikes\n          postid={value._id}\n          setUsersLikedIndex={setUsersLikedIndex}\n          setGetLoading={setGetLoading}\n          path={path}\n        />\n      )}\n\n      <div className=\"card-footer\">\n        <div\n          style={{\n            color: likeClick[index] ? \"blue\" : \"\",\n          }}\n          className=\"like-icon far fa-thumbs-up\"\n          onClick={(e) => {\n            e.preventDefault();\n            like_post(value._id);\n            if (likeClick[index] == true) {\n              likeLength[index] = likeLength[index] - 1;\n              setLikeLength(likeLength);\n\n              const check = result[index].like.findIndex(\n                (x) => x.toString() === jwtData.sub.toString()\n              );\n\n              //this is a kind of an extra precautionary measure\n              //say if the page re-renders for some reason , the like values will be lost since  I was not saving the values in result\n              //now I am using a child component for the hamburger menu but previously the page used to re-render on every click on hamburger.\n              //but now the page won't re-render , but still I would like to do this step.\n              result[index].like.splice(check, 1);\n              setResult(result);\n            } else {\n              likeLength[index] = likeLength[index] + 1;\n              setLikeLength(likeLength);\n\n              result[index].like.push(jwtData.sub);\n              setResult(result);\n            }\n            likeClick[index] = !likeClick[index];\n            setLikeClick(likeClick);\n            setpp(!pp);\n          }}\n        ></div>\n\n        <div\n          className=\"comment-icon far fa-comment-alt\"\n          onClick={(e) => {\n            e.preventDefault();\n            //get comments only once no need to fetch on every click.\n            if (onlyOneClick) {\n              get_comments(value._id);\n              setonlyOneClick(false);\n            }\n            // console.log(commentIconClicked, index);\n            // setCommentIconClicked();\n            // console.log(commentIconClicked[index]);\n            if (commentIconClicked[index] === undefined) {\n              commentIconClicked[index] = true;\n            } else {\n              commentIconClicked[index] = !commentIconClicked[index];\n            }\n            setpp(!pp);\n            setCommentIconClicked(commentIconClicked);\n          }}\n        ></div>\n        <div\n          className=\"share-icon far fa-share-square\"\n          onClick={() => {\n            const element = document.createElement(\"textarea\");\n            element.value = window.location.href;\n            document.body.appendChild(element);\n            element.select();\n            document.execCommand(\"copy\");\n            document.body.removeChild(element);\n            setCopyState(true);\n\n            setTimeout(() => {\n              setCopyState(false);\n            }, 900);\n          }}\n        >\n          {copyState && <div id=\"copy\">Link Copied!!</div>}\n        </div>\n      </div>\n      <div className=\"comment-list\" id={`post-${index}`}>\n        {commentIconClicked[index] && commentError && (\n          <div className=\"error\">{commentError}</div>\n        )}\n        {commentIconClicked[index] &&\n          !commentError &&\n          commentsLoading &&\n          \"loading...\"}\n        {commentIconClicked[index] &&\n          !commentError &&\n          !commentsLoading &&\n          commentIconClicked &&\n          (comments.comment_list.length == 0 ? (\n            <div className=\"empty\">This post has no comments.</div>\n          ) : (\n            <>\n              <div className=\"no-comment\">\n                <span>{comments.comment_list.length} </span>\n                <span>\n                  {comments.comment_list.length == 1 ? \" comment\" : \" comments\"}\n                </span>\n              </div>\n              {comments.comment_list.map((comment, index) => (\n                <CommentCard\n                  comment={comment}\n                  key={uniqid()}\n                  index={index}\n                  postIndex={index}\n                  path={path}\n                  commentOptionIndex={commentOptionIndex}\n                  setCommentOptionIndex={setCommentOptionIndex}\n                  postid={value._id}\n                  comments={comments}\n                  setComments={setComments}\n                  pp={pp}\n                  setpp={setpp}\n                  setGetLoading={setGetLoading}\n                />\n              ))}\n            </>\n          ))}\n        {/* \n        <div>{newCommentLoading && \"loading...\"}</div> */}\n      </div>\n      {commentIconClicked[index] && !commentsLoading && (\n        <CommentCreate\n          postid={value._id}\n          key={uniqid()}\n          setComments={setComments}\n          comments={comments}\n          postIndex={index}\n          pp={pp}\n          setpp={setpp}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserPostCard;\n","import React, { useContext, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./MyPostDelete.css\";\n\nconst MyPostDelete = ({\n  deleteClick,\n  setDeleteClick,\n  user_delete_response,\n  postid,\n}) => {\n  const { axios_request } = useContext(OdinBookContext);\n  const mypost_delete_route = `/mypost/${postid}`;\n  const mypost_delete_method = \"DELETE\";\n\n  const [postLoading, setPostLoading] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  const make_server_request = () => {\n    const cb_error = (err) => {\n      setError(err.message);\n      setPostLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPostLoading(false);\n      // setDeleteClick(false);\n      user_delete_response(response);\n    };\n\n    axios_request({\n      route: mypost_delete_route,\n      data: \"\",\n      method: mypost_delete_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const deleteHandler = () => {\n    make_server_request();\n  };\n\n  return (\n    <div className=\"MyPostDelete\">\n      {error && (\n        <div className=\"error\">\n          <div>{error}</div>\n          <div>Please try refreshing the Page</div>\n        </div>\n      )}\n      {!error && (\n        <div className=\"dialog-box\">\n          <p className=\"confitm-msg\">Are you sure want to delete this post?</p>\n          <div className=\"btn\">\n            <button\n              className=\"dlt-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                if (!postLoading) {\n                  setPostLoading(true);\n                  deleteHandler();\n                } else {\n                  return;\n                }\n              }}\n            >\n              {!postLoading ? \"Delete\" : \"Deleting post....\"}\n            </button>\n\n            <button\n              className=\"cancel-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                setDeleteClick(false);\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyPostDelete;\n","import React, { useContext } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./WelcomeMsg.css\";\n\nconst WelcomeMsg = () => {\n  const { jwtData } = useContext(OdinBookContext);\n  return (\n    <div className=\"WelcomeMsg\" id=\"welcome_msg_unique\">\n      <div className=\"container-msg\">\n        Welcome <span>{jwtData.fname} </span>\n        <span>{jwtData.lname} :)</span>\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomeMsg;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport MypostCreate from \"../MyPosts/MyPostCreate\";\n\nimport \"./UserPost.css\";\nimport MyPostUpdate from \"../MyPosts/MyPostUpdate\";\nimport UserPostCard from \"./UserPostCard\";\nimport MyPostDelete from \"../MyPosts/MyPostDelete\";\nimport WelcomeMsg from \"../WelcomeMsg/WelcomeMsg\";\n\nconst UserPost = ({ path }) => {\n  const {\n    jwtData,\n    axios_request,\n    myPostsValue,\n    didMyPostsMountValue,\n    myNewsFeedValue,\n    didMyNewsFeedMountValue,\n    myFriendsValue,\n    didMyFriendsMountValue,\n  } = useContext(OdinBookContext);\n  const [myPosts, setMyPosts] = myPostsValue;\n  const [myNewsfeed, setMyNewsFeed] = myNewsFeedValue;\n  const [didMyNewsFeedMount, setDidMyNewsFeedMount] = didMyNewsFeedMountValue;\n  const [didMyPostsMount, setDidMyPostsMount] = didMyPostsMountValue;\n  const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n\n  const [error, setError] = useState(\"\");\n  const [getLoading, setGetLoading] = useState(true);\n\n  const [isWelcomeMsgClick, setIsWelcomeMsgClick] = useState(false);\n  //herer result is the post list\n  const [result, setResult] = useState([]);\n\n  const [isOwner, setIsOwner] = useState(false);\n  const [updateClick, setUpdateClick] = useState(\"\");\n  const [createClick, setCreateClick] = useState(false);\n  const [deleteClick, setDeleteClick] = useState(false);\n  const [likeLength, setLikeLength] = useState([]);\n\n  const location = useLocation();\n  //this is so we don't have to make request to the server to prefill the update form.\n  const [updateData, setUpdateData] = useState(\"\");\n\n  const [postid, setPostid] = useState(\"\");\n\n  const [updateIndex, setUpdateIndex] = useState(\"\");\n\n  const [indexOfCardClicked, setindexOfCardClicked] = useState(null);\n\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  const [comments, setComments] = useState([]);\n\n  //putting in an if-block since in news feed location.state will be undefined\n  let userid;\n  let fname;\n  let lname;\n  let from;\n\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n  if (path === \"userpost\") {\n    userid = local_history.userid;\n    fname = local_history.fname;\n    lname = local_history.lname;\n    from = local_history.from;\n  }\n\n  // console.log(getLoading);\n  const get_posts = () => {\n    let post_list_route;\n    if (path === \"userpost\") {\n      post_list_route = `/posts/${userid}`;\n    } else if (path === \"newsfeed\") {\n      post_list_route = \"/news-feed\";\n    }\n\n    const post_list_method = \"GET\";\n    const cb_error = (err) => {\n      setError(err.message);\n\n      setGetLoading(false);\n    };\n    const cb_response = (response) => {\n      if (path === \"newsfeed\") {\n        setMyNewsFeed(response.data);\n      } else {\n        if (userid === jwtData.sub) {\n          setMyPosts(response.data);\n        }\n      }\n\n      setResult(response.data);\n      setGetLoading(false);\n\n      const h = Array(response.data.length).fill(false);\n      setLikeClick(h);\n    };\n\n    axios_request({\n      route: post_list_route,\n      data: \"\",\n      method: post_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (path === \"userpost\") {\n      //herer if the url is news-feed , the userid will be undefined.\n      if (userid !== jwtData.sub) {\n        get_posts();\n        setIsOwner(false);\n      } else {\n        if (didMyPostsMount) {\n          get_posts();\n          setIsOwner(true);\n          setDidMyPostsMount(false);\n        } else {\n          setResult(myPosts);\n          setGetLoading(false);\n          setIsOwner(true);\n        }\n      }\n    } else if (path == \"newsfeed\") {\n      if (didMyNewsFeedMount) {\n        get_posts();\n        setIsOwner(false);\n        setDidMyNewsFeedMount(false);\n      } else {\n        setResult(myNewsfeed);\n        setGetLoading(false);\n        setIsOwner(false);\n      }\n    }\n  }, [location.pathname, from]);\n\n  useEffect(() => {\n    if (path === \"newsfeed\") {\n      get_posts();\n      setIsOwner(false);\n    }\n  }, [myFriends.length]);\n\n  //this is to shows the friends in user likes;\n  const get_myfriends = () => {\n    const friend_list_route = `/friend/${jwtData.sub}`;\n    const friend_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setMyFriends(response.data);\n    };\n\n    axios_request({\n      route: friend_list_route,\n      data: \"\",\n      method: friend_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n  useEffect(() => {\n    if (didMyFriendsMount) {\n      // console.log(didMyFriendsMount);\n      get_myfriends();\n      setDidMyFriendsMount(false);\n    } else {\n      // console.log(didMyFriendsMount);\n      return;\n    }\n  }, []);\n\n  const post_create_response = (response) => {\n    myPosts.unshift(response.data);\n    setMyPosts(myPosts);\n    setResult(myPosts);\n  };\n\n  const post_update_response = (response) => {\n    myPosts[updateIndex] = response.data;\n    setMyPosts(myPosts);\n    setResult(myPosts);\n  };\n\n  //using updateindex for update and delete same\n  const post_delete_repsonse = (response) => {\n    //as soon as we get the response delete the post from the screen\n\n    // console.log(updateIndex);\n\n    // console.log(myPosts);\n    myPosts.splice(updateIndex, 1);\n    setMyPosts(myPosts);\n    setResult(myPosts);\n    // console.log(myPosts);\n\n    //we are doing this here bcoz jab tak child component mein value change nahi hota parent component re-render nahi hoga.\n    //MyPostDelete meinn setDelteClick mein same component mein hi deleteClick value change karna pad raha tha isliye UserPost re-render nahi ho raha tha.\n    //but postupdate and postcreate ka click-value child compoenent postform mein change ho raha tha isliye userpost re-render ho raha tha.\n    setDeleteClick(false);\n  };\n\n  useEffect(() => {\n    if (from === \"/login\" || from === \"/signup\") {\n      const elemnt_welcome_msg = document.querySelector(\"#welcome_msg_unique\");\n      if (elemnt_welcome_msg) {\n        elemnt_welcome_msg.addEventListener(\"click\", (e) => {\n          setIsWelcomeMsgClick(true);\n        });\n      }\n    }\n  }, []);\n\n  const [likeClick, setLikeClick] = useState([]);\n  const [UserLikedIndex, setUsersLikedIndex] = useState(null);\n  return (\n    <div className={path == \"userpost\" ? \"UserPost myaccount\" : \"UserPost\"}>\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          {/* doing path=='newsfeed' herer bcoz for a second it shows loading even if we are loading the data from state */}\n          {/* maybe we will show loading even for newsfeed for a second. */}\n          {/* {getLoading && path !== \"newsfeed\" && \"loading\"} */}\n          {!isWelcomeMsgClick &&\n            (from === \"/login\" || from === \"/signup\") &&\n            path === \"newsfeed\" && <WelcomeMsg />}\n          {getLoading && (\n            <div className=\"loading-container\" style={{ zIndex: \"1\" }}>\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n          {!getLoading && (\n            <>\n              {isOwner && (\n                <div>\n                  <MypostCreate\n                    user_post_response={post_create_response}\n                    createClick={createClick}\n                    setCreateClick={setCreateClick}\n                  />\n                </div>\n              )}\n              {updateClick && (\n                <div>\n                  <MyPostUpdate\n                    postid={postid}\n                    updateClick={updateClick}\n                    setUpdateClick={setUpdateClick}\n                    updateData={updateData}\n                    user_post_response={post_update_response}\n                  />\n                </div>\n              )}\n              {deleteClick && (\n                <MyPostDelete\n                  setDeleteClick={setDeleteClick}\n                  deleteClick={deleteClick}\n                  user_delete_response={post_delete_repsonse}\n                  postid={postid}\n                />\n              )}\n              {result.length == 0 ? (\n                <div className=\"empty-posts\">\n                  {path == \"newsfeed\" &&\n                    \"Please add friends to see their posts here :)\"}\n                  {isOwner &&\n                    path !== \"newsfeed\" &&\n                    \"Create new posts to see them here\"}\n                  {!isOwner && path !== \"newsfeed\" && (\n                    <>\n                      <span>\n                        {fname} {lname} doesn't have any posts to show :(\n                      </span>\n                    </>\n                  )}\n                </div>\n              ) : (\n                result.map((value, index) => {\n                  return (\n                    <UserPostCard\n                      key={uniqid()}\n                      value={value}\n                      index={index}\n                      setPostid={setPostid}\n                      setUpdateClick={setUpdateClick}\n                      setUpdateData={setUpdateData}\n                      setUpdateIndex={setUpdateIndex}\n                      indexOfCardClicked={indexOfCardClicked}\n                      setindexOfCardClicked={setindexOfCardClicked}\n                      isOwner={isOwner}\n                      setDeleteClick={setDeleteClick}\n                      deleteClick={deleteClick}\n                      likeClick={likeClick}\n                      setLikeClick={setLikeClick}\n                      postsLength={result.length}\n                      path={path}\n                      likeLength={likeLength}\n                      setLikeLength={setLikeLength}\n                      UserLikedIndex={UserLikedIndex}\n                      setUsersLikedIndex={setUsersLikedIndex}\n                      result={result}\n                      setResult={setResult}\n                      setGetLoading={setGetLoading}\n                      comments={comments}\n                      setComments={setComments}\n                    />\n                  );\n                })\n              )}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserPost;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./UserDetail.css\";\n\nconst UserDetailFriendBtn = () => {\n  const {\n    axios_request,\n    jwtData,\n    myFriendsValue,\n    didMyFriendsMountValue,\n  } = useContext(OdinBookContext);\n\n  const [error, setError] = useState(\"\");\n  const [myFriends, setMyFriends] = myFriendsValue;\n  const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n  const [pp, setpp] = useState(false);\n\n  const [friendBtn, setFriendBtn] = useState(false);\n\n  const [loading, setLoading] = useState(true);\n\n  const location = useLocation();\n\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n  let userid = local_history.userid;\n  let fname = local_history.fname;\n  let lname = local_history.lname;\n  let username = local_history.username;\n\n  //we will fetch the logged in users friends list incase if the myfriends was not loaded\n  const get_myfriends = () => {\n    const route = `/friend/${jwtData.sub}`;\n    const method = \"GET\";\n    const cb_err = (err) => {};\n\n    const cb_response = (response) => {\n      setMyFriends(response.data);\n      setLoading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_err,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (didMyFriendsMount) {\n      get_myfriends();\n      setDidMyFriendsMount(false);\n    } else {\n      setLoading(false);\n      return;\n    }\n  }, []);\n\n  useEffect(() => {\n    const check = myFriends.findIndex((x) => {\n      return x.username === username;\n    });\n    if (check !== -1) {\n      setFriendBtn(true);\n    } else {\n      setFriendBtn(false);\n    }\n    setpp(!pp);\n  }, [myFriends]);\n\n  const clickHandler = () => {\n    const route = `/friend/${userid}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    if (friendBtn == true) {\n      const get_index = myFriends.findIndex((x) => x.username == username);\n\n      if (get_index !== -1) {\n        myFriends.splice(get_index, 1);\n        setMyFriends(myFriends);\n      }\n    } else {\n      myFriends.push({\n        _id: userid,\n        username: username,\n        fname: fname,\n        lname: lname,\n      });\n    }\n\n    setpp(!pp);\n  };\n\n  return (\n    <div className=\"UserDetailFriendBtn\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && !loading && (\n        <div\n          style={{ color: friendBtn ? \"red\" : \"blue\" }}\n          className={\n            friendBtn ? \"add-btn fas fa-user-minus\" : \"add-btn fas fa-user-plus\"\n          }\n          onClick={(e) => {\n            e.preventDefault();\n            setFriendBtn(!friendBtn);\n\n            setpp(!pp);\n            clickHandler();\n          }}\n        ></div>\n      )}\n    </div>\n  );\n};\n\nexport default UserDetailFriendBtn;\n","import React, { useContext, useEffect } from \"react\";\nimport UserNav from \"./UserNav\";\nimport { Route, Switch, useParams, useLocation, Link } from \"react-router-dom\";\nimport UserAbout from \"./UserAbout\";\nimport UserPost from \"./UserPost\";\nimport UserFriend from \"./UserFriend\";\nimport \"./UserDetail.css\";\nimport { OdinBookContext } from \"../Context\";\nimport UserDetailFriendBtn from \"./UserDetailFriendBtn\";\n\nconst UserDetail = () => {\n  const location = useLocation();\n  let params = useParams();\n\n  const { jwtData } = useContext(OdinBookContext);\n\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n  let userid = local_history.userid;\n  let fname = local_history.fname;\n  let lname = local_history.lname;\n  let username = local_history.username;\n  let from = local_history.from;\n\n  // console.log(fname);\n\n  // console.log(location);\n  return (\n    <div className=\"UserDetail\">\n      <div className=\"user-banner-container\">\n        <div className=\"user-banner\">\n          {params.username}\n          <div className=\"banner-btn\">\n            {userid && userid !== jwtData.sub && (\n              <div className=\"chat-link-container\">\n                <Link\n                  to={{\n                    pathname: \"/chat\",\n                    state: {\n                      userid: userid,\n                      fname: fname,\n                      lname: lname,\n                      username: username,\n                    },\n                  }}\n                >\n                  <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n                </Link>\n              </div>\n            )}\n            {userid && userid !== jwtData.sub && <UserDetailFriendBtn />}\n          </div>\n        </div>\n\n        <div className=\"name-container\">\n          <div className=\"name\">\n            <span>{fname} </span>\n            <span> {lname}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"UserNav\">\n        <UserNav\n          to={`/user/${params.username}/posts`}\n          fname={fname}\n          lname={lname}\n          userid={userid}\n          username={username}\n          label=\"Posts\"\n        />\n        <UserNav\n          to={`/user/${params.username}/about`}\n          fname={fname}\n          lname={lname}\n          userid={userid}\n          username={username}\n          label=\"About\"\n        />\n        <UserNav\n          to={`/user/${params.username}/friends`}\n          fname={fname}\n          lname={lname}\n          userid={userid}\n          username={username}\n          label=\"Friends\"\n        />\n      </div>\n      <Switch>\n        <Route path={`/user/${params.username}/posts`}>\n          <UserPost path=\"userpost\" />\n        </Route>\n        <Route path={`/user/${params.username}/about`}>\n          <UserAbout />\n        </Route>\n        <Route path={`/user/${params.username}/friends`}>\n          <UserFriend />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default UserDetail;\n","import React, { useCallback, useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./Hamburger.css\";\n\nconst Hamburger = () => {\n  const { jwtData } = useContext(OdinBookContext);\n\n  return (\n    <div className=\"Hamburger\" style={{ zIndex: \"1\" }}>\n      <div className=\"box-1 box\">\n        <Link\n          to={{\n            pathname: `/user/${jwtData.user}/posts`,\n            state: {\n              fname: jwtData.fname,\n              lname: jwtData.lname,\n              username: jwtData.user,\n              userid: jwtData.sub,\n            },\n          }}\n        >\n          <div className=\"profile-picture\">\n            {[...jwtData.fname[0].toLowerCase()]}\n          </div>\n          <div className=\"nav-link-container\">\n            <div className=\"user label\">{jwtData.user}</div>\n\n            <div className=\"nav-link-desc label\">See your profile</div>\n          </div>\n        </Link>\n      </div>\n\n      <div className=\"box-2 box\">\n        <Link to=\"/logout\">\n          <div className=\"label\">Logout</div>\n        </Link>\n      </div>\n      <div className=\"box-2 box\">\n        <Link to=\"/about\">About</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Hamburger;\n","import React from \"react\";\nimport \"./ChatMap.css\";\n\nconst ChatMap = ({ value, index }) => {\n  let d;\n  let yearstr;\n  let splityear;\n  if (value.createdAt !== \"\") {\n    d = new Date(value.createdAt);\n\n    yearstr = d.getFullYear().toString();\n    splityear = [...yearstr];\n  }\n\n  return (\n    <div className=\"ChatMap\">\n      {value.message !== \"\" && (\n        <>\n          <div className={value.isOwner == true ? \"me\" : \"person\"}>\n            <div\n              className={value.isOwner == true ? \"curve-right\" : \"curve-left\"}\n            ></div>\n\n            <div className={value.isOwner == true ? \"right\" : \"left\"}>\n              <div className=\"message\">{value.message}</div>\n              <div className=\"date-container\">\n                <div className=\"date\">\n                  <span>{d.getDate()}/</span>\n                  <span>{d.getMonth() + 1}/</span>\n                  <span>{splityear[2]}</span>\n                  <span>{splityear[3]}</span>\n                </div>\n                <div className=\"time\">\n                  <span>\n                    {d.getHours() > 12\n                      ? d.getHours() - 12\n                      : d.getHours() === 0\n                      ? 12\n                      : d.getHours()}\n                    :\n                  </span>\n                  <span>\n                    {d.getMinutes() < 10\n                      ? \"0\" + d.getMinutes()\n                      : d.getMinutes()}\n                  </span>\n                  <span>{d.getHours() > 12 ? \"pm\" : \"am\"}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChatMap;\n","import React, { useState, useContext, useRef } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport ChatMap from \"./ChatMap\";\nimport uniqid from \"uniqid\";\nimport \"./CharCard.css\";\n\nconst ChatCard = ({ fname, lname, userid, username, msgArr, setMsgArr }) => {\n  const valueRef = useRef();\n\n  const [error, setError] = useState(\"\");\n\n  const { jwtData, socket, axios_request, myChatListValue } = useContext(\n    OdinBookContext\n  );\n\n  const [myChatList, setMyChatList] = myChatListValue;\n\n  const submitHandler = () => {\n    // e.preventDefault();\n\n    // const date = Date.now();\n\n    // setMyMsg([...myMsg, { msg: state, date: date }]);\n\n    // setSubmitMsg({ message: state, createdAt: new Date().toISOString() });\n\n    setMsgArr([\n      ...msgArr,\n      {\n        message: valueRef.current.value,\n        createdAt: new Date().toISOString(),\n        isOwner: true,\n      },\n    ]);\n\n    socket.emit(\"send_message\", {\n      to: username,\n      from: {\n        fname: jwtData.fname,\n        lname: jwtData.lname,\n        username: jwtData.user,\n        userid: jwtData.sub,\n      },\n      message: valueRef.current.value,\n      createdAt: new Date().toISOString(),\n    });\n\n    const check = myChatList.findIndex((x) => x.user._id === userid);\n    if (check !== -1) {\n      myChatList[check].last_msg = new Date().toISOString();\n    } else {\n      myChatList.push({\n        last_msg: new Date().toISOString(),\n        user: {\n          fname: fname,\n          lname: lname,\n          username: username,\n          _id: userid,\n        },\n      });\n    }\n    const sort_arr = myChatList.sort((a, b) =>\n      b.last_msg < a.last_msg ? -1 : b.last_msg > a.last_msg ? 1 : 0\n    );\n\n    setMyChatList(sort_arr);\n\n    valueRef.current.value = \"\";\n  };\n\n  const save_messages_on_database = (msg) => {\n    const route = `/chat/${userid}`;\n    const method = \"PUT\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: msg,\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  //!we are doing save_received and save_sent from the user who sent message and not by socket.io because if the other user is not online then he wont be able to make updates on his sent_received object.\n  //arvind to komal msg sent\n  //save my name in komal's (people from who I received message)\n  const save_received = () => {\n    const route = `/mychat/${jwtData.sub}/${userid}`;\n    const method = \"PUT\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: { last_msg: new Date().toISOString() },\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  //save Komal's name in my sent list.\n  //if she already in received then we don't need this function\n  //we can find this out with if the messages from both are not null\n  //we will not call this request if the length of messages<=2;\n  //we will call this only once because we need to delete the name from the list\n  const save_sent = () => {\n    const route = `/mychat/${userid}/${jwtData.sub}`;\n    const method = \"PUT\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: { last_msg: new Date().toISOString() },\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const save_isread_false = () => {\n    const route = `/isreadfalse/${userid}`;\n    const method = \"PUT\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_response: cb_response,\n      axios_error: cb_error,\n    });\n  };\n  return (\n    <div className=\"ChatCard\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <div className=\"chat-map-container\">\n            {msgArr.map((value, index) => {\n              return <ChatMap value={value} index={index} key={uniqid()} />;\n            })}\n          </div>\n          <form autoComplete=\"off\">\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                // onChange={changeHandler}\n                ref={valueRef}\n                name=\"msg\"\n                id=\"msg\"\n              />\n\n              <div className=\"send-btn\">\n                <button\n                  onClick={(e) => {\n                    e.preventDefault();\n                    if (valueRef.current.value === \"\") {\n                      return;\n                    } else {\n                      save_isread_false();\n                      save_received();\n                      save_sent();\n                      save_messages_on_database({\n                        message: valueRef.current.value,\n                        createdAt: new Date().toISOString(),\n                      });\n                      submitHandler();\n                    }\n                  }}\n                >\n                  Send\n                </button>\n              </div>\n            </div>\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChatCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./Chat.css\";\nimport ChatCard from \"./ChatCard\";\n\nconst Chat = () => {\n  const location = useLocation();\n\n  const [error, setError] = useState(\"\");\n\n  const { axios_request, jwtData, socket, isReadValue } = useContext(\n    OdinBookContext\n  );\n\n  //this detail are of the person on whose chat btn we clicked\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n  let userid = local_history.userid;\n  let fname = local_history.fname;\n  let lname = local_history.lname;\n  let username = local_history.username;\n\n  const [tempResponse, setTempResponse] = useState([]);\n  const [response, setResponse] = useState([]);\n  const [msgArr, setMsgArr] = useState([]);\n\n  const [mymsgloading, setmsgloading] = useState(true);\n  const [responseloading, setresponseloading] = useState(true);\n\n  const [myMsg, setMyMsg] = useState([]);\n\n  const [isRead, setIsRead] = isReadValue;\n\n  useEffect(() => {\n    socket.on(\"new_msg\", (data) => {\n      setTempResponse([\n        ...tempResponse,\n        { message: data.message, createdAt: data.createdAt },\n      ]);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    if (tempResponse.length !== 0) {\n      setMsgArr([...msgArr, ...tempResponse]);\n    }\n  }, [tempResponse]);\n\n  useEffect(() => {\n    const h = async () => {\n      await Promise.all([get_responses(), get_my_messages()]);\n    };\n    h();\n    // get_responses();\n    // get_my_messages();\n\n    save_isreadtrue();\n  }, []);\n\n  // get the messages I sent to Komal\n  const get_responses = () => {\n    // sender = jwtData.sub\n    const route = `/chat/${userid}/${jwtData.sub}`;\n    const method = \"GET\";\n\n    const cb_response = (response) => {\n      if (response.data.length !== 0) {\n        let newArr = response.data.message_container.map((v) => ({\n          ...v,\n          isOwner: true,\n        }));\n        setResponse(newArr);\n      } else {\n        //it might happen that there are no sent messages.\n        setResponse([{ message: \"\", createdAt: \"\" }]);\n      }\n\n      setresponseloading(false);\n    };\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setresponseloading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  // the messages Komal sent to me\n  const get_my_messages = () => {\n    const route = `/chat/${jwtData.sub}/${userid}`;\n    const method = \"GET\";\n\n    const cb_response = (response) => {\n      if (response.data.length !== 0) {\n        setMyMsg(response.data.message_container);\n      } else {\n        //it might happen that there are no response msgs and only ond side messages.\n        setMyMsg([{ message: \"\", createdAt: \"\" }]);\n      }\n      setmsgloading(false);\n    };\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setmsgloading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (!mymsgloading && !responseloading) {\n      let arr = [...response, ...myMsg];\n\n      let sorted = arr.sort((a, b) => {\n        return a.createdAt < b.createdAt\n          ? -1\n          : a.createdAt > b.createdAt\n          ? 1\n          : 0;\n      });\n\n      setMsgArr(sorted);\n    }\n  }, [mymsgloading, responseloading]);\n\n  const save_isreadtrue = () => {\n    const route = `/isreadtrue/${userid}`;\n    const method = \"PUT\";\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    if (isRead.length > 0) {\n      const is_read_index = isRead.findIndex((x) => x.user === userid);\n      if (is_read_index !== -1) {\n        isRead[is_read_index].isread = [];\n        isRead[is_read_index].isread.push(true);\n        setIsRead(isRead);\n      }\n    }\n    //else will be... there are no messages to set to read=true\n  };\n\n  useEffect(() => {\n    const element = document.querySelector(\".ChatCard .chat-map-container\");\n\n    if (element) {\n      const height = element.scrollHeight;\n\n      element.scrollTo(0, height);\n    }\n  }, [msgArr]);\n\n  return (\n    <div className=\"Chat\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          {mymsgloading && responseloading && (\n            <div className=\"loading-container\">\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n          <div className=\"head-top\">\n            <div className=\"profile-picture\">{[...fname][0].toLowerCase()}</div>\n            <div className=\"name\">\n              <span>{fname} </span>\n              <span>{lname}</span>\n            </div>\n          </div>\n          {!mymsgloading && !responseloading && (\n            <>\n              <ChatCard\n                fname={fname}\n                lname={lname}\n                userid={userid}\n                username={username}\n                msgArr={msgArr}\n                setMsgArr={setMsgArr}\n              />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ChatListCard = ({ value, index, isRead }) => {\n  let no_unread_msgs;\n  for (let i = 0; i < isRead.length; i++) {\n    if (isRead[i].user === value.user._id) {\n      if (isRead[i].isread[0] == true) {\n        break;\n      } else {\n        no_unread_msgs = isRead[i].isread.length;\n      }\n    }\n  }\n\n  const minute = new Date(value.last_msg).getMinutes();\n  const hour = new Date(value.last_msg).getHours();\n  const date = new Date(value.last_msg).getDate();\n  const month = new Date(value.last_msg).getMonth() + 1;\n  const year = new Date(value.last_msg).getFullYear();\n  const splityear = [...year.toString()];\n\n  return (\n    <div className=\"ChatListCard\">\n      <Link\n        to={{\n          pathname: \"/chat\",\n          state: {\n            userid: value.user._id,\n            fname: value.user.fname,\n            lname: value.user.lname,\n            username: value.user.username,\n          },\n        }}\n      >\n        <div className=\"profile-picture\">\n          {[...value.user.fname][0].toLowerCase()}\n        </div>\n        <div className=\"name\">\n          <div>\n            <span>{value.user.fname} </span>\n            <span>{value.user.lname} </span>\n          </div>\n        </div>\n        <div className=\"read-container\">\n          <div className=\"read\">\n            <div className={no_unread_msgs ? \"show-read isread\" : \"show-read\"}>\n              {no_unread_msgs || \"\"}\n            </div>\n          </div>\n          <div className=\"date-container\">\n            <div className=\"date\">\n              <span>{date}/</span>\n\n              <span>{month}/</span>\n\n              <span>{splityear[2]}</span>\n              <span>{splityear[3]}</span>\n            </div>\n\n            <div className=\"time\">\n              <span>{hour > 12 && hour - 12}:</span>\n              <span>{hour === 0 ? 12 : hour}</span>\n\n              {/* for  0 to 09 minute */}\n              <span>{minute < 10 ? \"0\" + minute : minute}</span>\n\n              <span>{hour > 12 ? \"pm\" : \"am\"}</span>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default ChatListCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport ChatListCard from \"./ChatListCard\";\nimport uniqid from \"uniqid\";\nimport \"./ChatList.css\";\n\nconst ChatList = () => {\n  const {\n    axios_request,\n\n    myChatListValue,\n    didMyChatListMountValue,\n    isReadValue,\n    socket,\n  } = useContext(OdinBookContext);\n\n  const [isRead, setIsRead] = isReadValue;\n\n  const [myChatList, setMyChatList] = myChatListValue;\n  const [didMyChatListMount, setDidMyChatListMount] = didMyChatListMountValue;\n\n  const [chatListLoading, setChatListLoading] = useState(true);\n  const [isreadLoading, setIsreadLoading] = useState(true);\n\n  const [tempIsread, settempIsread] = useState([]);\n  const [ischange, setischange] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const get_chat_list = () => {\n    const route = `/mychat`;\n    const method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setChatListLoading(false);\n    };\n\n    const cb_response = (response) => {\n      const a = response.data.received;\n      const b = response.data.sent;\n\n      if (b.length > 0) {\n        a.forEach((value) => {\n          const dupl_index = b.findIndex((x) => x.user._id === value.user._id);\n          if (dupl_index !== -1) {\n            b.splice(dupl_index, 1);\n          }\n        });\n      }\n\n      const c = [...a, ...b];\n\n      const sort_arr = c.sort((a, b) => {\n        return b.last_msg < a.last_msg ? -1 : b.last_msg > a.last_msg ? 1 : 0;\n      });\n\n      setMyChatList(sort_arr);\n\n      setChatListLoading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const get_isread = () => {\n    const route = \"/isread\";\n    const method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setIsreadLoading(false);\n    };\n    const cb_response = (response) => {\n      setIsRead(response.data.users);\n      setIsreadLoading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_response: cb_response,\n      axios_error: cb_error,\n    });\n  };\n\n  useEffect(() => {\n    if (didMyChatListMount) {\n      get_chat_list();\n      get_isread();\n      setDidMyChatListMount(false);\n    } else {\n      setIsreadLoading(false);\n      setChatListLoading(false);\n    }\n  }, [ischange]);\n\n  useEffect(() => {\n    socket.on(\"new_msg\", (data) => {\n      settempIsread(data);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    if (tempIsread.length !== 0) {\n      const is_read_index = isRead.findIndex(\n        (x) => x.user === tempIsread.from.userid\n      );\n      if (is_read_index !== -1) {\n        if (isRead[is_read_index].isread[0] === true) {\n          isRead[is_read_index].isread.splice(0, 1);\n        }\n        isRead[is_read_index].isread.push(false);\n      } else {\n        isRead.push({ user: tempIsread.from.userid, isread: [false] });\n      }\n      setIsRead(isRead);\n\n      const check = myChatList.findIndex(\n        (x) => x.user._id === tempIsread.from.userid\n      );\n\n      if (check !== -1) {\n        myChatList[check].last_msg = new Date().toISOString();\n      } else {\n        myChatList.push({\n          last_msg: new Date().toISOString(),\n          user: {\n            fname: tempIsread.from.fname,\n            lname: tempIsread.from.lname,\n            username: tempIsread.from.username,\n            _id: tempIsread.from.userid,\n          },\n        });\n      }\n\n      const sort_arr = myChatList.sort((a, b) =>\n        b.last_msg < a.last_msg ? -1 : b.last_msg > a.last_msg ? 1 : 0\n      );\n\n      setMyChatList(sort_arr);\n      setischange(!ischange);\n    }\n  }, [tempIsread]);\n\n  return (\n    <div className=\"ChatList\">\n      {error && <div className=\"errorr\">{error}</div>}\n      {!error && (\n        <>\n          {chatListLoading && isreadLoading && (\n            <div className=\"loading-container\">\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n          {!chatListLoading &&\n            !isreadLoading &&\n            (myChatList.length === 0 ? (\n              <div className=\"empty-chatlist\">\n                Please start a conversation with someone to see it here.\n              </div>\n            ) : (\n              myChatList.map((value, index) => (\n                <ChatListCard\n                  value={value}\n                  index={index}\n                  key={uniqid()}\n                  isRead={isRead}\n                />\n              ))\n            ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChatList;\n","import React, { useState, useEffect } from \"react\";\nimport Hamburger from \"../Hamburger/Hamburger\";\n\nconst Menu = () => {\n  const [isClick, setIsclick] = useState(false);\n  useEffect(() => {\n    const x = window;\n    x.addEventListener(\"click\", (e) => {\n      //maybe if something goes wrong ..putting this in a try,catch block\n      try {\n        e.stopPropagation();\n        e.preventDefault();\n        let arr = e.target.classList;\n\n        for (let i = 0; i < arr.length; i++) {\n          let element = document.querySelector(`.${arr[i]}`);\n\n          // doing this 'if(element==null)' so if the form-btn is clicked cancel this function shouldn't be affected.\n          //since the form-btn will be null when it is closed, so to prevent the error\n          if (element == null) {\n            return;\n          }\n\n          let p = element.classList;\n          if (\n            p[i].toString() !== \"drop-btn\" &&\n            p[i] !== null &&\n            p[i] !== \"ham-icon\" &&\n            p[i] !== \"close-icon\"\n          ) {\n            setIsclick(false);\n          }\n          arr = [];\n        }\n\n        arr = [];\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n  }, []);\n  return (\n    <div className=\"Menu\">\n      <div\n        style={{\n          color: isClick ? \"red\" : \"\",\n        }}\n        className=\"drop-btn \"\n        onClick={(e) => {\n          e.stopPropagation();\n          setIsclick(!isClick);\n        }}\n      >\n        {isClick ? (\n          <div className=\"close-icon fas fa-times-circle\"></div>\n        ) : (\n          <div className=\"ham-icon fa fa-caret-down\"></div>\n        )}\n\n        {isClick && <Hamburger />}\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport \"./PageNotFound.css\";\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"PageNotFound\">\n      <p>Error 404 </p>\n      <p>Oopsie, couldn't find the page you were looking for :(</p>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","export default __webpack_public_path__ + \"static/media/resume.2b05b67e.png\";","import React from \"react\";\nimport resume from \"../../resume.png\";\nimport \"./Resume.css\";\n\nconst Resume = () => {\n  return (\n    <div className=\"Resume\">\n      <img src={resume} alt=\"resume\" />\n    </div>\n  );\n};\n\nexport default Resume;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\n\nconst ExploreCard = ({ value, index }) => {\n  const { jwtData, myFriendsValue, axios_request } = useContext(\n    OdinBookContext\n  );\n  const [friendBtn, setFriendBtn] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  const clickHandler = () => {\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {\n      // console.log(response);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    // console.log(friendBtn);\n    if (friendBtn) {\n      const get_index = myFriends.findIndex(\n        (x) => x.username == value.username\n      );\n      if (get_index !== -1) {\n        myFriends.splice(get_index, 1);\n        setMyFriends(myFriends);\n      }\n    } else {\n      myFriends.push(value);\n    }\n  };\n  return (\n    <div className=\"ExploreCard\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <div className=\"profile-picture\">\n            {[...value.fname[0].toLowerCase()]}\n          </div>\n          <div className=\"name-container\">\n            <Link\n              to={{\n                pathname: `/user/${value.username}/posts`,\n                state: {\n                  userid: value._id,\n                  fname: value.fname,\n                  lname: value.lname,\n                  username: value.username,\n                },\n              }}\n            >\n              <div className=\"name\">\n                <span>{value.fname} </span>\n                <span>{value.lname}</span>\n              </div>\n            </Link>\n            <div className=\"username\">{value.username}</div>\n          </div>\n          {jwtData.sub !== value._id && (\n            <div\n              className=\"add-btn\"\n              style={{\n                color: friendBtn ? \"red\" : \"blue\",\n              }}\n              onClick={() => {\n                setFriendBtn(!friendBtn);\n                clickHandler();\n              }}\n            >\n              <div\n                // style={{ color: \"blue\" }}\n                className={\n                  friendBtn\n                    ? \"add-btn fas fa-user-minus\"\n                    : \"add-btn fas fa-user-plus\"\n                }\n              ></div>\n            </div>\n          )}\n          <div className=\"chat-link-container\">\n            <Link\n              to={{\n                pathname: \"/chat\",\n                state: {\n                  userid: value._id,\n                  fname: value.fname,\n                  lname: value.lname,\n                  username: value.username,\n                },\n              }}\n            >\n              <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n            </Link>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ExploreCard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport ExploreCard from \"./ExploreCard\";\nimport uniqid from \"uniqid\";\nimport \"./Explore.css\";\n\nconst Explore = () => {\n  const {\n    axios_request,\n    didMyFriendsMountValue,\n    myFriendsValue,\n    jwtData,\n  } = useContext(OdinBookContext);\n  const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  const [error, setError] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [getLoading, setGetLoading] = useState(true);\n  const [get_friends_loading, setGet_friends_loading] = useState(true);\n\n  const get_users = () => {\n    let user_list_route = `/user_list`;\n\n    const user_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setResult(response.data);\n      setGetLoading(false);\n      // console.log(response.data);\n    };\n\n    axios_request({\n      route: user_list_route,\n      data: \"\",\n      method: user_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const get_my_friends = () => {\n    const friend_list_route = `/friend/${jwtData.sub}`;\n    const friend_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setGet_friends_loading(false);\n    };\n\n    const cb_response = (response) => {\n      setMyFriends(response.data);\n      setGet_friends_loading(false);\n      // console.log(response.data);\n    };\n\n    axios_request({\n      route: friend_list_route,\n      data: \"\",\n      method: friend_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    get_users();\n    if (didMyFriendsMount) {\n      get_my_friends();\n      // console.log(75);\n      setDidMyFriendsMount(false);\n    } else {\n      setGet_friends_loading(false);\n      // console.log(78);\n      return;\n    }\n  }, []);\n\n  // console.log(getLoading, get_friends_loading);\n  let options = true;\n  return (\n    <div className=\"Explore\">\n      {error && <div className=\"error\">{error}</div>}\n\n      {!error && <h2 className=\"title-msg\">People you might know.</h2>}\n      {!error && !getLoading && !get_friends_loading && (\n        <>\n          {result.map((value, index) => {\n            //we will only show users who are not my(logged-in user) friends\n\n            const isFriend = myFriends.find((x) => x._id === value._id);\n\n            if (!isFriend && jwtData.sub !== value._id) {\n              options = false;\n              return <ExploreCard value={value} index={index} key={uniqid()} />;\n            }\n          })}\n          {options == true && (\n            <p>\n              Okay, evey user in OdinBook's database is in your friend list. So\n              no suggestions :(\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Explore;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  Redirect,\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport Navigation from \"../Navigation/Navigation\";\nimport Login from \"../Login/Login\";\nimport Logout from \"../Logout\";\nimport Signup from \"../Signup/Signup\";\nimport \"./Home.css\";\nimport SearchBar from \"../Search/SearchBar\";\nimport SearchResult from \"../Search/SearchResult\";\nimport UserDetail from \"../UserDetail/UserDetail\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport UserPost from \"../UserDetail/UserPost\";\nimport UserFriend from \"../UserDetail/UserFriend\";\nimport { OdinBookContext } from \"../Context\";\nimport Chat from \"../Chat/Chat\";\nimport ChatList from \"../ChatList/ChatList\";\nimport Menu from \"./Menu\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Resume from \"../Resume/Resume\";\nimport Explore from \"../Explore/Explore\";\n\nconst Home = () => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n  // const [isClick, setIsclick] = useState(true);\n\n  const { isAuthValue, jwtData } = useContext(OdinBookContext);\n  const [isAuth, setIsAuth] = isAuthValue;\n\n  const path = location.pathname;\n\n  //doing this if /search/:name;\n  // const search_url_params = location.pathname.split(\"/\")[1];\n\n  console.log(path);\n\n  if (location.state) {\n    localStorage.setItem(\n      \"local_history\",\n      JSON.stringify({\n        userid: location.state.userid,\n        fname: location.state.fname,\n        lname: location.state.lname,\n        username: location.state.username,\n        from: path,\n      })\n    );\n  }\n  //this else block is for when the user logs in\n  // }\n  else if (isAuth && (path === \"/signup\" || path === \"/login\")) {\n    localStorage.setItem(\n      \"local_history\",\n      JSON.stringify({\n        userid: jwtData.sub,\n        fname: jwtData.fname,\n        lname: jwtData.lname,\n        username: jwtData.user,\n        from: path,\n      })\n    );\n  }\n\n  // console.log(JSON.parse(localStorage.getItem(\"local_history\")));\n\n  return (\n    <div className=\"Home\">\n      {!isAuth && <div className=\"odin-book\">OdinBook</div>}\n      {!isAuth &&\n        (path === \"/signup\" ? (\n          <Redirect to=\"/signup\" />\n        ) : (\n          <Redirect to=\"/login\" />\n        ))}\n\n      {isAuth && (path === \"/login\" || path === \"/signup\") && (\n        <Redirect to=\"/\" />\n      )}\n\n      {isAuth && (\n        <>\n          <div className=\"Navigation\">\n            {/* width 68% */}\n            <SearchBar />\n            <div className=\"left-nav\">\n              <Navigation to=\"/\" label=\"fas fa-home\" />\n              <Navigation to=\"/friends\" label=\"fas fa-user-friends\" />\n\n              {/* mychat will show the list of conversations */}\n              {/*for now keeping chat list aside */}\n              <Navigation to=\"/mychat\" label=\"fab fa-facebook-messenger\" />\n\n              <Navigation to=\"/explore\" label=\"fas fa-search\" />\n\n              {/* width 32% */}\n            </div>\n            <Menu />\n          </div>\n        </>\n      )}\n\n      {isAuth && (\n        <Switch>\n          <Route exact path=\"/\">\n            <UserPost path=\"newsfeed\" />\n          </Route>\n          <Route exect path=\"/user/:username\">\n            <UserDetail />\n          </Route>\n          <Route path=\"/search/:name\">\n            <SearchResult />\n          </Route>\n          <Route path=\"/logout\">\n            <Logout />\n          </Route>\n          <Route exact path=\"/friends\">\n            <UserFriend path=\"myfriends\" />\n          </Route>\n          <Route path=\"/chat\">\n            <Chat />\n          </Route>\n          <Route path=\"/mychat\">\n            <ChatList />\n          </Route>\n          <Route path=\"/about\">\n            <Resume />\n          </Route>\n\n          <Route path=\"/explore\">\n            <Explore />\n          </Route>\n          <Route component={PageNotFound} />\n        </Switch>\n      )}\n      {!isAuth && (\n        <Switch>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n        </Switch>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport Home from \"../src/Components/Home/Home\";\nimport { useContext } from \"react\";\nimport { OdinBookContext } from \"./Components/Context\";\nimport Login from \"./Components/Login/Login\";\n\nfunction App() {\n  // const { jwtData } = useContext(OdinBookContext);\n  // console.log(jwtData);\n\n  // const jwtData = JSON.parse(localStorage.getItem());\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { OdinBookProvider } from \"./Components/Context\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <OdinBookProvider>\n      <Router>\n        <App />\n      </Router>\n    </OdinBookProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}