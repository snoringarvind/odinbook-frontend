[{"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/index.js":"1","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/App.js":"2","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/reportWebVitals.js":"3","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Context.js":"4","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Home/Home.js":"5","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Login/Login.js":"6","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostCreate.js":"7","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostList.js":"8","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostUpdate.js":"9","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostForm.js":"10","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostDelete.js":"11","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Navigation/Navigation.js":"12","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Logout.js":"13","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Signup/Signup.js":"14","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchBar.js":"15","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchResult.js":"16","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserDetail.js":"17","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserNav.js":"18","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserPost.js":"19","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserAbout.js":"20","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserFriend.js":"21","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserFriendCard.js":"22","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchResultCard.js":"23","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Hamburger/Hamburger.js":"24","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserPostCard.js":"25","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/CommentCard/CommentCard.js":"26","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserLikes.js":"27","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserLikesCard.js":"28","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentCreate.js":"29","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentUpdate.js":"30","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentForm.js":"31","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentDelete.js":"32","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserAboutCard.js":"33","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/Chat.js":"34","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/ChatCard.js":"35","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/ChatMap.js":"36","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserDetailFriendBtn.js":"37","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/ChatList/ChatList.js":"38","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/ChatList/ChatListCard.js":"39","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/WelcomeMsg/WelcomeMsg.js":"40","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserNuLikes.js":"41","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserCardFooter.js":"42","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Home/Menu.js":"43","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/PageNotFound/PageNotFound.js":"44","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Resume/Resume.js":"45","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Explore/Explore.js":"46","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Explore/ExploreCard.js":"47"},{"size":696,"mtime":1614452264648,"results":"48","hashOfConfig":"49"},{"size":454,"mtime":1614221708810,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1614221708814,"results":"51","hashOfConfig":"49"},{"size":6261,"mtime":1614432964312,"results":"52","hashOfConfig":"49"},{"size":5593,"mtime":1614441295167,"results":"53","hashOfConfig":"49"},{"size":3183,"mtime":1614455299639,"results":"54","hashOfConfig":"49"},{"size":1294,"mtime":1614267008995,"results":"55","hashOfConfig":"49"},{"size":1692,"mtime":1614221708814,"results":"56","hashOfConfig":"49"},{"size":703,"mtime":1614254391656,"results":"57","hashOfConfig":"49"},{"size":3755,"mtime":1614455304773,"results":"58","hashOfConfig":"49"},{"size":2126,"mtime":1614428815132,"results":"59","hashOfConfig":"49"},{"size":750,"mtime":1614254452634,"results":"60","hashOfConfig":"49"},{"size":427,"mtime":1614221708810,"results":"61","hashOfConfig":"49"},{"size":4019,"mtime":1614455310206,"results":"62","hashOfConfig":"49"},{"size":933,"mtime":1614455335814,"results":"63","hashOfConfig":"49"},{"size":2727,"mtime":1614428815136,"results":"64","hashOfConfig":"49"},{"size":2967,"mtime":1614432964616,"results":"65","hashOfConfig":"49"},{"size":493,"mtime":1614255342267,"results":"66","hashOfConfig":"49"},{"size":10466,"mtime":1614465073775,"results":"67","hashOfConfig":"49"},{"size":3461,"mtime":1614456408738,"results":"68","hashOfConfig":"49"},{"size":4727,"mtime":1614456419736,"results":"69","hashOfConfig":"49"},{"size":4847,"mtime":1614428815332,"results":"70","hashOfConfig":"49"},{"size":3756,"mtime":1614428815136,"results":"71","hashOfConfig":"49"},{"size":1244,"mtime":1614457229705,"results":"72","hashOfConfig":"49"},{"size":12894,"mtime":1614433030991,"results":"73","hashOfConfig":"49"},{"size":4065,"mtime":1614377710857,"results":"74","hashOfConfig":"49"},{"size":3486,"mtime":1614428815332,"results":"75","hashOfConfig":"49"},{"size":3661,"mtime":1614432964552,"results":"76","hashOfConfig":"49"},{"size":536,"mtime":1614345719454,"results":"77","hashOfConfig":"49"},{"size":861,"mtime":1614254222466,"results":"78","hashOfConfig":"49"},{"size":2645,"mtime":1614427854745,"results":"79","hashOfConfig":"49"},{"size":1392,"mtime":1614428815128,"results":"80","hashOfConfig":"49"},{"size":7919,"mtime":1614455348030,"results":"81","hashOfConfig":"49"},{"size":5135,"mtime":1614428815128,"results":"82","hashOfConfig":"49"},{"size":5636,"mtime":1614455277575,"results":"83","hashOfConfig":"49"},{"size":1666,"mtime":1614373718537,"results":"84","hashOfConfig":"49"},{"size":3141,"mtime":1614428815332,"results":"85","hashOfConfig":"49"},{"size":4758,"mtime":1614428815128,"results":"86","hashOfConfig":"49"},{"size":2096,"mtime":1614253827079,"results":"87","hashOfConfig":"49"},{"size":447,"mtime":1614221708814,"results":"88","hashOfConfig":"49"},{"size":836,"mtime":1614345719458,"results":"89","hashOfConfig":"49"},{"size":1222,"mtime":1614432964552,"results":"90","hashOfConfig":"49"},{"size":675,"mtime":1614348404977,"results":"91","hashOfConfig":"49"},{"size":273,"mtime":1614430615656,"results":"92","hashOfConfig":"49"},{"size":236,"mtime":1614434707768,"results":"93","hashOfConfig":"49"},{"size":3006,"mtime":1614460658013,"results":"94","hashOfConfig":"49"},{"size":3134,"mtime":1614444872394,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1ldhon5",{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"98"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"98"},"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/index.js",[],["221","222"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/App.js",["223","224","225"],"import \"./App.css\";\nimport Home from \"../src/Components/Home/Home\";\nimport { useContext } from \"react\";\nimport { OdinBookContext } from \"./Components/Context\";\nimport Login from \"./Components/Login/Login\";\n\nfunction App() {\n  // const { jwtData } = useContext(OdinBookContext);\n  // console.log(jwtData);\n\n  // const jwtData = JSON.parse(localStorage.getItem());\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/reportWebVitals.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Context.js",["226","227","228","229"],"import axios from \"axios\";\nimport { set } from \"mongoose\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport uniqid from \"uniqid\";\n\nimport socketIOClient from \"socket.io-client\";\nimport Login from \"./Login/Login\";\nimport UserFriend from \"./UserDetail/UserFriend\";\n\nconst ENDPOINT = \"https://odinbook12.herokuapp.com\";\n\n// require(\"dotenv\").config();\n// console.log(\"mamamamam\");\n\nconst OdinBookContext = createContext();\n\nconst OdinBookProvider = ({ children }) => {\n  // ex. http://localhost:3000/odinbook\n  // const [serverUrl] = useState(\"http://localhost:3000/odinbook\");\n\n  //to render the searchresult page if the user hits enter\n  const [searchValueChange, setSearchValueChange] = useState(false);\n\n  //to prefill the search bar if there is a value in the url\n  const [searchBarState, setSearchBarState] = useState({ search: \"\" });\n\n  //for MyFriends to not re-render\n  const [myFriends, setMyFriends] = useState([]);\n  const [didMyFriendsMount, setDidMyFriendsMount] = useState(true);\n\n  //for myabout to not re-render\n  const [myAbout, setMyAbout] = useState({});\n  const [didMyAboutMount, setdidMyAboutMount] = useState(true);\n\n  //for mypost to not re-render\n  const [myPosts, setMyposts] = useState([]);\n  const [didMyPostsMount, setDidMyPostsMount] = useState(true);\n\n  //for mynewsfeed to not re-render\n  const [myNewsfeed, setMyNewsFeed] = useState([]);\n  const [didMyNewsFeedMount, setDidMyNewsFeedMount] = useState(true);\n\n  //for chatlist\n  const [myChatList, setMyChatList] = useState([]);\n  const [isRead, setIsRead] = useState([]);\n  const [didMyChatListMount, setDidMyChatListMount] = useState(true);\n\n  const [loading, setLoading] = useState(true);\n\n  const [isAuth, setIsAuth] = useState(false);\n\n  const [errors, setErrors] = useState(\"\");\n\n  // let jwt = JSON.parse(localStorage.getItem(\"jwtData\"));\n  const [jwtData, setJwtData] = useState(\n    JSON.parse(localStorage.getItem(\"jwtData\"))\n  );\n\n  let serverUrl = \"https://odinbook12.herokuapp.com/odinbook\";\n\n  const axios_request = async ({\n    route,\n    data,\n    method,\n    axios_error,\n    axios_response,\n  }) => {\n    if (jwtData !== null || route === \"/login\" || route === \"/signup\") {\n      try {\n        let token;\n        let headers;\n        if (route !== \"/login\" && route !== \"/signup\") {\n          token = jwtData.token;\n          headers = { authorization: `Bearer ${token}` };\n        }\n\n        const response_data = await axios({\n          url: `${serverUrl}${route}`,\n          method: method,\n          headers: headers || \"\",\n          data: data,\n        });\n\n        if (route === \"/login\" || route === \"/signup\") {\n          localStorage.setItem(\n            \"jwtData\",\n            JSON.stringify(response_data.data.jwtData)\n          );\n          setJwtData(response_data.data.jwtData);\n        }\n        setIsAuth(true);\n        console.log(\"Utils Response=\", response_data);\n        axios_response(response_data);\n      } catch (err) {\n        if (err.response) {\n          console.log(\"Utils Error\", err.response.data);\n          if (err.response.status === 403) {\n            setIsAuth(false);\n          }\n        } else {\n          console.log(\"Utils Error\", err.message);\n        }\n        axios_error(err);\n      }\n    } else {\n      console.log(\"Utils Error= NO JWT TOKEN\");\n      setIsAuth(false);\n    }\n  };\n\n  const [socket, setSocket] = useState(\"\");\n\n  const isLogin = async () => {\n    const route = \"/isUserAuth\";\n    const method = \"GET\";\n\n    let headers;\n    try {\n      const token = jwtData.token;\n      headers = { authorization: `Bearer ${token}` };\n\n      const response = await axios({\n        url: `${serverUrl}${route}`,\n        method: method,\n        data: token,\n        headers: headers,\n      });\n\n      console.log(\"response from context login\", response);\n      setIsAuth(true);\n      setLoading(false);\n    } catch (err) {\n      console.log(\"error from context login\", err);\n      setLoading(false);\n      if (err.response) {\n        if (err.response.status === 403) {\n          setIsAuth(false);\n        } else {\n          setErrors(err.response.data);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (isAuth) {\n      const socket12 = socketIOClient(ENDPOINT, {\n        withCredentials: true,\n      });\n      setSocket(socket12);\n      if (jwtData) {\n        socket12.emit(\"join\", jwtData.user);\n      }\n    }\n    if (!isAuth) {\n      isLogin();\n    } else {\n      setLoading(false);\n    }\n  }, [isAuth]);\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  return (\n    <OdinBookContext.Provider\n      value={{\n        searchValue: [searchValueChange, setSearchValueChange],\n        searchBarStateValue: [searchBarState, setSearchBarState],\n        jwtData: jwtData,\n\n        myFriendsValue: [myFriends, setMyFriends],\n        didMyFriendsMountValue: [didMyFriendsMount, setDidMyFriendsMount],\n\n        myAboutValue: [myAbout, setMyAbout],\n\n        myPostsValue: [myPosts, setMyposts],\n        didMyPostsMountValue: [didMyPostsMount, setDidMyPostsMount],\n\n        myNewsFeedValue: [myNewsfeed, setMyNewsFeed],\n        didMyNewsFeedMountValue: [didMyNewsFeedMount, setDidMyNewsFeedMount],\n\n        didMyAboutMountValue: [didMyAboutMount, setdidMyAboutMount],\n\n        isAuthValue: [isAuth, setIsAuth],\n\n        socket: socket,\n\n        axios_request: axios_request,\n\n        myChatListValue: [myChatList, setMyChatList],\n        isReadValue: [isRead, setIsRead],\n        didMyChatListMountValue: [didMyChatListMount, setDidMyChatListMount],\n      }}\n    >\n      {!errors && (\n        <>\n          {!loading ? (\n            children\n          ) : (\n            <div className=\"loading-container\">\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n      {errors && display_errors()}\n    </OdinBookContext.Provider>\n  );\n};\n\nexport { OdinBookContext, OdinBookProvider };\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Home/Home.js",["230","231","232","233","234","235","236"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  Redirect,\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport Navigation from \"../Navigation/Navigation\";\nimport Login from \"../Login/Login\";\nimport Logout from \"../Logout\";\nimport Signup from \"../Signup/Signup\";\nimport \"./Home.css\";\nimport SearchBar from \"../Search/SearchBar\";\nimport SearchResult from \"../Search/SearchResult\";\nimport UserDetail from \"../UserDetail/UserDetail\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport UserPost from \"../UserDetail/UserPost\";\nimport UserFriend from \"../UserDetail/UserFriend\";\nimport { OdinBookContext } from \"../Context\";\nimport Chat from \"../Chat/Chat\";\nimport ChatList from \"../ChatList/ChatList\";\nimport Menu from \"./Menu\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Resume from \"../Resume/Resume\";\nimport Explore from \"../Explore/Explore\";\n\nconst Home = () => {\n  let location = useLocation();\n  let background = location.state && location.state.background;\n  const [isClick, setIsclick] = useState(false);\n\n  const { isAuthValue, jwtData } = useContext(OdinBookContext);\n  const [isAuth, setIsAuth] = isAuthValue;\n\n  const path = location.pathname;\n\n  //doing this if /search/:name;\n  const search_url_params = location.pathname.split(\"/\")[1];\n\n  //doing this if-block, incase if the user refreshes the page the state will vanish so we will store the previous state values in localstorage\n  if (\n    path !== \"/\" &&\n    path !== \"/friends\" &&\n    path !== \"/mychat\" &&\n    search_url_params !== \"search\" &&\n    path !== \"/login\" &&\n    path !== \"/signup\"\n  ) {\n    if (location.state) {\n      localStorage.setItem(\n        \"local_history\",\n        JSON.stringify({\n          userid: location.state.userid,\n          fname: location.state.fname,\n          lname: location.state.lname,\n          username: location.state.username,\n          from: path,\n        })\n      );\n    }\n    //this else block is for when the user logs in\n  } else if (isAuth && (path === \"/signup\" || path === \"/login\")) {\n    // console.log(\"hellllooooo\");\n    localStorage.setItem(\n      \"local_history\",\n      JSON.stringify({\n        userid: jwtData.sub,\n        fname: jwtData.fname,\n        lname: jwtData.lname,\n        username: jwtData.user,\n        from: path,\n      })\n    );\n  }\n\n  // console.log(JSON.parse(localStorage.getItem(\"local_history\")));\n  useEffect(() => {\n    const x = window;\n    x.addEventListener(\"click\", (e) => {\n      //maybe if something goes wrong ..putting this in a try,catch block\n      try {\n        e.stopPropagation();\n        e.preventDefault();\n        let arr = e.target.classList;\n\n        for (let i = 0; i < arr.length; i++) {\n          let element = document.querySelector(`.${arr[i]}`);\n\n          // doing this 'if(element==null)' so if the form-btn is clicked cancel this function shouldn't be affected.\n          //since the form-btn will be null when it is closed, so to prevent the error\n          if (element == null) {\n            return;\n          }\n\n          let p = element.classList;\n          if (\n            p[i].toString() !== \"drop-btn\" &&\n            p[i] !== null &&\n            p[i] !== \"ham-icon\" &&\n            p[i] !== \"close-icon\"\n          ) {\n            setIsclick(false);\n          }\n          arr = [];\n        }\n\n        arr = [];\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"Home\">\n      {!isAuth && <div className=\"odin-book\">OdinBook</div>}\n      {!isAuth &&\n        (path === \"/signup\" ? (\n          <Redirect to=\"/signup\" />\n        ) : (\n          <Redirect to=\"/login\" />\n        ))}\n\n      {isAuth && (path === \"/login\" || path === \"/signup\") && (\n        <Redirect to=\"/\" />\n      )}\n\n      {isAuth && (\n        <>\n          <div className=\"Navigation\">\n            {/* width 68% */}\n            <SearchBar />\n            <div className=\"left-nav\">\n              <Navigation to=\"/\" label=\"fas fa-home\" />\n              <Navigation to=\"/friends\" label=\"fas fa-user-friends\" />\n\n              {/* mychat will show the list of conversations */}\n              {/*for now keeping chat list aside */}\n              <Navigation to=\"/mychat\" label=\"fab fa-facebook-messenger\" />\n\n              <Navigation to=\"/explore\" label=\"fas fa-search\" />\n\n              {/* width 32% */}\n            </div>\n            <Menu />\n          </div>\n        </>\n      )}\n\n      {isAuth && (\n        <Switch>\n          <Route exact path=\"/\">\n            <UserPost path=\"newsfeed\" />\n          </Route>\n          <Route exect path=\"/user/:username\">\n            <UserDetail />\n          </Route>\n          <Route path=\"/search/:name\">\n            <SearchResult />\n          </Route>\n          <Route path=\"/logout\">\n            <Logout />\n          </Route>\n          <Route exact path=\"/friends\">\n            <UserFriend path=\"myfriends\" />\n          </Route>\n          <Route path=\"/chat\">\n            <Chat />\n          </Route>\n          <Route path=\"/mychat\">\n            <ChatList />\n          </Route>\n          <Route path=\"/about\">\n            <Resume />\n          </Route>\n\n          <Route path=\"/explore\">\n            <Explore />\n          </Route>\n          <Route component={PageNotFound} />\n        </Switch>\n      )}\n      {!isAuth && (\n        <Switch>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n        </Switch>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Login/Login.js",["237"],"import React, { useContext, useRef, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const { axios_request } = useContext(OdinBookContext);\n  const [isloginClick, setIsLoginClick] = useState(false);\n\n  const refUsername = useRef();\n  const refPassword = useRef();\n  const [errors, setErrors] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [postLoading, setPostLoading] = useState(false);\n\n  const login_route = \"/login\";\n  const login_method = \"POST\";\n\n  const axios_login = async () => {\n    setPostLoading(true);\n\n    const cb_error = (err) => {\n      if (err.response) {\n        setErrors(err.response.data);\n      } else {\n        setError(err.message);\n      }\n      setPostLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPostLoading(false);\n    };\n\n    axios_request({\n      route: login_route,\n      data: {\n        username: refUsername.current.value,\n        password: refPassword.current.value,\n      },\n      method: login_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  return (\n    <div className=\"Login\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <form autoComplete=\"off\">\n          <div className=\"head\"> Login</div>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"Enter your username\"\n              ref={refUsername}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              ref={refPassword}\n            />\n          </div>\n          {display_errors()}\n          <div className=\"buttons\">\n            <div className=\"login-btn\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (!postLoading) {\n                    return axios_login();\n                  }\n                }}\n              >\n                {postLoading ? \"Logging-in\" : \"Log-in\"}\n              </button>\n            </div>\n            <div\n              className=\"signup-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                setIsLoginClick(true);\n              }}\n            >\n              <button>Sign-up</button>\n            </div>\n          </div>\n\n          {isloginClick && <Redirect to=\"/signup\" />}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostCreate.js",["238"],"import React from \"react\";\nimport MyPostForm from \"./MyPostForm\";\nimport \"./MyPostCreate.css\";\nimport { useLocation } from \"react-router-dom\";\n\nconst MypostCreate = ({ user_post_response, createClick, setCreateClick }) => {\n  // const [formBtnClicked, setFormBtnClicked] = useState(false);\n\n  const mypost_create_route = \"/myposts\";\n  const mypost_create_method = \"POST\";\n\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n\n  let fname = local_history.fname;\n  return (\n    <div className=\"MyPostCreate\">\n      <>\n        <div className=\"show-form-container\">\n          <div className=\"profile-picture\">{[...fname[0].toLowerCase()]}</div>\n          <div\n            className=\"show-form-btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              setCreateClick(true);\n            }}\n          >\n            What's on your mind..?\n          </div>\n        </div>\n        {createClick && (\n          <MyPostForm\n            route={mypost_create_route}\n            method={mypost_create_method}\n            formTitle=\"Create Post\"\n            user_post_response={user_post_response}\n            createClick={createClick}\n            setCreateClick={setCreateClick}\n          />\n        )}\n      </>\n    </div>\n  );\n};\n\nexport default MypostCreate;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostList.js",["239"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostUpdate.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostForm.js",["240","241","242","243"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport \"./MyPostForm.css\";\n\nconst MyPostForm = ({\n  route,\n  update_value,\n  method,\n  formTitle,\n  user_post_response,\n  createClick,\n  setCreateClick,\n  updateClick,\n  setUpdateClick,\n}) => {\n  const { axios_request } = useContext(OdinBookContext);\n\n  const [error, setError] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const [postLoading, setPostLoading] = useState(false);\n\n  const refTitle = useRef();\n  const refContenText = useRef();\n\n  useEffect(() => {\n    refTitle.current.value = update_value ? update_value.title : \"\";\n    refContenText.current.value = update_value ? update_value.content_text : \"\";\n  }, []);\n\n  const submitHandler = () => {\n    setPostLoading(true);\n    const axios_error = (err) => {\n      if (err.response) {\n        setErrors(err.response.data);\n      } else {\n        setError(err.message);\n      }\n      setPostLoading(false);\n    };\n\n    const axios_response = (response) => {\n      setErrors([]);\n      setPostLoading(false);\n      user_post_response(response);\n      setCreateClick(false);\n    };\n\n    axios_request({\n      route: route,\n      data: {\n        title: refTitle.current.value,\n        content_text: refContenText.current.value,\n      },\n      method: method,\n      axios_error: axios_error,\n      axios_response: axios_response,\n    });\n  };\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  return (\n    <div className=\"MyPostForm\">\n      {error && (\n        <div className=\"error\">\n          <div>{error} </div>\n          <div>Please try refreshing the page</div>\n        </div>\n      )}\n      {!error && (\n        <div className=\"form-container\">\n          <div className=\"form-head\">\n            <div className=\"form-title\">{formTitle}</div>\n            <div\n              className=\"form-close-btn fas fa-times-circle\"\n              onClick={(e) => {\n                e.preventDefault();\n                setCreateClick(false);\n              }}\n            ></div>\n          </div>\n\n          <form autoComplete=\"off\">\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                id=\"title\"\n                type=\"text\"\n                placeholder=\"Enter your post title\"\n                name=\"title\"\n                ref={refTitle}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"content_text\">Text</label>\n              <textarea\n                type=\"text\"\n                id=\"content_text\"\n                name=\"content_text\"\n                placeholder=\"Add text\"\n                ref={refContenText}\n                // value={}\n              />\n            </div>\n            {display_errors()}\n            <div className=\"submit-btn\">\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  //to prevent multiple clicks\n                  if (postLoading) {\n                    return;\n                  } else {\n                    submitHandler();\n                  }\n                }}\n              >\n                {!postLoading ? \"Submit\" : \"Submitting...\"}\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default MyPostForm;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/MyPosts/MyPostDelete.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Navigation/Navigation.js",["244","245"],"import React from \"react\";\nimport {\n  useRouteMatch,\n  Link,\n  useLocation,\n  useParams,\n  useHistory,\n} from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ to, label }) => {\n  let match = useRouteMatch({ path: to });\n\n  if (match != null) {\n    match = match.isExact ? true : false;\n  } else {\n    match = false;\n  }\n\n  const location = useLocation();\n\n  const arr = location.pathname.split(\"/\");\n\n  const element = document.querySelector(\"#search\");\n\n  if (element) {\n    if (arr[1] !== \"search\") {\n      element.value = \"\";\n    }\n  }\n  return (\n    <div className={match ? \"active nav-links\" : \"nav-links\"}>\n      <Link to={to}>\n        <i className={label}></i>\n      </Link>\n    </div>\n  );\n};\n\nexport default Navigation;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Logout.js",["246"],"import React, { useContext, useEffect } from \"react\";\nimport { OdinBookContext } from \"./Context\";\n\nconst Logout = () => {\n  const { isAuthValue } = useContext(OdinBookContext);\n  const [isAuth, setIsAuth] = isAuthValue;\n\n  useEffect(() => {\n    setIsAuth(false);\n  }, [isAuth]);\n\n  return (\n    <div className=\"Logout\">\n      {localStorage.clear()}\n\n      {window.location.reload()}\n    </div>\n  );\n};\n\nexport default Logout;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Signup/Signup.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchBar.js",["247"],"import React, { useContext, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./SearchBar.css\";\n\nconst SearchBar = () => {\n  const { searchValue } = useContext(OdinBookContext);\n  const [searchValueChange, setSearchValueChange] = searchValue;\n\n  const history = useHistory();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setSearchValueChange(true);\n    if (ref_name.current.value === \"\") {\n      return;\n    } else {\n      return history.push(`/search/${ref_name.current.value}`);\n    }\n  };\n\n  const ref_name = useRef();\n\n  return (\n    <div className=\"SearchBar\">\n      <form onSubmit={submitHandler} autoComplete=\"off\">\n        <input\n          type=\"text\"\n          id=\"search\"\n          name=\"search\"\n          ref={ref_name}\n          placeholder=\"Search Odinbook\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchResult.js",["248","249","250"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport \"./SearchResult.css\";\nimport SearchResultCard from \"./SearchResultCard\";\n\nconst SearchResult = () => {\n  const { searchValue, axios_request } = useContext(OdinBookContext);\n\n  const [searchValueChange, setSearchValueChange] = searchValue;\n\n  const [friendBtn, setFriendBtn] = useState([]);\n\n  const params = useParams();\n\n  const [error, setError] = useState(\"\");\n\n  const [getLoading, setGetLoading] = useState(true);\n\n  const [result, setResult] = useState([]);\n\n  const make_server_request = () => {\n    const user_list_route = `/user/search/${params.name}`;\n    const user_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setGetLoading(false);\n      if (!Array.isArray(response.data)) {\n        setResult([response.data]);\n      } else {\n        setResult(response.data);\n      }\n      const h = Array(response.data.length).fill(false);\n      setFriendBtn(h);\n    };\n\n    axios_request({\n      route: user_list_route,\n      data: \"\",\n      method: user_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (searchValueChange === true) {\n      make_server_request();\n\n      setSearchValueChange(false);\n    }\n  }, [searchValueChange]);\n\n  useEffect(() => {\n    if (!searchValueChange) {\n      if (params) {\n        //to prefill the search bar with the value in the url incase the user refrehes the page\n        const element = document.querySelector(\"#search\");\n        element.value = params.name;\n        make_server_request();\n      }\n    }\n  }, []);\n\n  let arrg = [];\n\n  return (\n    <div className=\"SearchResult\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          {getLoading && \"loading...\"}\n          {!getLoading &&\n            (result.length == 0 ? (\n              <div className=\"empty\">No users found with this query :(</div>\n            ) : (\n              result.map((value, index) => {\n                return (\n                  <SearchResultCard\n                    value={value}\n                    index={index}\n                    setResult={setResult}\n                    result={result}\n                    key={uniqid()}\n                    friendBtn={friendBtn}\n                    setFriendBtn={setFriendBtn}\n                    arrg={arrg}\n                  />\n                );\n              })\n            ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SearchResult;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserDetail.js",["251","252","253"],"import React, { useContext, useEffect } from \"react\";\nimport UserNav from \"./UserNav\";\nimport { Route, Switch, useParams, useLocation, Link } from \"react-router-dom\";\nimport UserAbout from \"./UserAbout\";\nimport UserPost from \"./UserPost\";\nimport UserFriend from \"./UserFriend\";\nimport \"./UserDetail.css\";\nimport { OdinBookContext } from \"../Context\";\nimport UserDetailFriendBtn from \"./UserDetailFriendBtn\";\n\nconst UserDetail = () => {\n  const location = useLocation();\n  let params = useParams();\n\n  const { jwtData } = useContext(OdinBookContext);\n\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n  let userid = local_history.userid;\n  let fname = local_history.fname;\n  let lname = local_history.lname;\n  let username = local_history.username;\n  let from = local_history.from;\n\n  // console.log(fname);\n\n  // console.log(location);\n  return (\n    <div className=\"UserDetail\">\n      <div className=\"user-banner-container\">\n        <div className=\"user-banner\">\n          {params.username}\n          <div className=\"banner-btn\">\n            {userid && userid !== jwtData.sub && (\n              <div className=\"chat-link-container\">\n                <Link\n                  to={{\n                    pathname: \"/chat\",\n                    state: {\n                      userid: userid,\n                      fname: fname,\n                      lname: lname,\n                      username: username,\n                    },\n                  }}\n                >\n                  <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n                </Link>\n              </div>\n            )}\n            {userid && userid !== jwtData.sub && <UserDetailFriendBtn />}\n          </div>\n        </div>\n\n        <div className=\"name-container\">\n          <div className=\"name\">\n            <span>{fname} </span>\n            <span> {lname}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"UserNav\">\n        <UserNav\n          to={`/user/${params.username}/posts`}\n          fname={fname}\n          lname={lname}\n          userid={userid}\n          username={username}\n          label=\"Posts\"\n        />\n        <UserNav\n          to={`/user/${params.username}/about`}\n          fname={fname}\n          lname={lname}\n          userid={userid}\n          username={username}\n          label=\"About\"\n        />\n        <UserNav\n          to={`/user/${params.username}/friends`}\n          fname={fname}\n          lname={lname}\n          userid={userid}\n          username={username}\n          label=\"Friends\"\n        />\n      </div>\n      <Switch>\n        <Route path={`/user/${params.username}/posts`}>\n          <UserPost path=\"userpost\" />\n        </Route>\n        <Route path={`/user/${params.username}/about`}>\n          <UserAbout />\n        </Route>\n        <Route path={`/user/${params.username}/friends`}>\n          <UserFriend />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default UserDetail;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserNav.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserPost.js",["254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserAbout.js",["268","269","270"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport UseraAboutCard from \"./UserAboutCard\";\nimport uniqid from \"uniqid\";\nimport \"./UserAbout.css\";\n\nconst UserAbout = () => {\n  const {\n    myAboutValue,\n    didMyAboutMountValue,\n    axios_request,\n    jwtData,\n  } = useContext(OdinBookContext);\n  const [myAbout, setMyAbout] = myAboutValue;\n  const [didMyAboutMount, setdidMyAboutMount] = didMyAboutMountValue;\n\n  const [result, setResult] = useState();\n\n  const [getLoading, setGetLoading] = useState(true);\n\n  const [error, setError] = useState(\"\");\n\n  const location = useLocation();\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n  let userid = local_history.userid;\n\n  const [clickIndex, setClickIndex] = useState(null);\n\n  const make_server_request = () => {\n    const profile_route = `/profile/${userid}`;\n    const profile_route_method = \"GET\";\n    const cb_response = (response) => {\n      if (userid === jwtData.sub) {\n        setMyAbout(response.data);\n      }\n      setResult(response.data);\n\n      setGetLoading(false);\n    };\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    axios_request({\n      route: profile_route,\n      data: \"\",\n      method: profile_route_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (jwtData.sub !== userid) {\n      make_server_request();\n    } else {\n      if (didMyAboutMount) {\n        make_server_request();\n        setdidMyAboutMount(false);\n      } else {\n        setResult(myAbout);\n        setGetLoading(false);\n      }\n    }\n  }, [location.pathname]);\n\n  let g;\n  if (result) {\n    delete result.user;\n    delete result._id;\n    delete result.__v;\n\n    g = Object.keys(result);\n  }\n\n  const [tooltip, setTooltip] = useState(null);\n  const [ee, setee] = useState({});\n\n  useEffect(() => {\n    if (result) {\n      let h = {};\n      for (let i = 0; i < g.length; i++) {\n        h[g[i]] = result[g[i]];\n        if (i === g.length - 1) {\n          setee(h);\n        }\n      }\n    }\n  }, [result]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.key == \"Escape\") {\n        setClickIndex(null);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"UserAbout\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          {getLoading && (\n            <div className=\"loading-container\" style={{ zIndex: \"1\" }}>\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n          {!getLoading &&\n            g.map((value, index) => {\n              return (\n                <UseraAboutCard\n                  key={uniqid()}\n                  objkey={value}\n                  index={index}\n                  clickIndex={clickIndex}\n                  setClickIndex={setClickIndex}\n                  result={result}\n                  setResult={setResult}\n                  ee={ee}\n                  setee={setee}\n                  tooltip={tooltip}\n                  setTooltip={setTooltip}\n                  userid={userid}\n                  jwtData={jwtData}\n                />\n              );\n            })}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserAbout;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserFriend.js",["271","272","273","274","275","276"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport uniqid from \"uniqid\";\nimport \"./UserFriend.css\";\nimport UserFriendCard from \"./UserFriendCard\";\n\nconst UserFriend = ({ path }) => {\n  const [error, setError] = useState(\"\");\n  const [getLoading, setGetLoading] = useState(true);\n  const [result, setResult] = useState([]);\n\n  const [friendBtn, setFriendBtn] = useState([]);\n\n  const [isChanged, setIsChanged] = useState(false);\n  const { myFriendsValue, didMyFriendsMountValue, axios_request } = useContext(\n    OdinBookContext\n  );\n\n  const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n\n  const [myFriends, setMyFriends] = myFriendsValue;\n  const location = useLocation();\n  let userid;\n  let username;\n  let fname;\n  let lname;\n  //since there will be no location.state for myfriends route.\n  if (path !== \"myfriends\") {\n    const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n    userid = local_history.userid;\n    fname = local_history.fname;\n    lname = local_history.lname;\n  }\n\n  const make_server_request = () => {\n    let friend_list_route;\n    if (path == \"myfriends\") {\n      friend_list_route = `/friend/${jwtData.sub}`;\n    } else {\n      friend_list_route = `/friend/${userid}`;\n    }\n    const friend_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      if (path == \"myfriends\") {\n        setMyFriends(response.data);\n      } else {\n        if (userid == jwtData.sub) {\n          setMyFriends(response.data);\n        } else {\n          const h = Array(response.data.length).fill(false);\n          setFriendBtn(h);\n        }\n      }\n      setResult(response.data);\n      setGetLoading(false);\n    };\n\n    axios_request({\n      route: friend_list_route,\n      data: \"\",\n      method: friend_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n  const { jwtData } = useContext(OdinBookContext);\n\n  useEffect(() => {\n    if (path == \"myfriends\") {\n      if (didMyFriendsMount) {\n        make_server_request();\n        setDidMyFriendsMount(false);\n      } else {\n        setResult(myFriends);\n        setGetLoading(false);\n      }\n    } else {\n      if (jwtData.sub !== userid) {\n        make_server_request();\n      } else {\n        if (didMyFriendsMount) {\n          make_server_request();\n          setDidMyFriendsMount(false);\n        } else {\n          setResult(myFriends);\n          setGetLoading(false);\n        }\n      }\n    }\n  }, [location.pathname]);\n\n  return (\n    <div\n      className={path === \"myfriends\" ? \"UserFriend\" : \"UserFriend myaccount\"}\n    >\n      {error && <div className=\"error\">{error}</div>}\n      {!error && <h2 className=\"title-msg\">My Friends.</h2>}\n      {!error && (\n        <>\n          {getLoading && (\n            <div className=\"loading-container\" style={{ zIndex: \"1\" }}>\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n          {!getLoading &&\n            (result.length === 0 ? (\n              <div className=\"empty-friends\">\n                {path !== \"myfriends\" && jwtData.sub !== userid && (\n                  <div>\n                    <span>{fname} </span> <span>{lname} </span>\n                    <span>has no friends on OdinBook :(</span>\n                  </div>\n                )}\n                {(path === \"myfriends\" || jwtData.sub === userid) && (\n                  <div>\n                    <div>You don't have any friends to show.</div>\n                    <div>You can add them by searching their name :)</div>\n                    <div>\n                      To search with username, please prefix with '@' :)\n                    </div>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <>\n                {result.map((value, index) => {\n                  return (\n                    <UserFriendCard\n                      value={value}\n                      index={index}\n                      setError={setError}\n                      key={uniqid()}\n                      friendBtn={friendBtn}\n                      setFriendBtn={setFriendBtn}\n                      userid={userid}\n                      isChanged={isChanged}\n                      setIsChanged={setIsChanged}\n                      path={path}\n                    />\n                  );\n                })}\n              </>\n            ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserFriend;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserFriendCard.js",["277","278","279","280","281","282","283","284","285","286"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\n\nconst UserFriendCard = ({\n  value,\n  index,\n  friendBtn,\n  setFriendBtn,\n  userid,\n  isChanged,\n  setIsChanged,\n  path,\n}) => {\n  const [error, setError] = useState(\"\");\n\n  const { jwtData, myFriendsValue, axios_request } = useContext(\n    OdinBookContext\n  );\n\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  //removes friend\n  const clickHandler = () => {\n    // if i don't do this it show 'cannot update state after the component is unmounted'\n    //becoz you are not waiting for the response and directly deleting the user from the sreen\n    // if (personid.toString() !== userid.toString()) {\n    //   setBtnLoading(true);\n    //   setIsClicked(!isClicked);\n    // }\n\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {\n      // console.log(response);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    // only do this for the owner,,, bcoz it deletes the user from the screen\n    if (jwtData.sub == userid || path == \"myfriends\") {\n      myFriends.splice(index, 1);\n      setMyFriends(myFriends);\n      setIsChanged(!isChanged);\n    }\n\n    if (jwtData.sub !== userid) {\n      if (friendBtn[index] == false) {\n        const get_index = myFriends.findIndex(\n          (x) => x.username == value.username\n        );\n        if (get_index !== -1) {\n          myFriends.splice(get_index, 1);\n          setMyFriends(myFriends);\n        }\n      } else {\n        myFriends.push(value);\n      }\n    }\n  };\n\n  const [pp, setpp] = useState(false);\n\n  useEffect(() => {\n    const check = myFriends.findIndex((x) => x.username === value.username);\n\n    if (check !== -1) {\n      friendBtn[index] = true;\n      setFriendBtn(friendBtn);\n    }\n    setpp(!pp);\n  }, []);\n  return (\n    <div className=\"UserFriendCard\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <div className=\"profile-picture\">\n            {[...value.fname[0].toLowerCase()]}\n          </div>\n          <div className=\"name-container\">\n            <Link\n              to={{\n                pathname: `/user/${value.username}/posts`,\n                state: {\n                  userid: value._id,\n                  fname: value.fname,\n                  lname: value.lname,\n                  username: value.username,\n                },\n              }}\n            >\n              <div className=\"name\">\n                <span>{value.fname} </span>\n                <span>{value.lname}</span>\n              </div>\n            </Link>\n            <div className=\"username\">{value.username}</div>\n          </div>\n          {jwtData.sub !== value._id && (\n            <div\n              className=\"add-btn\"\n              style={{\n                color:\n                  path == \"myfriends\"\n                    ? \"red\"\n                    : jwtData.sub === userid\n                    ? \"red\"\n                    : friendBtn[index]\n                    ? \"red\"\n                    : \"blue\",\n              }}\n              onClick={() => {\n                friendBtn[index] = !friendBtn[index];\n                setFriendBtn(friendBtn);\n                setpp(!pp);\n\n                clickHandler();\n              }}\n            >\n              {(jwtData.sub == userid || path === \"myfriends\") && (\n                <div className=\"add-btn fas fa-user-minus\"></div>\n              )}\n              {jwtData.sub !== userid && path !== \"myfriends\" && (\n                <div\n                  // style={{ color: \"blue\" }}\n                  className={\n                    friendBtn[index]\n                      ? \"add-btn fas fa-user-minus\"\n                      : \"add-btn fas fa-user-plus\"\n                  }\n                ></div>\n              )}\n            </div>\n          )}\n          {/* value._id woh idividual friend ka id hain and userid jiska profile visit kar rahe hain uska id hain */}\n          {jwtData.sub !== value._id && (\n            <div className=\"chat-link-container\">\n              <Link\n                to={{\n                  pathname: \"/chat\",\n                  state: {\n                    userid: value._id,\n                    fname: value.fname,\n                    lname: value.lname,\n                    username: value.username,\n                  },\n                }}\n              >\n                <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n              </Link>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserFriendCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Search/SearchResultCard.js",["287","288","289"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\n\nconst SearchResultCard = ({\n  value,\n  index,\n  result,\n  friendBtn,\n  setFriendBtn,\n  arrg,\n}) => {\n  const { jwtData, myFriendsValue, axios_request } = useContext(\n    OdinBookContext\n  );\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  const [myFriendsIndex, setMyFriendsIndex] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  //removes friend\n  const clickHandler = () => {\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    if (friendBtn[index] === false) {\n      const get_index = myFriends.findIndex(\n        (x) => x.username === value.username\n      );\n      if (get_index !== -1) {\n        myFriends.splice(get_index, 1);\n        setMyFriends(myFriends);\n      }\n    } else {\n      myFriends.push(value);\n    }\n  };\n\n  const [pp, setpp] = useState(false);\n\n  useEffect(() => {\n    const check = myFriends.findIndex((x) => x.username === value.username);\n\n    if (check !== -1) {\n      friendBtn[index] = true;\n      setFriendBtn(friendBtn);\n    }\n    setpp(!pp);\n  }, []);\n\n  const element = document.querySelector(\"#search\");\n\n  return (\n    <div className=\"SearchResultCard\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <div className=\"profile-picture\">\n            {[...value.fname[0].toLowerCase()]}\n          </div>\n          <div\n            className=\"name-container\"\n            onClick={(e) => {\n              e.stopPropagation();\n              e.preventDefault();\n              element.value = \"\";\n            }}\n          >\n            <Link\n              to={{\n                pathname: `/user/${value.username}/posts`,\n                state: {\n                  userid: value._id,\n                  fname: value.fname,\n                  lname: value.lname,\n                  username: value.username,\n                },\n              }}\n            >\n              <div className=\"name\">\n                <span>{value.fname} </span>\n                <span>{value.lname}</span>\n              </div>\n            </Link>\n            <div className=\"username\">{value.username}</div>\n          </div>\n          {value._id !== jwtData.sub && (\n            <div\n              className={\n                friendBtn[index]\n                  ? \"add-btn fas fa-user-minus\"\n                  : \"add-btn fas fa-user-plus\"\n              }\n              style={{ color: friendBtn[index] ? \"red\" : \"blue\" }}\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n\n                friendBtn[index] = !friendBtn[index];\n                setFriendBtn(friendBtn);\n                setpp(!pp);\n                clickHandler();\n              }}\n            ></div>\n          )}\n\n          {value._id !== jwtData.sub && (\n            <div className=\"chat-link-container\">\n              <Link\n                to={{\n                  pathname: \"/chat\",\n                  state: {\n                    userid: value._id,\n                    fname: value.fname,\n                    lname: value.lname,\n                    username: value.username,\n                  },\n                }}\n              >\n                <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n              </Link>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SearchResultCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Hamburger/Hamburger.js",["290"],"import React, { useCallback, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./Hamburger.css\";\n\nconst Hamburger = () => {\n  const { jwtData } = useContext(OdinBookContext);\n\n  return (\n    <div className=\"Hamburger\" style={{ zIndex: \"1\" }}>\n      <div className=\"box-1 box\">\n        <Link\n          to={{\n            pathname: `/user/${jwtData.user}/posts`,\n            state: {\n              fname: jwtData.fname,\n              lname: jwtData.lname,\n              username: jwtData.user,\n              userid: jwtData.sub,\n            },\n          }}\n        >\n          <div className=\"profile-picture\">\n            {[...jwtData.fname[0].toLowerCase()]}\n          </div>\n          <div className=\"nav-link-container\">\n            <div className=\"user label\">{jwtData.user}</div>\n\n            <div className=\"nav-link-desc label\">See your profile</div>\n          </div>\n        </Link>\n      </div>\n\n      <div className=\"box-2 box\">\n        <Link to=\"/logout\">\n          <div className=\"label\">Logout</div>\n        </Link>\n      </div>\n      <div className=\"box-2 box\">\n        <Link to=\"/about\">About</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Hamburger;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserPostCard.js",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310"],"import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport CommentCard from \"../CommentCard/CommentCard\";\nimport uniqid from \"uniqid\";\nimport UserLikes from \"./UserLikes\";\nimport { OdinBookContext } from \"../Context\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport CommentCreate from \"../Comment/CommentCreate\";\nimport UserNuLikes from \"./UserNuLikes\";\nimport UserCardFooter from \"./UserCardFooter\";\nimport { set } from \"mongoose\";\n\nconst UserPostCard = ({\n  value,\n  index,\n  setPostid,\n  setUpdateClick,\n  setUpdateData,\n  setUpdateIndex,\n  indexOfCardClicked,\n  setindexOfCardClicked,\n  isOwner,\n  setDeleteClick,\n  deleteClick,\n  setPostIndex,\n  // likeClick,\n  // setLikeClick,\n  postsLength,\n  UserLikedIndex,\n  setUsersLikedIndex,\n  // likeLength,\n  // setLikeLength,\n  path,\n  result,\n  setResult,\n  setGetLoading,\n  // comments,\n  // setComments,\n}) => {\n  const [cardError, setCardError] = useState(\"\");\n  const [commentError, setCommentError] = useState(\"\");\n\n  const [commentIconClicked, setCommentIconClicked] = useState([]);\n  const [commentsLoading, setCommentsLoading] = useState(true);\n  // const [newCommentLoading, setNewCommentLoading] = useState(false);\n  const [onlyOneClick, setonlyOneClick] = useState(true);\n\n  const [commentOptionIndex, setCommentOptionIndex] = useState(null);\n  const { jwtData, axios_request } = useContext(OdinBookContext);\n\n  const [comments, setComments] = useState([]);\n\n  // const [UserLikedIndex, setUsersLikedIndex] = useState(false);\n  const [likeLength, setLikeLength] = useState([]);\n  const [likeClick, setLikeClick] = useState([]);\n\n  const location = useLocation();\n\n  // console.log(result);\n  // console.log(likeLength);\n  let fname;\n  let lname;\n  let username;\n  let userid;\n  let from;\n  if (path == \"userpost\") {\n    const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n\n    fname = local_history.fname;\n    lname = local_history.lname;\n  }\n\n  const like_post = (postid) => {\n    const like_post_route = `/post/${postid}/like`;\n    const like_post_method = \"POST\";\n    const cb_error = (err) => {\n      // console.log(err);\n      setCardError(err);\n    };\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: like_post_route,\n      data: \"\",\n      method: like_post_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const get_comments = (postid) => {\n    const comments_route = `/post/${postid}/comment`;\n    const comments_method = \"GET\";\n\n    const cb_error = (err) => {\n      setCommentError(err);\n      setCommentsLoading(false);\n    };\n    const cb_response = (response) => {\n      setComments(response.data);\n      // console.log(response.data);\n      setCommentsLoading(false);\n    };\n\n    axios_request({\n      route: comments_route,\n      data: \"\",\n      method: comments_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const [pp, setpp] = useState(false);\n\n  //this useffect will render the page if the comment icon is clicked or there is change in comments.\n  useEffect(() => {\n    const element = document.querySelector(`#post-${index}`);\n\n    if (element) {\n      const height = element.scrollHeight;\n      element.scrollTo(0, height);\n    }\n  }, [pp, commentIconClicked, commentsLoading]);\n\n  useEffect(() => {\n    const g = value.like.includes(jwtData.sub);\n\n    // console.log(value, g);\n    likeClick[index] = g;\n    setLikeClick(likeClick);\n    likeLength[index] = Number(value.like.length);\n    setLikeLength(likeLength);\n    setpp(!pp);\n  }, []);\n\n  const minute = new Date(value.created_at).getMinutes();\n  const hour = new Date(value.created_at).getHours();\n\n  const [copyState, setCopyState] = useState(false);\n  return (\n    <div className=\"UserPostCard\">\n      <div className=\"head\">\n        <div className=\"profile-picture\">\n          {fname\n            ? [...fname[0].toLowerCase()]\n            : [...value.user.fname[0].toLowerCase()]}\n        </div>\n        <div className=\"name-container\">\n          <div className=\"name\">\n            {path !== \"userpost\" && (\n              <Link\n                to={{\n                  pathname: `/user/${value.user.username}/posts`,\n                  state: {\n                    userid: value.user._id,\n                    fname: value.user.fname,\n                    lname: value.user.lname,\n                    username: value.user.username,\n                  },\n                }}\n              >\n                <span>{value.user.fname} </span>\n                <span>{value.user.lname}</span>\n              </Link>\n            )}\n            {path == \"userpost\" && (\n              <>\n                <span>{fname} </span>\n                <span>{lname}</span>\n              </>\n            )}\n          </div>\n\n          <div className=\"username\">\n            {username ? username : value.user.username}\n          </div>\n        </div>\n        <div className=\"post-date\">\n          <div>{new Date(value.created_at).toLocaleDateString()}</div>\n          <div>\n            <span>{hour > 12 ? hour - 12 : hour === 0 ? 12 : hour}:</span>\n\n            <span>{minute < 10 ? \"0\" + minute : minute}</span>\n            <span>{hour > 12 ? \"pm\" : \"am\"}</span>\n          </div>\n        </div>\n        {isOwner && (\n          <div\n            className=\"option-btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              if (indexOfCardClicked == index) {\n                setindexOfCardClicked(null);\n              } else {\n                setindexOfCardClicked(index);\n              }\n            }}\n          >\n            <div\n              className=\"btn\"\n              style={{\n                backgroundColor: indexOfCardClicked == index ? \"darkgray\" : \"\",\n                borderRadius: \"4px\",\n              }}\n            >\n              &#8942;\n            </div>\n            {indexOfCardClicked == index && (\n              <div className=\"hamburger-menu\">\n                <div\n                  className=\"menu-btn edit-button-container\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setindexOfCardClicked(null);\n                    setUpdateClick(true);\n                    setUpdateData(value);\n                    setPostid(value._id);\n                    setUpdateIndex(index);\n                  }}\n                >\n                  <div className=\"far fa-edit icon\"></div>\n                  <div className=\"label\">Edit post</div>\n                </div>\n                <div\n                  className=\"menu-btn delete-btn-container\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setindexOfCardClicked(null);\n                    setDeleteClick(true);\n                    setPostid(value._id);\n                    setUpdateIndex(index);\n                  }}\n                >\n                  <div className=\"far fa-trash-alt icon\"></div>\n                  <div className=\"label\">Delete post</div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div className=\"post-content-container\">\n        <div className=\"post-title\">{value.title}</div>\n        <div className=\"post-content\">{value.content_text}</div>\n      </div>\n      {cardError && <div className=\"card-error error\"> {cardError}</div>}\n      {!cardError && (\n        <div\n          className=\"no-like\"\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            setUsersLikedIndex(index);\n\n            setpp(!pp);\n          }}\n        >\n          {/* <span>{likeLength[index]} </span> */}\n          <span>{likeLength[index]} </span>\n\n          <span> </span>\n          <span> {likeLength[index] == 1 ? \"like\" : \"likes\"}</span>\n        </div>\n      )}\n\n      {UserLikedIndex == index && (\n        <UserLikes\n          postid={value._id}\n          setUsersLikedIndex={setUsersLikedIndex}\n          setGetLoading={setGetLoading}\n          path={path}\n        />\n      )}\n\n      <div className=\"card-footer\">\n        <div\n          style={{\n            color: likeClick[index] ? \"blue\" : \"\",\n          }}\n          className=\"like-icon far fa-thumbs-up\"\n          onClick={(e) => {\n            e.preventDefault();\n            like_post(value._id);\n            if (likeClick[index] == true) {\n              likeLength[index] = likeLength[index] - 1;\n              setLikeLength(likeLength);\n\n              const check = result[index].like.findIndex(\n                (x) => x.toString() === jwtData.sub.toString()\n              );\n\n              //this is a kind of an extra precautionary measure\n              //say if the page re-renders for some reason , the like values will be lost since  I was not saving the values in result\n              //now I am using a child component for the hamburger menu but previously the page used to re-render on every click on hamburger.\n              //but now the page won't re-render , but still I would like to do this step.\n              result[index].like.splice(check, 1);\n              setResult(result);\n            } else {\n              likeLength[index] = likeLength[index] + 1;\n              setLikeLength(likeLength);\n\n              result[index].like.push(jwtData.sub);\n              setResult(result);\n            }\n            likeClick[index] = !likeClick[index];\n            setLikeClick(likeClick);\n            setpp(!pp);\n          }}\n        ></div>\n\n        <div\n          className=\"comment-icon far fa-comment-alt\"\n          onClick={(e) => {\n            e.preventDefault();\n            //get comments only once no need to fetch on every click.\n            if (onlyOneClick) {\n              get_comments(value._id);\n              setonlyOneClick(false);\n            }\n            // console.log(commentIconClicked, index);\n            // setCommentIconClicked();\n            // console.log(commentIconClicked[index]);\n            if (commentIconClicked[index] === undefined) {\n              commentIconClicked[index] = true;\n            } else {\n              commentIconClicked[index] = !commentIconClicked[index];\n            }\n            setpp(!pp);\n            setCommentIconClicked(commentIconClicked);\n          }}\n        ></div>\n        <div\n          className=\"share-icon far fa-share-square\"\n          onClick={() => {\n            const element = document.createElement(\"textarea\");\n            element.value = window.location.href;\n            document.body.appendChild(element);\n            element.select();\n            document.execCommand(\"copy\");\n            document.body.removeChild(element);\n            setCopyState(true);\n\n            setTimeout(() => {\n              setCopyState(false);\n            }, 900);\n          }}\n        >\n          {copyState && <div id=\"copy\">Link Copied!!</div>}\n        </div>\n      </div>\n      <div className=\"comment-list\" id={`post-${index}`}>\n        {commentIconClicked[index] && commentError && (\n          <div className=\"error\">{commentError}</div>\n        )}\n        {commentIconClicked[index] &&\n          !commentError &&\n          commentsLoading &&\n          \"loading...\"}\n        {commentIconClicked[index] &&\n          !commentError &&\n          !commentsLoading &&\n          commentIconClicked &&\n          (comments.comment_list.length == 0 ? (\n            <div className=\"empty\">This post has no comments.</div>\n          ) : (\n            <>\n              <div className=\"no-comment\">\n                <span>{comments.comment_list.length} </span>\n                <span>\n                  {comments.comment_list.length == 1 ? \" comment\" : \" comments\"}\n                </span>\n              </div>\n              {comments.comment_list.map((comment, index) => (\n                <CommentCard\n                  comment={comment}\n                  key={uniqid()}\n                  index={index}\n                  postIndex={index}\n                  path={path}\n                  commentOptionIndex={commentOptionIndex}\n                  setCommentOptionIndex={setCommentOptionIndex}\n                  postid={value._id}\n                  comments={comments}\n                  setComments={setComments}\n                  pp={pp}\n                  setpp={setpp}\n                  setGetLoading={setGetLoading}\n                />\n              ))}\n            </>\n          ))}\n        {/* \n        <div>{newCommentLoading && \"loading...\"}</div> */}\n      </div>\n      {commentIconClicked[index] && !commentsLoading && (\n        <CommentCreate\n          postid={value._id}\n          key={uniqid()}\n          setComments={setComments}\n          comments={comments}\n          postIndex={index}\n          pp={pp}\n          setpp={setpp}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserPostCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/CommentCard/CommentCard.js",["311","312","313","314","315","316"],"import React, { useContext, useState } from \"react\";\nimport \"./CommentCard.css\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\n// import CommentUpdate from \"../Comment/CommentUpdate\";\nimport CommentDelete from \"../Comment/CommentDelete\";\n\nconst CommentCard = ({\n  comment,\n  index,\n  postIndex,\n  path,\n  commentOptionIndex,\n  setCommentOptionIndex,\n  postid,\n  comments,\n  setComments,\n  pp,\n  setpp,\n  setGetLoading,\n}) => {\n  const { jwtData } = useContext(OdinBookContext);\n\n  // const [commentUpdateClick, setCommentUpdateClick] = useState(false);\n  const [commentDeleteClick, setCommentDeleteClick] = useState(false);\n\n  const userid = JSON.parse(localStorage.getItem(\"local_history\")).userid;\n\n  return (\n    <div className=\"CommentCard\">\n      <div className=\"profile-picture\">\n        {[...comment.user.fname[0].toLowerCase()]}\n      </div>\n      <div className=\"comment-container\">\n        <div\n          className=\"name\"\n          onClick={() => {\n            setGetLoading(true);\n          }}\n        >\n          {/* doin this if block because hash-router forbids visiting the same link again and the userid from localstorage is from the url */}\n          {(path == \"newsfeed\" || userid !== comment.user._id) && (\n            <Link\n              to={{\n                pathname: `/user/${comment.user.username}/posts`,\n                state: {\n                  fname: comment.user.fname,\n                  lname: comment.user.lname,\n                  username: comment.user.username,\n                  userid: comment.user._id,\n                },\n              }}\n            >\n              <span>{comment.user.fname} </span>\n              <span>{comment.user.lname}</span>\n            </Link>\n          )}\n          {path != \"newsfeed\" && userid === comment.user._id && (\n            <>\n              <span>{comment.user.fname} </span>\n              <span>{comment.user.lname}</span>\n            </>\n          )}\n        </div>\n        <div className=\"comment\">{comment.comment}</div>\n      </div>\n      <div\n        className=\"option-icon\"\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n\n          if (commentOptionIndex == index) {\n            setCommentOptionIndex(null);\n          } else {\n            setCommentOptionIndex(index);\n          }\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: commentOptionIndex == index ? \"lightgray\" : \"\",\n          }}\n          className=\"btn fas fa-ellipsis-v\"\n        ></div>\n        {commentOptionIndex === index && (\n          <div className=\"comment-menu\">\n            {/* <div\n            onClick={(e) => {\n              e.stopPropagation();\n              e.preventDefault();\n              setCommentUpdateClick(!commentUpdateClick);\n            }}\n          >\n            Edit\n          </div> */}\n            <div\n              className=\"comment-btn delete-comment-btn\"\n              onClick={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                setCommentDeleteClick(!commentDeleteClick);\n              }}\n            >\n              Delete\n            </div>\n          </div>\n        )}\n        {/* {commentUpdateClick && (\n        <CommentUpdate\n          postid={postid}\n          updateValue={comment.comment}\n          setComments={setComments}\n          commentid={comment._id}\n          commentUpdateClick={commentUpdateClick}\n          setCommentUpdateClick={setCommentUpdateClick}\n        />\n      )} */}\n        {commentDeleteClick && (\n          <CommentDelete\n            postid={postid}\n            index={index}\n            setComments={setComments}\n            comments={comments}\n            commentid={comment._id}\n            commentDeleteClick={commentDeleteClick}\n            setCommentDeleteClick={setCommentDeleteClick}\n            pp={pp}\n            setpp={setpp}\n            setCommentOptionIndex={setCommentOptionIndex}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserLikes.js",["317","318","319","320","321"],"import axios from \"axios\";\nimport \"./UserLikes.css\";\nimport UserLikesCard from \"./UserLikesCard\";\nimport uniqid from \"uniqid\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { OdinBookContext } from \"../Context\";\n\nconst UserLikes = ({\n  postid,\n  setUsersLikedIndex,\n  userid,\n  setGetLoading,\n  path,\n}) => {\n  const { axios_request, jwtData, myFriendsValue } = useContext(\n    OdinBookContext\n  );\n\n  //!the userid is of the guy who made the post\n\n  const [error, setError] = useState(\"\");\n  const [likeList, setLikeList] = useState([]);\n  const [myFriends, setMyFriends] = myFriendsValue;\n  // const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n\n  const [friendBtn, setFriendBtn] = useState([]);\n\n  const [getLikeLoading, setGetLikeLoading] = useState(true);\n\n  const get_users_liked = () => {\n    const route = `/post/${postid}/like`;\n    const method = \"GET\";\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLikeLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setLikeList(response.data.like);\n      setGetLikeLoading(false);\n\n      const h = Array(response.data.like.length).fill(false);\n      setFriendBtn(h);\n    };\n\n    axios_request({\n      route: route,\n      method: method,\n      data: \"\",\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    get_users_liked();\n  }, []);\n\n  return (\n    <div className=\"UserLikes\">\n      {error && <div className=\"error\">{error}</div>}\n\n      {!error && (\n        <div className=\"box\">\n          {getLikeLoading && (\n            <>\n              <div className=\"loading-container\">\n                <div className=\"container-2\">\n                  <div className=\"loading-msg\">Fetching Likes :)</div>\n                  <div className=\"loading\">\n                    <div className=\"spinner-border\" role=\"status\">\n                      <div className=\"sr-only\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n          {!getLikeLoading && (\n            <>\n              <div className='form-close-btn fas fa-times-circle\"'>\n                <div className=\"head-msg\">People who liked this post.</div>\n                <div className=\"btn-close\">\n                  <button\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      setUsersLikedIndex(null);\n                    }}\n                    className=\"fas fa-times-circle\"\n                  ></button>\n                </div>\n              </div>\n              {likeList.map((value, index) => {\n                return (\n                  <UserLikesCard\n                    value={value}\n                    index={index}\n                    key={uniqid()}\n                    friendBtn={friendBtn}\n                    setFriendBtn={setFriendBtn}\n                    myFriends={myFriends}\n                    setMyFriends={setMyFriends}\n                    userid={userid}\n                    setUsersLikedIndex={setUsersLikedIndex}\n                    setGetLoading={setGetLoading}\n                    getLikeLoading={getLikeLoading}\n                    path={path}\n                  />\n                );\n              })}\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserLikes;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserLikesCard.js",["322","323","324","325"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./UserLikes.css\";\nimport { Link } from \"react-router-dom\";\n\nconst UserLikesCard = ({\n  value,\n  index,\n  friendBtn,\n  setFriendBtn,\n  myFriends,\n  setMyFriends,\n  setUsersLikedIndex,\n  setGetLoading,\n  path,\n}) => {\n  const [pp, setpp] = useState(false);\n  const { axios_request, jwtData } = useContext(OdinBookContext);\n  const [error, setError] = useState(\"\");\n\n  const userid = JSON.parse(localStorage.getItem(\"local_history\")).userid;\n  // console.log(userid);\n\n  const clickHandler = () => {\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    // console.log(friendBtn[index]);\n    if (friendBtn[index] == false) {\n      const get_index = myFriends.findIndex(\n        (x) => x.username == value.username\n      );\n      if (get_index !== -1) {\n        myFriends.splice(get_index, 1);\n      }\n    } else {\n      myFriends.push(value);\n    }\n    setMyFriends(myFriends);\n  };\n\n  useEffect(() => {\n    const check = myFriends.findIndex((x) => x.username === value.username);\n\n    if (check !== -1) {\n      friendBtn[index] = true;\n      setFriendBtn(friendBtn);\n    }\n    setpp(!pp);\n  }, []);\n\n  // console.log(value._id, userid);\n  return (\n    <div className=\"UserLikesCard\">\n      {error && <div className=\"error\">{error}</div>}\n\n      {!error && (\n        <>\n          <div className=\"profile-picture\">\n            {[...value.fname[0].toLowerCase()]}\n          </div>\n          <div className=\"name\">\n            {(userid.toString() !== value._id.toString() ||\n              path == \"newsfeed\") && (\n              <div\n                className=\"clickable-link\"\n                onClick={() => {\n                  setUsersLikedIndex(null);\n                  setGetLoading(true);\n                }}\n              >\n                <Link\n                  to={{\n                    pathname: `/user/${value.username}/posts`,\n                    state: {\n                      userid: value._id,\n                      fname: value.fname,\n                      lname: value.lname,\n                      username: value.username,\n                    },\n                  }}\n                >\n                  <span>{value.fname} </span>\n                  <span>{value.lname}</span>\n                </Link>\n              </div>\n            )}\n            {path !== \"newsfeed\" && userid.toString() === value._id.toString() && (\n              <div className=\"unclickable-link\">\n                <span>{value.fname} </span>\n                <span>{value.lname}</span>\n              </div>\n            )}\n          </div>\n          {jwtData.sub !== value._id && (\n            <div\n              className=\"add-btn-container\"\n              onClick={() => {\n                friendBtn[index] = !friendBtn[index];\n                setFriendBtn(friendBtn);\n                setpp(!pp);\n                clickHandler();\n              }}\n              style={{\n                color: friendBtn[index] ? \"red\" : \"blue\",\n              }}\n            >\n              <div\n                className={\n                  friendBtn[index]\n                    ? \"add-btn fas fa-user-minus\"\n                    : \"add-btn fas fa-user-plus\"\n                }\n              ></div>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserLikesCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentCreate.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentUpdate.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentForm.js",["326","327"],"import React, { useContext, useRef, useState, useAsync } from \"react\";\n\nimport uniqid from \"uniqid\";\nimport \"./CommentForm.css\";\nimport { OdinBookContext } from \"../Context\";\n\nconst CommentForm = ({\n  setComments,\n  postIndex,\n  route,\n  method,\n  updateValue,\n  comments,\n  pp,\n  setpp,\n}) => {\n  const { jwtData, axios_request } = useContext(OdinBookContext);\n\n  const valueRef = useRef();\n\n  const [errors, setErrors] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const post_comment = () => {\n    let element;\n    element = document.querySelector(`#post-${postIndex}`);\n\n    comments.comment_list.push({\n      comment: valueRef.current.value,\n      user: {\n        fname: jwtData.fname,\n        lname: jwtData.lname,\n        username: jwtData.user,\n        _id: jwtData.sub,\n      },\n    });\n\n    if (element) {\n      const remove_empty = element.querySelector(`#post-${postIndex} .empty`);\n      if (remove_empty) {\n        remove_empty.style.display = \"none\";\n      }\n    }\n\n    const cb_error = (err) => {\n      if (err.response) {\n        setErrors(err.response.data);\n      } else {\n        setError(err.message);\n      }\n    };\n    const cb_response = (response) => {\n      setErrors([]);\n    };\n\n    axios_request({\n      route: route,\n      data: { comment: valueRef.current.value },\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    valueRef.current.value = \"\";\n\n    setComments(comments);\n    setpp(!pp);\n  };\n\n  const display_errors = () => {\n    let arr = [];\n\n    if (!Array.isArray(errors)) {\n      arr.push(<li key={uniqid()}>{errors.msg}</li>);\n    } else {\n      for (let i = 0; i < errors.length; i++) {\n        arr.push(<li key={uniqid()}>{errors[i].msg}</li>);\n      }\n    }\n\n    return <ul className=\"errors\">{arr}</ul>;\n  };\n\n  return (\n    <div className=\"CommentForm\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <div className=\"profile-picture\">\n            {[jwtData.fname[0].toLowerCase()]}\n          </div>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n\n              if (valueRef.current.value == \"\") {\n                return;\n              } else {\n                post_comment();\n              }\n            }}\n            autoComplete=\"off\"\n          >\n            <input\n              type=\"text\"\n              name=\"comment\"\n              id=\"comment\"\n              placeholder=\"Write a comment...\"\n              ref={valueRef}\n            />\n          </form>\n          {display_errors()}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Comment/CommentDelete.js",["328","329"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./CommentDelete.css\";\n\nconst CommentDelete = ({\n  postid,\n  index,\n  setComments,\n  commentid,\n  comments,\n  setCommentOptionIndex,\n  pp,\n  setpp,\n}) => {\n  const { axios_request } = useContext(OdinBookContext);\n  const mypost_delete_route = `/post/${postid}/comment/${commentid}`;\n  const mypost_delete_method = \"DELETE\";\n\n  const [postLoading, setPostLoading] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  const make_server_request = () => {\n    comments[index] = comments.comment_list.splice(index, 1);\n\n    setComments(comments);\n    setpp(!pp);\n    setCommentOptionIndex(null);\n    const cb_error = (err) => {\n      setError(err.message);\n      setPostLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setPostLoading(false);\n    };\n\n    axios_request({\n      route: mypost_delete_route,\n      data: \"\",\n      method: mypost_delete_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    make_server_request();\n  }, []);\n\n  return (\n    <div className=\"CommentDelete\">\n      {error && (\n        <div className=\"error\">\n          <div>{error}</div>\n          <div>Please try refreshing the Page :(</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CommentDelete;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserAboutCard.js",["330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { OdinBookContext } from \"../Context\";\n\nconst UseraAboutCard = ({\n  objkey,\n  index,\n  clickIndex,\n  setClickIndex,\n  result,\n  setResult,\n  ee,\n  setee,\n  jwtData,\n  userid,\n}) => {\n  const { myAboutValue, axios_request } = useContext(OdinBookContext);\n  const [myAbout, setMyAbout] = myAboutValue;\n\n  const [error, setError] = useState(\"\");\n\n  const [tooltip, setTooltip] = useState(false);\n  const [empty_name, setEmpty_name] = useState(false);\n\n  const [state, setState] = useState({ [objkey]: ee[objkey] });\n\n  const str = {\n    bio: \"Bio\",\n    nickName: \"Nick-name\",\n    school: \"School\",\n    college: \"College\",\n    working: \"Work Place\",\n    relationshipStatus: \"Relationhsip Status\",\n    book: \"Book\",\n    food: \"Food\",\n    gender: \"Gender\",\n    dob: \"Date of birth\",\n    email: \"Email\",\n    phone: \"Phone\",\n  };\n  const changeHandler = (e) => {\n    e.preventDefault();\n    const element = document.getElementById(objkey);\n\n    const { name, value } = e.target;\n\n    if (element.tagName == \"INPUT\") {\n      const element_id = element.id;\n      const arr = [...value];\n      if (element_id !== \"food\" && element_id !== \"book\") {\n        if (arr.length >= 30) {\n          setTooltip(true);\n          return;\n        } else {\n          setTooltip(false);\n        }\n      } else if (element_id == \"food\" || element_id == \"book\") {\n        if (arr.length >= 50) {\n          setTooltip(true);\n          return;\n        } else {\n          setTooltip(false);\n        }\n      }\n    }\n\n    setState({ ...state, [name]: value });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const route = \"/myprofile\";\n    const method = \"PUT\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    if (state.fname === \"\" || state.lname === \"\") {\n      return;\n    }\n\n    axios_request({\n      route: route,\n      data: state,\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (clickIndex == index) {\n      const element = document.getElementById(objkey);\n      element.focus();\n      element.style.border = \"1px solid blue\";\n      element.style.boxShadow = \"0.3px 0.3px 5px blue\";\n      element.style.outline = \"none\";\n      const savediv = document.getElementById(`save-icon-${index}`);\n      savediv.style.color = \"blue\";\n    }\n  }, []);\n\n  return (\n    <div className=\"UserAboutCard\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <form\n            autoComplete=\"off\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              return;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor={objkey}>{str[objkey]}</label>\n              <div className=\"container\">\n                {clickIndex != index && (\n                  <div className=\"profile-values\">\n                    {ee[objkey] || `No ${str[objkey]} added`}\n                  </div>\n                )}\n                {clickIndex == index &&\n                  objkey !== \"relationshipStatus\" &&\n                  objkey !== \"gender\" &&\n                  objkey !== \"dob\" &&\n                  objkey !== \"bio\" && (\n                    <input\n                      name={objkey}\n                      id={objkey}\n                      value={state[objkey]}\n                      onChange={changeHandler}\n                      maxLength={\n                        objkey == \"food\" || objkey == \"book\" ? \"50\" : \"30\"\n                      }\n                    />\n                  )}\n\n                {tooltip == true && (\n                  <div className=\"input-tooltip\">\n                    <>\n                      <span>No more than </span>\n                      {objkey == \"food\" || objkey == \"book\" ? \"50\" : \"30\"}\n                      <span> characters :)</span>{\" \"}\n                    </>\n                  </div>\n                )}\n                {clickIndex == index && objkey == \"bio\" && (\n                  <div className=\"bio-container\">\n                    <textarea\n                      name=\"bio\"\n                      id=\"bio\"\n                      value={state[objkey]}\n                      onChange={changeHandler}\n                    />\n                  </div>\n                )}\n\n                {clickIndex == index && objkey == \"dob\" && (\n                  <input\n                    type=\"date\"\n                    name=\"dob\"\n                    id=\"dob\"\n                    selected={state[objkey] ? null : \"\"}\n                    // onChange={changeHandler}\n                    start\n                  />\n                )}\n                {clickIndex == index && objkey == \"relationshipStatus\" && (\n                  <select\n                    id=\"relationshipStatus\"\n                    name=\"relationshipStatus\"\n                    onChange={changeHandler}\n                    defaultValue={ee[objkey]}\n                  >\n                    <option value=\"Status\">Status</option>\n                    <option value=\"Married\">Married</option>\n                    <option value=\"Single\">Single</option>\n                    <option value=\"Divorced\">Divorced</option>\n                    <option value=\"It's complicated\">It's complicated</option>\n                    <option value=\"In a relationship\">In relationship</option>\n                    <option value=\"Open Relationship\">Open Relationship</option>\n                    <option value=\"Engaged\">Engaged</option>\n                    <option value=\"Widowed\">Widowed</option>\n                  </select>\n                )}\n                {clickIndex == index && objkey === \"gender\" && (\n                  <select\n                    id=\"gender\"\n                    name=\"gender\"\n                    onChange={changeHandler}\n                    defaultValue={ee[objkey]}\n                  >\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Transgender\">Transgender</option>\n                    <option value=\"Gender Neutral\"> Gender Neutral</option>\n                    <option value=\"Non Binary\">Non Binary</option>\n                  </select>\n                )}\n              </div>\n              {userid === jwtData.sub && clickIndex !== index && (\n                <div\n                  className=\"edit-icon fas fa-edit\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setClickIndex(index);\n                  }}\n                ></div>\n              )}\n              {jwtData.sub === userid && clickIndex == index && (\n                <div\n                  id={`save-icon-${index}`}\n                  className=\"save-icon fas fa-save\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (state.fname == \"\" || state.lname == \"\") {\n                      setEmpty_name(true);\n                    } else {\n                      setClickIndex(null);\n                      ee[objkey] = state[objkey];\n                      setee(ee);\n                      myAbout[objkey] = state[objkey];\n                      setMyAbout(myAbout);\n                      submitHandler(e);\n                      setEmpty_name(false);\n                    }\n                  }}\n                ></div>\n              )}\n\n              {empty_name && (\n                <div className=\"empty_name\">\n                  {state.fname == \"\"\n                    ? \"First name cannot be empty\"\n                    : \"Last name cannot be empty\"}\n                </div>\n              )}\n            </div>\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UseraAboutCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/Chat.js",["354","355","356","357","358"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./Chat.css\";\nimport ChatCard from \"./ChatCard\";\n\nconst Chat = () => {\n  const location = useLocation();\n\n  const [error, setError] = useState(\"\");\n\n  const { axios_request, jwtData, socket, isReadValue } = useContext(\n    OdinBookContext\n  );\n\n  //this detail are of the person on whose chat btn we clicked\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n  let userid = local_history.userid;\n  let fname = local_history.fname;\n  let lname = local_history.lname;\n  let username = local_history.username;\n\n  const [tempResponse, setTempResponse] = useState([]);\n  const [response, setResponse] = useState([]);\n  const [msgArr, setMsgArr] = useState([]);\n\n  const [mymsgloading, setmsgloading] = useState(true);\n  const [responseloading, setresponseloading] = useState(true);\n\n  const [myMsg, setMyMsg] = useState([]);\n\n  const [isRead, setIsRead] = isReadValue;\n\n  useEffect(() => {\n    socket.on(\"new_msg\", (data) => {\n      setTempResponse([\n        ...tempResponse,\n        { message: data.message, createdAt: data.createdAt },\n      ]);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    if (tempResponse.length !== 0) {\n      setMsgArr([...msgArr, ...tempResponse]);\n    }\n  }, [tempResponse]);\n\n  useEffect(() => {\n    const h = async () => {\n      await Promise.all([get_responses(), get_my_messages()]);\n    };\n    h();\n    // get_responses();\n    // get_my_messages();\n\n    save_isreadtrue();\n  }, []);\n\n  // get the messages I sent to Komal\n  const get_responses = () => {\n    // sender = jwtData.sub\n    const route = `/chat/${userid}/${jwtData.sub}`;\n    const method = \"GET\";\n\n    const cb_response = (response) => {\n      if (response.data.length !== 0) {\n        let newArr = response.data.message_container.map((v) => ({\n          ...v,\n          isOwner: true,\n        }));\n        setResponse(newArr);\n      } else {\n        //it might happen that there are no sent messages.\n        setResponse([{ message: \"\", createdAt: \"\" }]);\n      }\n\n      setresponseloading(false);\n    };\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setresponseloading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  // the messages Komal sent to me\n  const get_my_messages = () => {\n    const route = `/chat/${jwtData.sub}/${userid}`;\n    const method = \"GET\";\n\n    const cb_response = (response) => {\n      if (response.data.length !== 0) {\n        setMyMsg(response.data.message_container);\n      } else {\n        //it might happen that there are no response msgs and only ond side messages.\n        setMyMsg([{ message: \"\", createdAt: \"\" }]);\n      }\n      setmsgloading(false);\n    };\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setmsgloading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (!mymsgloading && !responseloading) {\n      let arr = [...response, ...myMsg];\n\n      let sorted = arr.sort((a, b) => {\n        return a.createdAt < b.createdAt\n          ? -1\n          : a.createdAt > b.createdAt\n          ? 1\n          : 0;\n      });\n\n      setMsgArr(sorted);\n    }\n  }, [mymsgloading, responseloading]);\n\n  const save_isreadtrue = () => {\n    const route = `/isreadtrue/${userid}`;\n    const method = \"PUT\";\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    if (isRead.length > 0) {\n      const is_read_index = isRead.findIndex((x) => x.user === userid);\n      if (is_read_index !== -1) {\n        isRead[is_read_index].isread = [];\n        isRead[is_read_index].isread.push(true);\n        setIsRead(isRead);\n      }\n    }\n    //else will be... there are no messages to set to read=true\n  };\n\n  useEffect(() => {\n    const element = document.querySelector(\".Chat\");\n\n    const height = element.scrollHeight;\n\n    element.scrollTo(0, height);\n  }, [msgArr]);\n\n  return (\n    <div className=\"Chat\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          {mymsgloading && responseloading && (\n            <div className=\"loading-container\">\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n          {!mymsgloading && !responseloading && (\n            <ChatCard\n              fname={fname}\n              lname={lname}\n              userid={userid}\n              username={username}\n              msgArr={msgArr}\n              setMsgArr={setMsgArr}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/ChatCard.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Chat/ChatMap.js",["359","360","361"],"import React from \"react\";\nimport \"./ChatMap.css\";\n\nconst ChatMap = ({ value, index }) => {\n  let d;\n  let yearstr;\n  let splityear;\n  if (value.createdAt !== \"\") {\n    d = new Date(value.createdAt);\n\n    yearstr = d.getFullYear().toString();\n    splityear = [...yearstr];\n  }\n\n  return (\n    <div className=\"ChatMap\">\n      {value.message !== \"\" && (\n        <>\n          <div className={value.isOwner == true ? \"me\" : \"person\"}>\n            <div\n              className={value.isOwner == true ? \"curve-right\" : \"curve-left\"}\n            ></div>\n\n            <div className={value.isOwner == true ? \"right\" : \"left\"}>\n              <div className=\"message\">{value.message}</div>\n              <div className=\"date-container\">\n                <div className=\"date\">\n                  <span>{d.getDate()}/</span>\n                  <span>{d.getMonth() + 1}/</span>\n                  <span>{splityear[2]}</span>\n                  <span>{splityear[3]}</span>\n                </div>\n                <div className=\"time\">\n                  <span>\n                    {d.getHours() > 12\n                      ? d.getHours() - 12\n                      : d.getHours() === 0\n                      ? 12\n                      : d.getHours()}\n                    :\n                  </span>\n                  <span>\n                    {d.getMinutes() < 10\n                      ? \"0\" + d.getMinutes()\n                      : d.getMinutes()}\n                  </span>\n                  <span>{d.getHours() > 12 ? \"pm\" : \"am\"}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChatMap;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserDetailFriendBtn.js",["362","363","364","365","366"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\nimport \"./UserDetail.css\";\n\nconst UserDetailFriendBtn = () => {\n  const {\n    axios_request,\n    jwtData,\n    myFriendsValue,\n    didMyFriendsMountValue,\n  } = useContext(OdinBookContext);\n\n  const [error, setError] = useState(\"\");\n  const [myFriends, setMyFriends] = myFriendsValue;\n  const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n  const [pp, setpp] = useState(false);\n\n  const [friendBtn, setFriendBtn] = useState(false);\n\n  const [loading, setLoading] = useState(true);\n\n  const location = useLocation();\n\n  const local_history = JSON.parse(localStorage.getItem(\"local_history\"));\n  let userid = local_history.userid;\n  let fname = local_history.fname;\n  let lname = local_history.lname;\n  let username = local_history.username;\n\n  //we will fetch the logged in users friends list incase if the myfriends was not loaded\n  const get_myfriends = () => {\n    const route = `/friend/${jwtData.sub}`;\n    const method = \"GET\";\n    const cb_err = (err) => {};\n\n    const cb_response = (response) => {\n      setMyFriends(response.data);\n      setLoading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_err,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    if (didMyFriendsMount) {\n      get_myfriends();\n      setDidMyFriendsMount(false);\n    } else {\n      setLoading(false);\n      return;\n    }\n  }, []);\n\n  useEffect(() => {\n    const check = myFriends.findIndex((x) => {\n      return x.username === username;\n    });\n    if (check !== -1) {\n      setFriendBtn(true);\n    } else {\n      setFriendBtn(false);\n    }\n    setpp(!pp);\n  }, [myFriends]);\n\n  const clickHandler = () => {\n    const route = `/friend/${userid}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {};\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    if (friendBtn == true) {\n      const get_index = myFriends.findIndex((x) => x.username == username);\n\n      if (get_index !== -1) {\n        myFriends.splice(get_index, 1);\n        setMyFriends(myFriends);\n      }\n    } else {\n      myFriends.push({\n        _id: userid,\n        username: username,\n        fname: fname,\n        lname: lname,\n      });\n    }\n\n    setpp(!pp);\n  };\n\n  return (\n    <div className=\"UserDetailFriendBtn\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && !loading && (\n        <div\n          style={{ color: friendBtn ? \"red\" : \"blue\" }}\n          className={\n            friendBtn ? \"add-btn fas fa-user-minus\" : \"add-btn fas fa-user-plus\"\n          }\n          onClick={(e) => {\n            e.preventDefault();\n            setFriendBtn(!friendBtn);\n\n            setpp(!pp);\n            clickHandler();\n          }}\n        ></div>\n      )}\n    </div>\n  );\n};\n\nexport default UserDetailFriendBtn;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/ChatList/ChatList.js",["367","368"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport ChatListCard from \"./ChatListCard\";\nimport uniqid from \"uniqid\";\nimport \"./ChatList.css\";\n\nconst ChatList = () => {\n  const {\n    axios_request,\n\n    myChatListValue,\n    didMyChatListMountValue,\n    isReadValue,\n    socket,\n  } = useContext(OdinBookContext);\n\n  const [isRead, setIsRead] = isReadValue;\n\n  const [myChatList, setMyChatList] = myChatListValue;\n  const [didMyChatListMount, setDidMyChatListMount] = didMyChatListMountValue;\n\n  const [chatListLoading, setChatListLoading] = useState(true);\n  const [isreadLoading, setIsreadLoading] = useState(true);\n\n  const [tempIsread, settempIsread] = useState([]);\n  const [ischange, setischange] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const get_chat_list = () => {\n    const route = `/mychat`;\n    const method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setChatListLoading(false);\n    };\n\n    const cb_response = (response) => {\n      const a = response.data.received;\n      const b = response.data.sent;\n\n      if (b.length > 0) {\n        a.forEach((value) => {\n          const dupl_index = b.findIndex((x) => x.user._id === value.user._id);\n          if (dupl_index !== -1) {\n            b.splice(dupl_index, 1);\n          }\n        });\n      }\n\n      const c = [...a, ...b];\n\n      const sort_arr = c.sort((a, b) => {\n        return b.last_msg < a.last_msg ? -1 : b.last_msg > a.last_msg ? 1 : 0;\n      });\n\n      setMyChatList(sort_arr);\n\n      setChatListLoading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const get_isread = () => {\n    const route = \"/isread\";\n    const method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setIsreadLoading(false);\n    };\n    const cb_response = (response) => {\n      setIsRead(response.data.users);\n      setIsreadLoading(false);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_response: cb_response,\n      axios_error: cb_error,\n    });\n  };\n\n  useEffect(() => {\n    if (didMyChatListMount) {\n      get_chat_list();\n      get_isread();\n      setDidMyChatListMount(false);\n    } else {\n      setIsreadLoading(false);\n      setChatListLoading(false);\n    }\n  }, [ischange]);\n\n  useEffect(() => {\n    socket.on(\"new_msg\", (data) => {\n      settempIsread(data);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    if (tempIsread.length !== 0) {\n      const is_read_index = isRead.findIndex(\n        (x) => x.user === tempIsread.from.userid\n      );\n      if (is_read_index !== -1) {\n        if (isRead[is_read_index].isread[0] === true) {\n          isRead[is_read_index].isread.splice(0, 1);\n        }\n        isRead[is_read_index].isread.push(false);\n      } else {\n        isRead.push({ user: tempIsread.from.userid, isread: [false] });\n      }\n      setIsRead(isRead);\n\n      const check = myChatList.findIndex(\n        (x) => x.user._id === tempIsread.from.userid\n      );\n\n      if (check !== -1) {\n        myChatList[check].last_msg = new Date().toISOString();\n      } else {\n        myChatList.push({\n          last_msg: new Date().toISOString(),\n          user: {\n            fname: tempIsread.from.fname,\n            lname: tempIsread.from.lname,\n            username: tempIsread.from.username,\n            _id: tempIsread.from.userid,\n          },\n        });\n      }\n\n      const sort_arr = myChatList.sort((a, b) =>\n        b.last_msg < a.last_msg ? -1 : b.last_msg > a.last_msg ? 1 : 0\n      );\n\n      setMyChatList(sort_arr);\n      setischange(!ischange);\n    }\n  }, [tempIsread]);\n\n  return (\n    <div className=\"ChatList\">\n      {error && <div className=\"errorr\">{error}</div>}\n      {!error && (\n        <>\n          {chatListLoading && isreadLoading && (\n            <div className=\"loading-container\">\n              <div className=\"spinner-border loading\" role=\"status\">\n                <span className=\"sr-only\"></span>\n              </div>\n            </div>\n          )}\n          {!chatListLoading &&\n            !isreadLoading &&\n            (myChatList.length === 0 ? (\n              <div className=\"empty-chatlist\">\n                Please start a conversation with someone to see it here.\n              </div>\n            ) : (\n              myChatList.map((value, index) => (\n                <ChatListCard\n                  value={value}\n                  index={index}\n                  key={uniqid()}\n                  isRead={isRead}\n                />\n              ))\n            ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChatList;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/ChatList/ChatListCard.js",["369"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ChatListCard = ({ value, index, isRead }) => {\n  let no_unread_msgs;\n  for (let i = 0; i < isRead.length; i++) {\n    if (isRead[i].user === value.user._id) {\n      if (isRead[i].isread[0] == true) {\n        break;\n      } else {\n        no_unread_msgs = isRead[i].isread.length;\n      }\n    }\n  }\n\n  const minute = new Date(value.last_msg).getMinutes();\n  const hour = new Date(value.last_msg).getHours();\n  const date = new Date(value.last_msg).getDate();\n  const month = new Date(value.last_msg).getMonth() + 1;\n  const year = new Date(value.last_msg).getFullYear();\n  const splityear = [...year.toString()];\n\n  return (\n    <div className=\"ChatListCard\">\n      <Link\n        to={{\n          pathname: \"/chat\",\n          state: {\n            userid: value.user._id,\n            fname: value.user.fname,\n            lname: value.user.lname,\n            username: value.user.username,\n          },\n        }}\n      >\n        <div className=\"profile-picture\">\n          {[...value.user.fname][0].toLowerCase()}\n        </div>\n        <div className=\"name\">\n          <div>\n            <span>{value.user.fname} </span>\n            <span>{value.user.lname} </span>\n          </div>\n        </div>\n        <div className=\"read-container\">\n          <div className=\"read\">\n            <div className={no_unread_msgs ? \"show-read isread\" : \"show-read\"}>\n              {no_unread_msgs || \"\"}\n            </div>\n          </div>\n          <div className=\"date-container\">\n            <div className=\"date\">\n              <span>{date}/</span>\n\n              <span>{month}/</span>\n\n              <span>{splityear[2]}</span>\n              <span>{splityear[3]}</span>\n            </div>\n\n            <div className=\"time\">\n              <span>{hour > 12 ? hour - 12 : hour === 0 ? 12 : hour}:</span>\n\n              <span>{minute < 10 ? \"0\" + minute : minute}</span>\n              <span>{hour > 12 ? \"pm\" : \"am\"}</span>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default ChatListCard;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/WelcomeMsg/WelcomeMsg.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserNuLikes.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/UserDetail/UserCardFooter.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Home/Menu.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/PageNotFound/PageNotFound.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Resume/Resume.js",[],"/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Explore/Explore.js",["370","371","372"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { OdinBookContext } from \"../Context\";\nimport ExploreCard from \"./ExploreCard\";\nimport uniqid from \"uniqid\";\nimport \"./Explore.css\";\n\nconst Explore = () => {\n  const {\n    axios_request,\n    didMyFriendsMountValue,\n    myFriendsValue,\n    jwtData,\n  } = useContext(OdinBookContext);\n  const [didMyFriendsMount, setDidMyFriendsMount] = didMyFriendsMountValue;\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  const [error, setError] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [getLoading, setGetLoading] = useState(true);\n  const [get_friends_loading, setGet_friends_loading] = useState(true);\n\n  const get_users = () => {\n    let user_list_route = `/user_list`;\n\n    const user_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setGetLoading(false);\n    };\n\n    const cb_response = (response) => {\n      setResult(response.data);\n      setGetLoading(false);\n      // console.log(response.data);\n    };\n\n    axios_request({\n      route: user_list_route,\n      data: \"\",\n      method: user_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  const get_my_friends = () => {\n    const friend_list_route = `/friend/${jwtData.sub}`;\n    const friend_list_method = \"GET\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n      setGet_friends_loading(false);\n    };\n\n    const cb_response = (response) => {\n      setMyFriends(response.data);\n      setGet_friends_loading(false);\n      // console.log(response.data);\n    };\n\n    axios_request({\n      route: friend_list_route,\n      data: \"\",\n      method: friend_list_method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n  };\n\n  useEffect(() => {\n    get_users();\n    if (didMyFriendsMount) {\n      get_my_friends();\n      // console.log(75);\n      setDidMyFriendsMount(false);\n    } else {\n      setGet_friends_loading(false);\n      // console.log(78);\n      return;\n    }\n  }, []);\n\n  // console.log(getLoading, get_friends_loading);\n  let options = true;\n  return (\n    <div className=\"Explore\">\n      {error && <div className=\"error\">{error}</div>}\n\n      {!error && <h2 className=\"title-msg\">People you might know.</h2>}\n      {!error && !getLoading && !get_friends_loading && (\n        <>\n          {result.map((value, index) => {\n            //we will only show users who are not my(logged-in user) friends\n\n            const isFriend = myFriends.find((x) => x._id === value._id);\n\n            if (!isFriend && jwtData.sub !== value._id) {\n              options = false;\n              return <ExploreCard value={value} index={index} key={uniqid()} />;\n            }\n          })}\n          {options == true && (\n            <p>\n              Okay, evey user in OdinBook's database is in your friend list. So\n              no suggestions :(\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Explore;\n","/home/arvind/Documents/React-apps/odin-book/react-frontend/src/Components/Explore/ExploreCard.js",["373"],"import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OdinBookContext } from \"../Context\";\n\nconst ExploreCard = ({ value, index }) => {\n  const { jwtData, myFriendsValue, axios_request } = useContext(\n    OdinBookContext\n  );\n  const [friendBtn, setFriendBtn] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [myFriends, setMyFriends] = myFriendsValue;\n\n  const clickHandler = () => {\n    const route = `/friend/${value._id}`;\n    const method = \"POST\";\n\n    const cb_error = (err) => {\n      setError(err.message);\n    };\n\n    const cb_response = (response) => {\n      // console.log(response);\n    };\n\n    axios_request({\n      route: route,\n      data: \"\",\n      method: method,\n      axios_error: cb_error,\n      axios_response: cb_response,\n    });\n\n    // console.log(friendBtn);\n    if (friendBtn) {\n      const get_index = myFriends.findIndex(\n        (x) => x.username == value.username\n      );\n      if (get_index !== -1) {\n        myFriends.splice(get_index, 1);\n        setMyFriends(myFriends);\n      }\n    } else {\n      myFriends.push(value);\n    }\n  };\n  return (\n    <div className=\"ExploreCard\">\n      {error && <div className=\"error\">{error}</div>}\n      {!error && (\n        <>\n          <div className=\"profile-picture\">\n            {[...value.fname[0].toLowerCase()]}\n          </div>\n          <div className=\"name-container\">\n            <Link\n              to={{\n                pathname: `/user/${value.username}/posts`,\n                state: {\n                  userid: value._id,\n                  fname: value.fname,\n                  lname: value.lname,\n                  username: value.username,\n                },\n              }}\n            >\n              <div className=\"name\">\n                <span>{value.fname} </span>\n                <span>{value.lname}</span>\n              </div>\n            </Link>\n            <div className=\"username\">{value.username}</div>\n          </div>\n          {jwtData.sub !== value._id && (\n            <div\n              className=\"add-btn\"\n              style={{\n                color: friendBtn ? \"red\" : \"blue\",\n              }}\n              onClick={() => {\n                setFriendBtn(!friendBtn);\n                clickHandler();\n              }}\n            >\n              <div\n                // style={{ color: \"blue\" }}\n                className={\n                  friendBtn\n                    ? \"add-btn fas fa-user-minus\"\n                    : \"add-btn fas fa-user-plus\"\n                }\n              ></div>\n            </div>\n          )}\n          <div className=\"chat-link-container\">\n            <Link\n              to={{\n                pathname: \"/chat\",\n                state: {\n                  userid: value._id,\n                  fname: value.fname,\n                  lname: value.lname,\n                  username: value.username,\n                },\n              }}\n            >\n              <div className=\"chat-btn fab fa-facebook-messenger\"></div>\n            </Link>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ExploreCard;\n",{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","severity":1,"message":"379","line":3,"column":10,"nodeType":"380","messageId":"381","endLine":3,"endColumn":20},{"ruleId":"378","severity":1,"message":"382","line":4,"column":10,"nodeType":"380","messageId":"381","endLine":4,"endColumn":25},{"ruleId":"378","severity":1,"message":"383","line":5,"column":8,"nodeType":"380","messageId":"381","endLine":5,"endColumn":13},{"ruleId":"378","severity":1,"message":"384","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":13},{"ruleId":"378","severity":1,"message":"383","line":7,"column":8,"nodeType":"380","messageId":"381","endLine":7,"endColumn":13},{"ruleId":"378","severity":1,"message":"385","line":8,"column":8,"nodeType":"380","messageId":"381","endLine":8,"endColumn":18},{"ruleId":"386","severity":1,"message":"387","line":160,"column":6,"nodeType":"388","endLine":160,"endColumn":14,"suggestions":"389"},{"ruleId":"378","severity":1,"message":"390","line":1,"column":40,"nodeType":"380","messageId":"381","endLine":1,"endColumn":46},{"ruleId":"378","severity":1,"message":"391","line":6,"column":3,"nodeType":"380","messageId":"381","endLine":6,"endColumn":13},{"ruleId":"378","severity":1,"message":"392","line":8,"column":3,"nodeType":"380","messageId":"381","endLine":8,"endColumn":12},{"ruleId":"378","severity":1,"message":"393","line":18,"column":8,"nodeType":"380","messageId":"381","endLine":18,"endColumn":17},{"ruleId":"378","severity":1,"message":"394","line":31,"column":7,"nodeType":"380","messageId":"381","endLine":31,"endColumn":17},{"ruleId":"378","severity":1,"message":"395","line":32,"column":10,"nodeType":"380","messageId":"381","endLine":32,"endColumn":17},{"ruleId":"378","severity":1,"message":"396","line":35,"column":18,"nodeType":"380","messageId":"381","endLine":35,"endColumn":27},{"ruleId":"378","severity":1,"message":"391","line":4,"column":20,"nodeType":"380","messageId":"381","endLine":4,"endColumn":30},{"ruleId":"378","severity":1,"message":"397","line":4,"column":10,"nodeType":"380","messageId":"381","endLine":4,"endColumn":21},{"ruleId":"386","severity":1,"message":"398","line":18,"column":6,"nodeType":"388","endLine":18,"endColumn":8,"suggestions":"399"},{"ruleId":"378","severity":1,"message":"391","line":4,"column":10,"nodeType":"380","messageId":"381","endLine":4,"endColumn":20},{"ruleId":"378","severity":1,"message":"397","line":4,"column":22,"nodeType":"380","messageId":"381","endLine":4,"endColumn":33},{"ruleId":"378","severity":1,"message":"392","line":4,"column":35,"nodeType":"380","messageId":"381","endLine":4,"endColumn":44},{"ruleId":"386","severity":1,"message":"400","line":31,"column":6,"nodeType":"388","endLine":31,"endColumn":8,"suggestions":"401"},{"ruleId":"378","severity":1,"message":"392","line":6,"column":3,"nodeType":"380","messageId":"381","endLine":6,"endColumn":12},{"ruleId":"378","severity":1,"message":"391","line":7,"column":3,"nodeType":"380","messageId":"381","endLine":7,"endColumn":13},{"ruleId":"386","severity":1,"message":"402","line":10,"column":6,"nodeType":"388","endLine":10,"endColumn":14,"suggestions":"403"},{"ruleId":"378","severity":1,"message":"404","line":8,"column":10,"nodeType":"380","messageId":"381","endLine":8,"endColumn":27},{"ruleId":"386","severity":1,"message":"405","line":58,"column":6,"nodeType":"388","endLine":58,"endColumn":25,"suggestions":"406"},{"ruleId":"386","severity":1,"message":"407","line":69,"column":6,"nodeType":"388","endLine":69,"endColumn":8,"suggestions":"408"},{"ruleId":"409","severity":1,"message":"410","line":80,"column":28,"nodeType":"411","messageId":"412","endLine":80,"endColumn":30},{"ruleId":"378","severity":1,"message":"413","line":1,"column":29,"nodeType":"380","messageId":"381","endLine":1,"endColumn":38},{"ruleId":"378","severity":1,"message":"414","line":12,"column":9,"nodeType":"380","messageId":"381","endLine":12,"endColumn":17},{"ruleId":"378","severity":1,"message":"415","line":22,"column":7,"nodeType":"380","messageId":"381","endLine":22,"endColumn":11},{"ruleId":"378","severity":1,"message":"392","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":19},{"ruleId":"378","severity":1,"message":"391","line":2,"column":21,"nodeType":"380","messageId":"381","endLine":2,"endColumn":31},{"ruleId":"409","severity":1,"message":"410","line":62,"column":12,"nodeType":"411","messageId":"412","endLine":62,"endColumn":14},{"ruleId":"409","severity":1,"message":"410","line":73,"column":14,"nodeType":"411","messageId":"412","endLine":73,"endColumn":16},{"ruleId":"409","severity":1,"message":"410","line":86,"column":16,"nodeType":"411","messageId":"412","endLine":86,"endColumn":18},{"ruleId":"409","severity":1,"message":"410","line":111,"column":14,"nodeType":"411","messageId":"412","endLine":111,"endColumn":16},{"ruleId":"409","severity":1,"message":"410","line":127,"column":21,"nodeType":"411","messageId":"412","endLine":127,"endColumn":23},{"ruleId":"386","severity":1,"message":"416","line":138,"column":6,"nodeType":"388","endLine":138,"endColumn":31,"suggestions":"417"},{"ruleId":"386","severity":1,"message":"418","line":145,"column":6,"nodeType":"388","endLine":145,"endColumn":24,"suggestions":"419"},{"ruleId":"386","severity":1,"message":"420","line":178,"column":6,"nodeType":"388","endLine":178,"endColumn":8,"suggestions":"421"},{"ruleId":"386","severity":1,"message":"422","line":219,"column":6,"nodeType":"388","endLine":219,"endColumn":8,"suggestions":"423"},{"ruleId":"409","severity":1,"message":"410","line":224,"column":26,"nodeType":"411","messageId":"412","endLine":224,"endColumn":28},{"ruleId":"409","severity":1,"message":"410","line":271,"column":30,"nodeType":"411","messageId":"412","endLine":271,"endColumn":32},{"ruleId":"409","severity":1,"message":"410","line":273,"column":25,"nodeType":"411","messageId":"412","endLine":273,"endColumn":27},{"ruleId":"386","severity":1,"message":"424","line":67,"column":6,"nodeType":"388","endLine":67,"endColumn":25,"suggestions":"425"},{"ruleId":"386","severity":1,"message":"426","line":91,"column":6,"nodeType":"388","endLine":91,"endColumn":14,"suggestions":"427"},{"ruleId":"409","severity":1,"message":"410","line":95,"column":17,"nodeType":"411","messageId":"412","endLine":95,"endColumn":19},{"ruleId":"378","severity":1,"message":"428","line":25,"column":7,"nodeType":"380","messageId":"381","endLine":25,"endColumn":15},{"ruleId":"409","severity":1,"message":"410","line":38,"column":14,"nodeType":"411","messageId":"412","endLine":38,"endColumn":16},{"ruleId":"409","severity":1,"message":"410","line":51,"column":16,"nodeType":"411","messageId":"412","endLine":51,"endColumn":18},{"ruleId":"409","severity":1,"message":"410","line":54,"column":20,"nodeType":"411","messageId":"412","endLine":54,"endColumn":22},{"ruleId":"409","severity":1,"message":"410","line":76,"column":14,"nodeType":"411","messageId":"412","endLine":76,"endColumn":16},{"ruleId":"386","severity":1,"message":"429","line":97,"column":6,"nodeType":"388","endLine":97,"endColumn":25,"suggestions":"430"},{"ruleId":"378","severity":1,"message":"391","line":2,"column":16,"nodeType":"380","messageId":"381","endLine":2,"endColumn":26},{"ruleId":"378","severity":1,"message":"397","line":2,"column":28,"nodeType":"380","messageId":"381","endLine":2,"endColumn":39},{"ruleId":"378","severity":1,"message":"392","line":2,"column":41,"nodeType":"380","messageId":"381","endLine":2,"endColumn":50},{"ruleId":"409","severity":1,"message":"410","line":52,"column":21,"nodeType":"411","messageId":"412","endLine":52,"endColumn":23},{"ruleId":"409","severity":1,"message":"410","line":52,"column":39,"nodeType":"411","messageId":"412","endLine":52,"endColumn":41},{"ruleId":"409","severity":1,"message":"410","line":59,"column":28,"nodeType":"411","messageId":"412","endLine":59,"endColumn":30},{"ruleId":"409","severity":1,"message":"410","line":61,"column":29,"nodeType":"411","messageId":"412","endLine":61,"endColumn":31},{"ruleId":"386","severity":1,"message":"431","line":83,"column":6,"nodeType":"388","endLine":83,"endColumn":8,"suggestions":"432"},{"ruleId":"409","severity":1,"message":"410","line":116,"column":24,"nodeType":"411","messageId":"412","endLine":116,"endColumn":26},{"ruleId":"409","severity":1,"message":"410","line":132,"column":29,"nodeType":"411","messageId":"412","endLine":132,"endColumn":31},{"ruleId":"378","severity":1,"message":"433","line":18,"column":10,"nodeType":"380","messageId":"381","endLine":18,"endColumn":24},{"ruleId":"378","severity":1,"message":"434","line":18,"column":26,"nodeType":"380","messageId":"381","endLine":18,"endColumn":43},{"ruleId":"386","severity":1,"message":"431","line":63,"column":6,"nodeType":"388","endLine":63,"endColumn":8,"suggestions":"435"},{"ruleId":"378","severity":1,"message":"436","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":28},{"ruleId":"378","severity":1,"message":"390","line":1,"column":50,"nodeType":"380","messageId":"381","endLine":1,"endColumn":56},{"ruleId":"378","severity":1,"message":"391","line":6,"column":16,"nodeType":"380","messageId":"381","endLine":6,"endColumn":26},{"ruleId":"378","severity":1,"message":"437","line":8,"column":8,"nodeType":"380","messageId":"381","endLine":8,"endColumn":19},{"ruleId":"378","severity":1,"message":"438","line":9,"column":8,"nodeType":"380","messageId":"381","endLine":9,"endColumn":22},{"ruleId":"378","severity":1,"message":"384","line":10,"column":10,"nodeType":"380","messageId":"381","endLine":10,"endColumn":13},{"ruleId":"378","severity":1,"message":"414","line":56,"column":9,"nodeType":"380","messageId":"381","endLine":56,"endColumn":17},{"ruleId":"378","severity":1,"message":"439","line":63,"column":7,"nodeType":"380","messageId":"381","endLine":63,"endColumn":13},{"ruleId":"378","severity":1,"message":"440","line":64,"column":7,"nodeType":"380","messageId":"381","endLine":64,"endColumn":11},{"ruleId":"409","severity":1,"message":"410","line":65,"column":12,"nodeType":"411","messageId":"412","endLine":65,"endColumn":14},{"ruleId":"386","severity":1,"message":"441","line":123,"column":6,"nodeType":"388","endLine":123,"endColumn":47,"suggestions":"442"},{"ruleId":"386","severity":1,"message":"443","line":134,"column":6,"nodeType":"388","endLine":134,"endColumn":8,"suggestions":"444"},{"ruleId":"409","severity":1,"message":"410","line":166,"column":19,"nodeType":"411","messageId":"412","endLine":166,"endColumn":21},{"ruleId":"409","severity":1,"message":"410","line":192,"column":38,"nodeType":"411","messageId":"412","endLine":192,"endColumn":40},{"ruleId":"409","severity":1,"message":"410","line":202,"column":53,"nodeType":"411","messageId":"412","endLine":202,"endColumn":55},{"ruleId":"409","severity":1,"message":"410","line":208,"column":33,"nodeType":"411","messageId":"412","endLine":208,"endColumn":35},{"ruleId":"409","severity":1,"message":"410","line":264,"column":37,"nodeType":"411","messageId":"412","endLine":264,"endColumn":39},{"ruleId":"409","severity":1,"message":"410","line":268,"column":23,"nodeType":"411","messageId":"412","endLine":268,"endColumn":25},{"ruleId":"409","severity":1,"message":"410","line":286,"column":34,"nodeType":"411","messageId":"412","endLine":286,"endColumn":36},{"ruleId":"409","severity":1,"message":"410","line":365,"column":41,"nodeType":"411","messageId":"412","endLine":365,"endColumn":43},{"ruleId":"409","severity":1,"message":"410","line":372,"column":49,"nodeType":"411","messageId":"412","endLine":372,"endColumn":51},{"ruleId":"378","severity":1,"message":"397","line":3,"column":16,"nodeType":"380","messageId":"381","endLine":3,"endColumn":27},{"ruleId":"378","severity":1,"message":"445","line":22,"column":11,"nodeType":"380","messageId":"381","endLine":22,"endColumn":18},{"ruleId":"409","severity":1,"message":"410","line":42,"column":18,"nodeType":"411","messageId":"412","endLine":42,"endColumn":20},{"ruleId":"409","severity":1,"message":"446","line":58,"column":17,"nodeType":"411","messageId":"412","endLine":58,"endColumn":19},{"ruleId":"409","severity":1,"message":"410","line":73,"column":34,"nodeType":"411","messageId":"412","endLine":73,"endColumn":36},{"ruleId":"409","severity":1,"message":"410","line":82,"column":49,"nodeType":"411","messageId":"412","endLine":82,"endColumn":51},{"ruleId":"378","severity":1,"message":"447","line":1,"column":8,"nodeType":"380","messageId":"381","endLine":1,"endColumn":13},{"ruleId":"378","severity":1,"message":"397","line":5,"column":10,"nodeType":"380","messageId":"381","endLine":5,"endColumn":21},{"ruleId":"378","severity":1,"message":"392","line":5,"column":23,"nodeType":"380","messageId":"381","endLine":5,"endColumn":32},{"ruleId":"378","severity":1,"message":"445","line":16,"column":26,"nodeType":"380","messageId":"381","endLine":16,"endColumn":33},{"ruleId":"386","severity":1,"message":"448","line":58,"column":6,"nodeType":"388","endLine":58,"endColumn":8,"suggestions":"449"},{"ruleId":"409","severity":1,"message":"410","line":43,"column":26,"nodeType":"411","messageId":"412","endLine":43,"endColumn":28},{"ruleId":"409","severity":1,"message":"410","line":45,"column":27,"nodeType":"411","messageId":"412","endLine":45,"endColumn":29},{"ruleId":"386","severity":1,"message":"431","line":64,"column":6,"nodeType":"388","endLine":64,"endColumn":8,"suggestions":"450"},{"ruleId":"409","severity":1,"message":"410","line":78,"column":20,"nodeType":"411","messageId":"412","endLine":78,"endColumn":22},{"ruleId":"378","severity":1,"message":"451","line":1,"column":47,"nodeType":"380","messageId":"381","endLine":1,"endColumn":55},{"ruleId":"409","severity":1,"message":"410","line":96,"column":42,"nodeType":"411","messageId":"412","endLine":96,"endColumn":44},{"ruleId":"378","severity":1,"message":"452","line":19,"column":10,"nodeType":"380","messageId":"381","endLine":19,"endColumn":21},{"ruleId":"386","severity":1,"message":"398","line":49,"column":6,"nodeType":"388","endLine":49,"endColumn":8,"suggestions":"453"},{"ruleId":"378","severity":1,"message":"390","line":1,"column":50,"nodeType":"380","messageId":"381","endLine":1,"endColumn":56},{"ruleId":"409","severity":1,"message":"410","line":46,"column":25,"nodeType":"411","messageId":"412","endLine":46,"endColumn":27},{"ruleId":"409","severity":1,"message":"410","line":56,"column":29,"nodeType":"411","messageId":"412","endLine":56,"endColumn":31},{"ruleId":"409","severity":1,"message":"410","line":56,"column":53,"nodeType":"411","messageId":"412","endLine":56,"endColumn":55},{"ruleId":"409","severity":1,"message":"410","line":94,"column":20,"nodeType":"411","messageId":"412","endLine":94,"endColumn":22},{"ruleId":"386","severity":1,"message":"454","line":103,"column":6,"nodeType":"388","endLine":103,"endColumn":8,"suggestions":"455"},{"ruleId":"409","severity":1,"message":"446","line":120,"column":29,"nodeType":"411","messageId":"412","endLine":120,"endColumn":31},{"ruleId":"409","severity":1,"message":"410","line":125,"column":29,"nodeType":"411","messageId":"412","endLine":125,"endColumn":31},{"ruleId":"409","severity":1,"message":"410","line":136,"column":32,"nodeType":"411","messageId":"412","endLine":136,"endColumn":34},{"ruleId":"409","severity":1,"message":"410","line":136,"column":52,"nodeType":"411","messageId":"412","endLine":136,"endColumn":54},{"ruleId":"409","severity":1,"message":"410","line":141,"column":26,"nodeType":"411","messageId":"412","endLine":141,"endColumn":28},{"ruleId":"409","severity":1,"message":"410","line":145,"column":31,"nodeType":"411","messageId":"412","endLine":145,"endColumn":33},{"ruleId":"409","severity":1,"message":"410","line":145,"column":51,"nodeType":"411","messageId":"412","endLine":145,"endColumn":53},{"ruleId":"409","severity":1,"message":"410","line":150,"column":29,"nodeType":"411","messageId":"412","endLine":150,"endColumn":31},{"ruleId":"409","severity":1,"message":"410","line":150,"column":48,"nodeType":"411","messageId":"412","endLine":150,"endColumn":50},{"ruleId":"409","severity":1,"message":"410","line":161,"column":29,"nodeType":"411","messageId":"412","endLine":161,"endColumn":31},{"ruleId":"409","severity":1,"message":"410","line":161,"column":48,"nodeType":"411","messageId":"412","endLine":161,"endColumn":50},{"ruleId":"409","severity":1,"message":"410","line":171,"column":29,"nodeType":"411","messageId":"412","endLine":171,"endColumn":31},{"ruleId":"409","severity":1,"message":"410","line":171,"column":48,"nodeType":"411","messageId":"412","endLine":171,"endColumn":50},{"ruleId":"409","severity":1,"message":"410","line":189,"column":29,"nodeType":"411","messageId":"412","endLine":189,"endColumn":31},{"ruleId":"409","severity":1,"message":"410","line":214,"column":53,"nodeType":"411","messageId":"412","endLine":214,"endColumn":55},{"ruleId":"409","severity":1,"message":"410","line":221,"column":37,"nodeType":"411","messageId":"412","endLine":221,"endColumn":39},{"ruleId":"409","severity":1,"message":"410","line":221,"column":58,"nodeType":"411","messageId":"412","endLine":221,"endColumn":60},{"ruleId":"409","severity":1,"message":"410","line":238,"column":32,"nodeType":"411","messageId":"412","endLine":238,"endColumn":34},{"ruleId":"378","severity":1,"message":"414","line":8,"column":9,"nodeType":"380","messageId":"381","endLine":8,"endColumn":17},{"ruleId":"386","severity":1,"message":"456","line":41,"column":6,"nodeType":"388","endLine":41,"endColumn":14,"suggestions":"457"},{"ruleId":"386","severity":1,"message":"458","line":47,"column":6,"nodeType":"388","endLine":47,"endColumn":20,"suggestions":"459"},{"ruleId":"386","severity":1,"message":"460","line":58,"column":6,"nodeType":"388","endLine":58,"endColumn":8,"suggestions":"461"},{"ruleId":"386","severity":1,"message":"462","line":138,"column":6,"nodeType":"388","endLine":138,"endColumn":37,"suggestions":"463"},{"ruleId":"409","severity":1,"message":"410","line":19,"column":41,"nodeType":"411","messageId":"412","endLine":19,"endColumn":43},{"ruleId":"409","severity":1,"message":"410","line":21,"column":40,"nodeType":"411","messageId":"412","endLine":21,"endColumn":42},{"ruleId":"409","severity":1,"message":"410","line":24,"column":43,"nodeType":"411","messageId":"412","endLine":24,"endColumn":45},{"ruleId":"378","severity":1,"message":"414","line":23,"column":9,"nodeType":"380","messageId":"381","endLine":23,"endColumn":17},{"ruleId":"386","severity":1,"message":"420","line":59,"column":6,"nodeType":"388","endLine":59,"endColumn":8,"suggestions":"464"},{"ruleId":"386","severity":1,"message":"465","line":71,"column":6,"nodeType":"388","endLine":71,"endColumn":17,"suggestions":"466"},{"ruleId":"409","severity":1,"message":"410","line":91,"column":19,"nodeType":"411","messageId":"412","endLine":91,"endColumn":21},{"ruleId":"409","severity":1,"message":"410","line":92,"column":63,"nodeType":"411","messageId":"412","endLine":92,"endColumn":65},{"ruleId":"386","severity":1,"message":"467","line":102,"column":6,"nodeType":"388","endLine":102,"endColumn":16,"suggestions":"468"},{"ruleId":"386","severity":1,"message":"469","line":150,"column":6,"nodeType":"388","endLine":150,"endColumn":18,"suggestions":"470"},{"ruleId":"409","severity":1,"message":"410","line":8,"column":31,"nodeType":"411","messageId":"412","endLine":8,"endColumn":33},{"ruleId":"386","severity":1,"message":"471","line":82,"column":6,"nodeType":"388","endLine":82,"endColumn":8,"suggestions":"472"},{"ruleId":"473","severity":1,"message":"474","line":93,"column":38,"nodeType":"475","messageId":"476","endLine":93,"endColumn":40},{"ruleId":"409","severity":1,"message":"410","line":103,"column":20,"nodeType":"411","messageId":"412","endLine":103,"endColumn":22},{"ruleId":"409","severity":1,"message":"410","line":36,"column":27,"nodeType":"411","messageId":"412","endLine":36,"endColumn":29},"no-native-reassign",["477"],"no-negated-in-lhs",["478"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'OdinBookContext' is defined but never used.","'Login' is defined but never used.","'set' is defined but never used.","'UserFriend' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isLogin' and 'jwtData'. Either include them or remove the dependency array.","ArrayExpression",["479"],"'useRef' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'Hamburger' is defined but never used.","'background' is assigned a value but never used.","'isClick' is assigned a value but never used.","'setIsAuth' is assigned a value but never used.","'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'make_server_request'. Either include it or remove the dependency array.",["480"],"React Hook useEffect has a missing dependency: 'update_value'. Either include it or remove the dependency array.",["481"],"React Hook useEffect has a missing dependency: 'setIsAuth'. Either include it or remove the dependency array.",["482"],"'searchValueChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'make_server_request' and 'setSearchValueChange'. Either include them or remove the dependency array.",["483"],"React Hook useEffect has missing dependencies: 'make_server_request', 'params', and 'searchValueChange'. Either include them or remove the dependency array.",["484"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'location' is assigned a value but never used.","'from' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'didMyNewsFeedMount', 'didMyPostsMount', 'get_posts', 'jwtData.sub', 'myNewsfeed', 'myPosts', 'path', 'setDidMyNewsFeedMount', 'setDidMyPostsMount', and 'userid'. Either include them or remove the dependency array.",["485"],"React Hook useEffect has missing dependencies: 'get_posts' and 'path'. Either include them or remove the dependency array.",["486"],"React Hook useEffect has missing dependencies: 'didMyFriendsMount', 'get_myfriends', and 'setDidMyFriendsMount'. Either include them or remove the dependency array.",["487"],"React Hook useEffect has a missing dependency: 'from'. Either include it or remove the dependency array.",["488"],"React Hook useEffect has missing dependencies: 'didMyAboutMount', 'jwtData.sub', 'make_server_request', 'myAbout', 'setdidMyAboutMount', and 'userid'. Either include them or remove the dependency array.",["489"],"React Hook useEffect has a missing dependency: 'g'. Either include it or remove the dependency array.",["490"],"'username' is defined but never used.","React Hook useEffect has missing dependencies: 'didMyFriendsMount', 'jwtData.sub', 'make_server_request', 'myFriends', 'path', 'setDidMyFriendsMount', and 'userid'. Either include them or remove the dependency array.",["491"],"React Hook useEffect has missing dependencies: 'friendBtn', 'index', 'myFriends', 'pp', 'setFriendBtn', and 'value.username'. Either include them or remove the dependency array. If 'setFriendBtn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["492"],"'myFriendsIndex' is assigned a value but never used.","'setMyFriendsIndex' is assigned a value but never used.",["493"],"'useCallback' is defined but never used.","'UserNuLikes' is defined but never used.","'UserCardFooter' is defined but never used.","'userid' is defined but never used.","'from' is defined but never used.","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array.",["494"],"React Hook useEffect has missing dependencies: 'index', 'jwtData.sub', 'likeClick', 'likeLength', 'pp', and 'value.like'. Either include them or remove the dependency array. You can also do a functional update 'setLikeClick(l => ...)' if you only need 'likeClick' in the 'setLikeClick' call.",["495"],"'jwtData' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'get_users_liked'. Either include it or remove the dependency array.",["496"],["497"],"'useAsync' is defined but never used.","'postLoading' is assigned a value but never used.",["498"],"React Hook useEffect has missing dependencies: 'clickIndex', 'index', and 'objkey'. Either include them or remove the dependency array.",["499"],"React Hook useEffect has a missing dependency: 'tempResponse'. Either include it or remove the dependency array. You can also do a functional update 'setTempResponse(t => ...)' if you only need 'tempResponse' in the 'setTempResponse' call.",["500"],"React Hook useEffect has a missing dependency: 'msgArr'. Either include it or remove the dependency array. You can also do a functional update 'setMsgArr(m => ...)' if you only need 'msgArr' in the 'setMsgArr' call.",["501"],"React Hook useEffect has missing dependencies: 'get_my_messages', 'get_responses', and 'save_isreadtrue'. Either include them or remove the dependency array.",["502"],"React Hook useEffect has missing dependencies: 'myMsg' and 'response'. Either include them or remove the dependency array.",["503"],["504"],"React Hook useEffect has missing dependencies: 'pp' and 'username'. Either include them or remove the dependency array. You can also do a functional update 'setpp(p => ...)' if you only need 'pp' in the 'setpp' call.",["505"],"React Hook useEffect has missing dependencies: 'didMyChatListMount', 'get_chat_list', 'get_isread', and 'setDidMyChatListMount'. Either include them or remove the dependency array.",["506"],"React Hook useEffect has missing dependencies: 'isRead', 'ischange', 'myChatList', 'setIsRead', and 'setMyChatList'. Either include them or remove the dependency array. You can also do a functional update 'setischange(i => ...)' if you only need 'ischange' in the 'setischange' call.",["507"],"React Hook useEffect has missing dependencies: 'didMyFriendsMount', 'get_my_friends', 'get_users', and 'setDidMyFriendsMount'. Either include them or remove the dependency array.",["508"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"535","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"535","fix":"544"},{"desc":"511","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"525","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},"Update the dependencies array to be: [isAuth, isLogin, jwtData]",{"range":"565","text":"566"},"Update the dependencies array to be: [make_server_request]",{"range":"567","text":"568"},"Update the dependencies array to be: [update_value]",{"range":"569","text":"570"},"Update the dependencies array to be: [isAuth, setIsAuth]",{"range":"571","text":"572"},"Update the dependencies array to be: [make_server_request, searchValueChange, setSearchValueChange]",{"range":"573","text":"574"},"Update the dependencies array to be: [make_server_request, params, searchValueChange]",{"range":"575","text":"576"},"Update the dependencies array to be: [location.pathname, from, path, userid, jwtData.sub, get_posts, didMyPostsMount, setDidMyPostsMount, myPosts, didMyNewsFeedMount, setDidMyNewsFeedMount, myNewsfeed]",{"range":"577","text":"578"},"Update the dependencies array to be: [get_posts, myFriends.length, path]",{"range":"579","text":"580"},"Update the dependencies array to be: [didMyFriendsMount, get_myfriends, setDidMyFriendsMount]",{"range":"581","text":"582"},"Update the dependencies array to be: [from]",{"range":"583","text":"584"},"Update the dependencies array to be: [didMyAboutMount, jwtData.sub, location.pathname, make_server_request, myAbout, setdidMyAboutMount, userid]",{"range":"585","text":"586"},"Update the dependencies array to be: [g, result]",{"range":"587","text":"588"},"Update the dependencies array to be: [didMyFriendsMount, jwtData.sub, location.pathname, make_server_request, myFriends, path, setDidMyFriendsMount, userid]",{"range":"589","text":"590"},"Update the dependencies array to be: [friendBtn, index, myFriends, pp, setFriendBtn, value.username]",{"range":"591","text":"592"},{"range":"593","text":"592"},"Update the dependencies array to be: [pp, commentIconClicked, commentsLoading, index]",{"range":"594","text":"595"},"Update the dependencies array to be: [index, jwtData.sub, likeClick, likeLength, pp, value.like]",{"range":"596","text":"597"},"Update the dependencies array to be: [get_users_liked]",{"range":"598","text":"599"},{"range":"600","text":"592"},{"range":"601","text":"568"},"Update the dependencies array to be: [clickIndex, index, objkey]",{"range":"602","text":"603"},"Update the dependencies array to be: [socket, tempResponse]",{"range":"604","text":"605"},"Update the dependencies array to be: [msgArr, tempResponse]",{"range":"606","text":"607"},"Update the dependencies array to be: [get_my_messages, get_responses, save_isreadtrue]",{"range":"608","text":"609"},"Update the dependencies array to be: [myMsg, mymsgloading, response, responseloading]",{"range":"610","text":"611"},{"range":"612","text":"582"},"Update the dependencies array to be: [myFriends, pp, username]",{"range":"613","text":"614"},"Update the dependencies array to be: [didMyChatListMount, get_chat_list, get_isread, ischange, setDidMyChatListMount]",{"range":"615","text":"616"},"Update the dependencies array to be: [isRead, ischange, myChatList, setIsRead, setMyChatList, tempIsread]",{"range":"617","text":"618"},"Update the dependencies array to be: [didMyFriendsMount, get_my_friends, get_users, setDidMyFriendsMount]",{"range":"619","text":"620"},[4467,4475],"[isAuth, isLogin, jwtData]",[534,536],"[make_server_request]",[854,856],"[update_value]",[269,277],"[isAuth, setIsAuth]",[1490,1509],"[make_server_request, searchValueChange, setSearchValueChange]",[1825,1827],"[make_server_request, params, searchValueChange]",[4058,4083],"[location.pathname, from, path, userid, jwtData.sub, get_posts, didMyPostsMount, setDidMyPostsMount, myPosts, didMyNewsFeedMount, setDidMyNewsFeedMount, myNewsfeed]",[4193,4211],"[get_posts, myFriends.length, path]",[4976,4978],"[didMyFriendsMount, get_myfriends, setDidMyFriendsMount]",[6365,6367],"[from]",[1738,1757],"[didMyAboutMount, jwtData.sub, location.pathname, make_server_request, myAbout, setdidMyAboutMount, userid]",[2190,2198],"[g, result]",[2659,2678],"[didMyFriendsMount, jwtData.sub, location.pathname, make_server_request, myFriends, path, setDidMyFriendsMount, userid]",[2089,2091],"[friendBtn, index, myFriends, pp, setFriendBtn, value.username]",[1437,1439],[3291,3332],"[pp, commentIconClicked, commentsLoading, index]",[3593,3595],"[index, jwtData.sub, likeClick, likeLength, pp, value.like]",[1474,1476],"[get_users_liked]",[1493,1495],[1131,1133],[2459,2461],"[clickIndex, index, objkey]",[1245,1253],"[socket, tempResponse]",[1372,1386],"[msgArr, tempResponse]",[1596,1598],"[get_my_messages, get_responses, save_isreadtrue]",[3492,3523],"[myMsg, mymsgloading, response, responseloading]",[1577,1579],[1813,1824],"[myFriends, pp, username]",[2443,2453],"[didMyChatListMount, get_chat_list, get_isread, ischange, setDidMyChatListMount]",[3757,3769],"[isRead, ischange, myChatList, setIsRead, setMyChatList, tempIsread]",[2043,2045],"[didMyFriendsMount, get_my_friends, get_users, setDidMyFriendsMount]"]